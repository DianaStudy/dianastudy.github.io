{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"themes/next/source/logo.jpg","path":"logo.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.jpg","path":"images/logo.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/myhead.png","path":"images/myhead.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"1c7324e976b880113b623b50ec811296cec438d7","modified":1535537684106},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1535537684120},{"_id":"themes/next/.DS_Store","hash":"a0cb02a4bb6a771432ff700b00b813712ceda401","modified":1535537684120},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1535537684120},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1535537684120},{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1535537684121},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1535537684121},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1535537684121},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1535537684122},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1535537684122},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1535537684122},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1535537684122},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1535537684123},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1535537684123},{"_id":"themes/next/_config.yml","hash":"41e67b749bbfb681f8c3db1438230ca61bd16724","modified":1535537684123},{"_id":"themes/next/bower.json","hash":"936b9aed1934471bb74cdaacc3fb8031eb01fe23","modified":1535537684123},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1535537684124},{"_id":"themes/next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1535537684146},{"_id":"source/favicon.ico","hash":"3509622d99506029647d137a3b5d74b556f1546f","modified":1535537684116},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1535537684106},{"_id":"source/_posts/2-语义化.md","hash":"d287689fb3c346f0bd02c6ef06f8ca9c56ac1736","modified":1535537684107},{"_id":"source/_posts/1-HTML基础知识.md","hash":"38c2d17d048ddec71047b94a89ea970514a3fc3d","modified":1535537684106},{"_id":"source/_posts/2d游戏工具使用.md","hash":"35bdfdd2e4946f9edb081b90da31463a2aefe59d","modified":1535537684107},{"_id":"source/_posts/3-CSS基础知识.md","hash":"fee815dbc2f4c711004c23843f8bbd343928d098","modified":1535537684107},{"_id":"source/_posts/4-CSS规范.md","hash":"d51517ff28fbb38610b17918ec54c3b6894ad2c2","modified":1535537684107},{"_id":"source/_posts/5-盒子模型.md","hash":"bfe1f0e32efc2d4cb2cc1505f334f75dc775a8eb","modified":1535537684108},{"_id":"source/_posts/6-常用的标签和属性.md","hash":"c6f6a2ae304cbb03af5fc358f81442fdd25611c7","modified":1535537684108},{"_id":"source/_posts/6月定个目标.md","hash":"bfa164a278110e04fa5f3db7035fba70ee7b8bc8","modified":1535537684108},{"_id":"source/_posts/Android手机调试.md","hash":"5ca568b0954ce75f72b6df8a1f9734de8d6ae179","modified":1535537684108},{"_id":"source/_posts/7-布局和性能优化.md","hash":"c02dfb751ec9838631d4f94240ae51811a4c7466","modified":1535537684108},{"_id":"source/_posts/Cocos2d-JS开发.md","hash":"b447a5cf2a8edc9eae96beb65a587a3a20c014cc","modified":1535537684109},{"_id":"source/_posts/Cocos2d-x基础.md","hash":"7c4e88c9b7df5b4574d5e49b0e27a4c13be0338b","modified":1535537684109},{"_id":"source/_posts/css和js放在head标签中还是body中.md","hash":"89e3127abe25c35cb8c4bad8eb588063b21861a1","modified":1535537684109},{"_id":"source/_posts/Django学习.md","hash":"395059e108bfada303d7f69950aa48f1e4cb56f8","modified":1535537684109},{"_id":"source/_posts/git命令行.md","hash":"78274644d1f8d31507c6a3ddb7cb0aa49532ef86","modified":1535537684110},{"_id":"source/_posts/hexo命令行.md","hash":"bc48789e0de61d0c5f600666d48ffb360d606af1","modified":1535537684110},{"_id":"source/_posts/javascript基础知识.md","hash":"22678c3261b4653d1b0145092d48e08af87bb526","modified":1535537684110},{"_id":"source/_posts/javascript的几种输出方式.md","hash":"7a2f6d582520720daaea904e7020974a551b54e8","modified":1535537684111},{"_id":"source/_posts/markdown使用.md","hash":"d6a9912de018313a0b6ee80b89fd14cb354770cf","modified":1535537684111},{"_id":"source/_posts/javascript数组用法.md","hash":"55ccaad537dbade77b2102270d332fafe326468e","modified":1535537684110},{"_id":"source/_posts/mysql命令行.md","hash":"b582862b8c100f3b58555f0b98a32837cc4aec59","modified":1535537684111},{"_id":"source/_posts/mysql密码过期.md","hash":"d45dc6ac24855978a37c5fc3bd66f25437884d99","modified":1535537684111},{"_id":"source/_posts/python之os模块.md","hash":"ae31ea5dad2a721d30ba5c7b947772cab09060dc","modified":1535537684111},{"_id":"source/_posts/struts-config配置文件.md","hash":"1407f275fba27622f39a18a712cc9175cfc9619a","modified":1535537684112},{"_id":"source/_posts/svn命令行.md","hash":"9bac0faf88561a925a3fa4187acaa0eda5ca6bfe","modified":1535537684112},{"_id":"source/_posts/tornado学习.md","hash":"014bcc95a7d41194cec3863ad38aeb17f6159a1b","modified":1535537684112},{"_id":"source/_posts/vim常用命令行.md","hash":"037f36565bfbea165383958536a2d98c429d8764","modified":1535537684112},{"_id":"source/_posts/webstorm快捷键.md","hash":"9ad622f2847394e88dc15eb0f7efa5134463a6b6","modified":1535537684113},{"_id":"source/_posts/代码大全.md","hash":"66e9ab13e6362c1e098f8293fe641f4c591f3b26","modified":1535537684113},{"_id":"source/_posts/产品经理培训.md","hash":"e129be06417ec87b0605adaa70c994258c44efec","modified":1535537684113},{"_id":"source/_posts/使用原型方法的好处.md","hash":"c15a26eabeb21feb47bbf9cf9d1c415bf030fe66","modified":1535537684113},{"_id":"source/_posts/动感单车.md","hash":"474d4597c4dcdd781b9695d7d15369622114546d","modified":1535537684113},{"_id":"source/_posts/去健身.md","hash":"54202380580c693ded28ef78050ac20de80204c4","modified":1535537684114},{"_id":"source/_posts/提升个人卓越领导力.md","hash":"5ecaf654d3af67c772027590e076e0963ca64985","modified":1535537684114},{"_id":"source/_posts/浏览器兼容总结.md","hash":"a07785d6ce380a6bc1e748a067276f440b73ba0c","modified":1535537684114},{"_id":"source/_posts/瑜伽.md","hash":"22e5567d07e2007199683b338794ac01a25fb12b","modified":1535537684114},{"_id":"source/_posts/编程基础知识.md","hash":"3e6db4dc076bb1b2bc411a7b515078140dd0fc07","modified":1535537684114},{"_id":"source/_posts/肚皮舞.md","hash":"cacf1d1fbee92f8f6909feb8921217a3f73df5f5","modified":1535537684115},{"_id":"source/_posts/面向对象编程md.md","hash":"5728142c0a1820c94d299ea70482bf0a0fe5aa30","modified":1535537684115},{"_id":"source/about/index.md","hash":"e71e1bc32dfe6fdf90250450d72c6b72d88abf93","modified":1535537684115},{"_id":"source/archives/index.md","hash":"01a4bde87ae631263c03e82a605a8143cce70519","modified":1535537684115},{"_id":"source/categories/index.md","hash":"fad670a909bb53a691ad4b37ad79813a567a780f","modified":1535537684116},{"_id":"source/pageName/index.md","hash":"e28f57ab31919bb4bcf48eeefd1d9ecbb4b9aafa","modified":1535537684117},{"_id":"source/tags/index.md","hash":"a60d8f1283632f2f21cdeba54dbb10c1621323ed","modified":1535537684117},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1535537684121},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"4de856de657a27f340f245eb491a1f52ceba1735","modified":1535537684121},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1535537684124},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1535537684124},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1535537684124},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1535537684125},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1535537684125},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1535537684125},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1535537684125},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1535537684126},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1535537684126},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1535537684126},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1535537684126},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1535537684127},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1535537684127},{"_id":"themes/next/layout/_layout.swig","hash":"4f0ace15f1a24ad0a1f88724bbbec8b68a664598","modified":1535537684127},{"_id":"themes/next/layout/archive.swig","hash":"a1d1e91013baaaeb7deaf35c6d3975971ce38e02","modified":1535537684145},{"_id":"themes/next/layout/category.swig","hash":"f315f12651de8065fdad73b003da4335ef177173","modified":1535537684145},{"_id":"themes/next/layout/index.swig","hash":"4bf29f44ca9519a005671f2f2a79a48a148b435b","modified":1535537684145},{"_id":"themes/next/layout/page.swig","hash":"22ba721a9688d490fc66f360e5a319288b63b05a","modified":1535537684145},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1535537684145},{"_id":"themes/next/layout/schedule.swig","hash":"8086f1163b10460258ecbbbe48b057b22bb2f02e","modified":1535537684146},{"_id":"themes/next/layout/tag.swig","hash":"cc9878932580c890f8f3e569225e29bb37e25b49","modified":1535537684146},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1535537684146},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1535537684147},{"_id":"themes/next/source/.DS_Store","hash":"9748484cb8a8f5cdf39055569fdbec5a25098ef6","modified":1535537684149},{"_id":"themes/next/source/logo.jpg","hash":"1e26af9456279acf611f170ede2a115b5e98370d","modified":1535537684303},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1535537684305},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1535537684306},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1535537684306},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535537684211},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1535537684127},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1535537684127},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1535537684128},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1535537684128},{"_id":"themes/next/layout/_macro/post.swig","hash":"6f3c6078b9dbc238ccf86fb228c24c0b94f67d47","modified":1535537684128},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1535537684129},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1535537684129},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"4b029551ddb44c53f895e96cf8ff5ffbe02322fb","modified":1535537684129},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1535537684130},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1535537684130},{"_id":"themes/next/layout/_partials/head.swig","hash":"09b110f77c415c5b71ebd886771a10bc84b95633","modified":1535537684131},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1535537684131},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1535537684132},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1535537684132},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1535537684132},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1535537684134},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1535537684135},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1535537684136},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1535537684142},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1535537684142},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1535537684142},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1535537684142},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1535537684142},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1535537684143},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1535537684147},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1535537684148},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1535537684148},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1535537684148},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1535537684149},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1535537684149},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1535537684149},{"_id":"themes/next/source/css/.DS_Store","hash":"7e4135cf0f483e91973ab564437910d7e4e4643d","modified":1535537684150},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1535537684211},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1535537684212},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535537684212},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1535537684212},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1535537684213},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1535537684213},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1535537684213},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1535537684214},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1535537684214},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1535537684214},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535537684214},{"_id":"themes/next/source/images/logo.jpg","hash":"1e26af9456279acf611f170ede2a115b5e98370d","modified":1535537684214},{"_id":"themes/next/source/images/myhead.png","hash":"8a08c3b7dbc8740e509f55d22f0ec91535b0b62a","modified":1535537684215},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535537684215},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1535537684215},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1535537684215},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535537684216},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535537684135},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535537684135},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535537684190},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535537684190},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535537684195},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535537684209},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535537684211},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1535537684131},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1535537684131},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1535537684132},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1535537684132},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1535537684132},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1535537684133},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1535537684133},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1535537684133},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1535537684134},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1535537684135},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1535537684136},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1535537684137},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1535537684137},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1535537684138},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1535537684138},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1535537684138},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1535537684138},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1535537684138},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1535537684139},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1535537684139},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1535537684139},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1535537684139},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1535537684139},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1535537684140},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1535537684140},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1535537684140},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1535537684141},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1535537684141},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"c75024151fc63220e7d01035d8a1aff9affdecc7","modified":1535537684141},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1535537684141},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1535537684143},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"a0c042a74ea1afcb19daac7e2604a2bc5495037b","modified":1535537684144},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1535537684144},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1535537684144},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1535537684190},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1535537684191},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1535537684195},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1535537684209},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1535537684210},{"_id":"themes/next/source/css/_variables/base.styl","hash":"dacede1cc110c762e7a5468dc0e34ae1a962d5aa","modified":1535537684211},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1535537684216},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1535537684216},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1535537684217},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1535537684217},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1535537684219},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1535537684219},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1535537684219},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1535537684220},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1535537684220},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1535537684221},{"_id":"themes/next/source/js/src/utils.js","hash":"c976214b8bbaa9512b886bf3687e94696f705e33","modified":1535537684221},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1535537684234},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1535537684237},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"68db2c0bf1064176627199394f25f6dc37ea23ad","modified":1535537684241},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1535537684241},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1535537684241},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1535537684249},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1535537684250},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1535537684250},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1535537684252},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1535537684253},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1535537684254},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1535537684257},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1535537684257},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1535537684257},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1535537684274},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1535537684275},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1535537684275},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1535537684276},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1535537684280},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1535537684280},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1535537684281},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1535537684281},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1535537684281},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1535537684285},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1535537684285},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1535537684286},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1535537684286},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1535537684286},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1535537684286},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1535537684287},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1535537684287},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1535537684287},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1535537684287},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1535537684287},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1535537684288},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1535537684288},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1535537684289},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1535537684289},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1535537684295},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1535537684295},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1535537684300},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1535537684300},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1535537684301},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1535537684275},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1535537684143},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1535537684143},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1535537684150},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1535537684151},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1535537684150},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1535537684151},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1535537684152},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1535537684157},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1535537684165},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1535537684187},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1535537684188},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1535537684188},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1535537684189},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1535537684189},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1535537684190},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1535537684196},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1535537684196},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1535537684196},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1535537684199},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1535537684200},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1535537684200},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1535537684200},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1535537684201},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1535537684202},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1535537684202},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1535537684204},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1535537684204},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1535537684205},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1535537684205},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1535537684205},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1535537684207},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1535537684208},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1535537684208},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1535537684220},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"95518d298d3c5c271faec2e4977df9e5dedd5d84","modified":1535537684227},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1535537684234},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535537684241},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535537684242},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535537684242},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535537684244},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535537684245},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535537684245},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1535537684248},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1535537684249},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1535537684249},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1535537684253},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1535537684253},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1535537684258},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1535537684258},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1535537684260},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1535537684294},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1535537684294},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"524cfca7b6ab135d81ea723d8de06fdf0dbe7e56","modified":1535537684226},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1535537684227},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1535537684273},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1535537684274},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1535537684296},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1535537684152},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"c066e1b4d8ec760989b83248e3a84d40e1fbe847","modified":1535537684152},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1535537684152},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1535537684153},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1535537684153},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1535537684154},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1535537684153},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1535537684154},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1535537684154},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1535537684155},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1535537684155},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1535537684156},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1535537684156},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1535537684156},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1535537684157},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1535537684157},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1535537684158},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1535537684158},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"58f9e6aba94733244a87d2ba5966c5a009486509","modified":1535537684159},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1535537684159},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"658accf8e196721f295003da66941e6d1f7b81b0","modified":1535537684159},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1535537684159},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1535537684160},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1535537684160},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1535537684160},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1535537684161},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1535537684161},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"268c9704481fdb0b4d1e646196386143990fe235","modified":1535537684161},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bc08cfb2ef2ff44ba3fc7dffdb2deb01a9d17d15","modified":1535537684161},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1535537684162},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1535537684162},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1535537684164},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1535537684164},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1535537684164},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1535537684164},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1535537684165},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1535537684165},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1535537684165},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1535537684166},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1535537684166},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1535537684166},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1535537684182},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1535537684182},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1535537684182},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1535537684183},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1535537684183},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1535537684185},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1535537684185},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1535537684186},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1535537684186},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1535537684186},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1535537684186},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"eb45ee16051624c6e36a274c0a9538e961f10c4d","modified":1535537684187},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1535537684201},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1535537684201},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1535537684204},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1535537684222},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1535537684222},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1535537684222},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1535537684225},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1535537684246},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535537684245},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1535537684247},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1535537684248},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1535537684248},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1535537684248},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1535537684261},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1535537684263},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1535537684273},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1535537684237},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1535537684294},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1535537684271},{"_id":"public/about/index.html","hash":"6995c77a45137cf3e33b11cf15c3d4b1754bacb2","modified":1538993573122},{"_id":"public/categories/index.html","hash":"6b224aa8ac65a283931fdbb9a56708a994407c1c","modified":1538993573122},{"_id":"public/pageName/index.html","hash":"c031c0bc322d55138af7180b7df0583085e73a84","modified":1538993573122},{"_id":"public/tags/index.html","hash":"41b4af9e2b6a7a753cce7dac8b83635b0dc30d8b","modified":1538993573122},{"_id":"public/2018/05/18/tornado学习/index.html","hash":"da78e576e60150738cac6ad3b8b618f464b2735a","modified":1538993573123},{"_id":"public/2018/01/11/面向对象编程md/index.html","hash":"b93960f65da164d4a4a5dcb6de3c684a9e197cf0","modified":1538993573123},{"_id":"public/2017/12/11/mysql密码过期/index.html","hash":"ffb8fff563bed2dd7130deeecb048c5f34d569b8","modified":1538993573123},{"_id":"public/2017/12/07/python之os模块/index.html","hash":"af09e6d85d49c6c83cc1ea7a8b99c76478eb8e73","modified":1538993573123},{"_id":"public/2017/10/12/Android手机调试/index.html","hash":"d103d1c69e8945e0eba43d28c87223e0ae05a098","modified":1538993573123},{"_id":"public/2017/10/09/webstorm快捷键/index.html","hash":"1c0c3ab4d9d8079ad8a674cdc9f4d6145f2c47b7","modified":1538993573123},{"_id":"public/2017/09/21/javascript数组用法/index.html","hash":"e72f6d106a10a382d76c121b9d71ab2196e32c0f","modified":1538993573123},{"_id":"public/2017/09/20/使用原型方法的好处/index.html","hash":"3864796c780eebbbf7d31a1db30430a78258ab01","modified":1538993573123},{"_id":"public/2017/09/19/javascript的几种输出方式/index.html","hash":"c343346a5867fd3ab1fe07f116df347e27761c9d","modified":1538993573123},{"_id":"public/2017/09/19/css和js放在head标签中还是body中/index.html","hash":"53a8013c97572483689db2051d2fd40844d3e7cf","modified":1538993573123},{"_id":"public/2017/09/13/mysql命令行/index.html","hash":"99e6959ff2cc4e693399fed125a269039f788857","modified":1538993573123},{"_id":"public/2017/08/31/svn命令行/index.html","hash":"ce9bc5899251e893dd4720928fa1161c4a89363e","modified":1538993573123},{"_id":"public/2017/08/29/Cocos2d-JS开发/index.html","hash":"617e55029eb5e081189c86c3d2f361577f083be9","modified":1538993573124},{"_id":"public/2017/08/07/vim常用命令行/index.html","hash":"4c9255b6508e82b12dd8514ff5896cb5b42ab7d1","modified":1538993573124},{"_id":"public/2017/07/29/提升个人卓越领导力/index.html","hash":"f9648dd0213a1455954e4e44eb6acace7a3a8e53","modified":1538993573124},{"_id":"public/2017/07/27/javascript基础知识/index.html","hash":"1289a5df5e2034a2b37b09c39e409bc7573d7bc3","modified":1538993573124},{"_id":"public/2017/07/25/肚皮舞/index.html","hash":"2f7a67ca19d083214930ccd36cb7991883aae38f","modified":1538993573124},{"_id":"public/2017/07/25/瑜伽/index.html","hash":"24a9afa47fa19a17034d3ea2dba3e8c82dd95f88","modified":1538993573124},{"_id":"public/2017/07/25/动感单车/index.html","hash":"29e0a692b5fbc73e03e903ed242f884930bbbb67","modified":1538993573124},{"_id":"public/2017/07/24/编程基础知识/index.html","hash":"5a1f1f3ee94a6d2990690c10c8c98d238b6b4e74","modified":1538993573124},{"_id":"public/2017/07/12/2d游戏工具使用/index.html","hash":"424b840215397b91ef9f46ea601a0cbe2eb28a68","modified":1538993573124},{"_id":"public/2017/07/11/Cocos2d-x基础/index.html","hash":"4a53fe7b090017272620afe487d738baeddbfb9d","modified":1538993573124},{"_id":"public/2017/06/22/去健身/index.html","hash":"7ea0594c3b8afcd74e7a66fa5abe288da2d06f55","modified":1538993573124},{"_id":"public/2017/06/09/7-布局和性能优化/index.html","hash":"9899e8b99dc132e14a8ae63a871d2d5a75e51584","modified":1538993573124},{"_id":"public/2017/06/08/产品经理培训/index.html","hash":"2de91de3fb312d021f270796c25e093eeba41553","modified":1538993573124},{"_id":"public/2017/06/07/6-常用的标签和属性/index.html","hash":"33e4bb555888b7094c03094a2b06ff759974f3b2","modified":1538993573124},{"_id":"public/2017/06/07/5-盒子模型/index.html","hash":"a90865f5826264da469c01f68dc58d4083712f14","modified":1538993573125},{"_id":"public/2017/06/06/浏览器兼容总结/index.html","hash":"67177df707351eaf9dd4b05d28943f73f900df54","modified":1538993573125},{"_id":"public/2017/06/05/6月定个目标/index.html","hash":"3af9af2ee0a31d7cf33b874902818b23ad048b82","modified":1538993573125},{"_id":"public/2017/06/03/4-CSS规范/index.html","hash":"7ee4e780c53e35905b4622522edd3c3d84c49d81","modified":1538993573125},{"_id":"public/2017/06/02/hexo命令行/index.html","hash":"e40b280b7442ad1c94dbb750512edc97a63322da","modified":1538993573125},{"_id":"public/2017/06/02/git命令行/index.html","hash":"a2dcae68a05257fac2862532113cef3a20295ef2","modified":1538993573125},{"_id":"public/archives/2017/page/4/index.html","hash":"f9552b7b12ec40b66bd5332e1a236503be5a4886","modified":1538993573125},{"_id":"public/archives/2017/06/page/2/index.html","hash":"dd65391baff1fd4ce37f33aac911fdd077c1406a","modified":1538993573125},{"_id":"public/archives/2017/07/index.html","hash":"fe46aad56d3587589af1002ac5ce2ad3e79dcd01","modified":1538993573125},{"_id":"public/archives/2017/08/index.html","hash":"9302d00c49a655b880ce7947449a41c4a2146f1c","modified":1538993573125},{"_id":"public/archives/2017/09/index.html","hash":"1b487be17f858c093756344460ca4e537c77b382","modified":1538993573125},{"_id":"public/archives/2017/10/index.html","hash":"472ab7b98be3fc029b30ae42cef25c1d78c159cf","modified":1538993573125},{"_id":"public/archives/2017/12/index.html","hash":"0d40764de9f72eb2941e4d65d5143488295a494a","modified":1538993573125},{"_id":"public/archives/2018/index.html","hash":"aef2b4044bba518c8aac27448a75b84141f83d7b","modified":1538993573125},{"_id":"public/archives/2018/01/index.html","hash":"cc60e76020affadc1dbbfa208e5d1b9a811c9369","modified":1538993573126},{"_id":"public/archives/2018/03/index.html","hash":"18510f386e491397e6c23829ac438f78a703a90e","modified":1538993573126},{"_id":"public/archives/2018/05/index.html","hash":"4ba1bdb3e3035df351c9a1a30243a40bf66a3ecf","modified":1538993573126},{"_id":"public/tags/html/index.html","hash":"3f802d889b1da01793b5fb79c67f7570784c3d91","modified":1538993573126},{"_id":"public/tags/游戏/index.html","hash":"06a29b8a91005965e9c82be559773a4ade041f50","modified":1538993573126},{"_id":"public/tags/工具/index.html","hash":"c1823a0948df8f261e10fe7ef89b76b2fc3c0a5b","modified":1538993573126},{"_id":"public/tags/总结/index.html","hash":"3f958f296cbd90933ac7f0b02ba7786c1f3fd876","modified":1538993573126},{"_id":"public/tags/javascript/index.html","hash":"ea516401008bc109c0fca133438a8d974f51b32f","modified":1538993573126},{"_id":"public/tags/命令行/index.html","hash":"fd45d44ff2e5718fe865213d0130a0ec47ad45fa","modified":1538993573126},{"_id":"public/tags/框架/index.html","hash":"2870de47942cf0fe4915bfcae74115fab01c06e3","modified":1538993573126},{"_id":"public/tags/python/index.html","hash":"a38f0f4e85eb62a53db96ab54c89feab650acf32","modified":1538993573126},{"_id":"public/tags/编程/index.html","hash":"7195189a435da2701389d2e6e7c60cd6c34723d3","modified":1538993573126},{"_id":"public/tags/培训/index.html","hash":"0ad1115ddc370a4fe65d08846cc65ff01d339dfc","modified":1538993573126},{"_id":"public/tags/运动/index.html","hash":"eb2330d54bb0e0e12f6d24e0ff29607e31d320bf","modified":1538993573126},{"_id":"public/archives/index.html","hash":"1077a5e1a5690da3e35cfd715d759ed746c2fa6f","modified":1538993573127},{"_id":"public/2018/03/02/struts-config配置文件/index.html","hash":"f3e8edc4db695b50fa2302a92545dc1feab44128","modified":1538993573127},{"_id":"public/2017/06/17/代码大全/index.html","hash":"ffa8907f8e49b82b74dbae2f3392b49ccf5d9f0f","modified":1538993573127},{"_id":"public/2017/06/07/Django学习/index.html","hash":"93d03c70acbeeaaa3a9d2c389f3947a0ebe8cb53","modified":1538993573127},{"_id":"public/2017/06/02/3-CSS基础知识/index.html","hash":"b85b330e89dfd9f144b3da4d66b79af5b3063a8b","modified":1538993573127},{"_id":"public/2017/06/02/2-语义化/index.html","hash":"5d519c99bcfc7385cd22f9a681a043642b4bc12f","modified":1538993573127},{"_id":"public/2017/06/02/1-HTML基础知识/index.html","hash":"70244950a34a2dde99c6398451f889a7d5731733","modified":1538993573127},{"_id":"public/2017/06/02/markdown使用/index.html","hash":"3bcf4db09f1480d6913c5a4325effee2590156e7","modified":1538993573127},{"_id":"public/archives/page/2/index.html","hash":"698d74e6ce46518c5efc9f52447e1081b895815c","modified":1538993573127},{"_id":"public/archives/page/3/index.html","hash":"569b2a5cd26cd420a5f98dabe65e335721659405","modified":1538993573127},{"_id":"public/archives/page/4/index.html","hash":"28e46662e0ac917ca72212ad86c8cab324546da8","modified":1538993573127},{"_id":"public/archives/2017/index.html","hash":"27731280efc373bb5eedee824e3cda723ca0bfa8","modified":1538993573127},{"_id":"public/archives/2017/page/2/index.html","hash":"cf877eae8fdedf9f496152441e0b9bf44902ce29","modified":1538993573127},{"_id":"public/archives/2017/page/3/index.html","hash":"0e6eabbd30d1051d138e73c2ffc4a2d72e0cefe1","modified":1538993573127},{"_id":"public/archives/2017/06/index.html","hash":"16b26e3092afd48730adebe451babad247946072","modified":1538993573128},{"_id":"public/index.html","hash":"ccd5de8112faaa45d84fbf6f955b0b3511aaff70","modified":1538993573128},{"_id":"public/page/2/index.html","hash":"c580ab62acd4de7a84c3948c11b39f734339f871","modified":1538993573128},{"_id":"public/page/3/index.html","hash":"3e5f6b80276e59acae6b230abe1e4b14d26e8ec3","modified":1538993573128},{"_id":"public/page/4/index.html","hash":"1c21dc073b2d70b40a55f66b27c181f58c2b0362","modified":1538993573128},{"_id":"public/logo.jpg","hash":"1e26af9456279acf611f170ede2a115b5e98370d","modified":1538993573140},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1538993573140},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1538993573140},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1538993573140},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1538993573140},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1538993573140},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1538993573140},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1538993573140},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1538993573140},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1538993573140},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1538993573140},{"_id":"public/images/logo.jpg","hash":"1e26af9456279acf611f170ede2a115b5e98370d","modified":1538993573140},{"_id":"public/images/myhead.png","hash":"8a08c3b7dbc8740e509f55d22f0ec91535b0b62a","modified":1538993573140},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1538993573141},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1538993573141},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1538993573141},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1538993573141},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1538993573141},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1538993573141},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1538993573141},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1538993573141},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1538993573141},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1538993573141},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1538993573141},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1538993573141},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1538993573141},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1538993573141},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1538993573141},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1538993573142},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1538993573142},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1538993573142},{"_id":"public/favicon.ico","hash":"3509622d99506029647d137a3b5d74b556f1546f","modified":1538993573690},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1538993573691},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1538993573701},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1538993573709},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1538993573709},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1538993573709},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1538993573709},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1538993573709},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1538993573709},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1538993573710},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1538993573710},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1538993573710},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1538993573710},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1538993573710},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1538993573710},{"_id":"public/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1538993573710},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1538993573710},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1538993573710},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1538993573710},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1538993573710},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1538993573710},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1538993573710},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1538993573711},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1538993573711},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1538993573711},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1538993573711},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1538993573711},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1538993573712},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1538993573712},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1538993573712},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1538993573712},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1538993573712},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1538993573712},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1538993573712},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1538993573712},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1538993573712},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1538993573712},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1538993573713},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1538993573713},{"_id":"public/css/main.css","hash":"7d7369fda29bfa88c22060dad28f61630da92575","modified":1538993573713},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1538993573713},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1538993573713},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1538993573713},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1538993573713},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1538993573713},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1538993573713},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1538993573713},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1538993573713},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1538993573714},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1538993573714},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1538993573714},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1538993573714},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1538993573714},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1538993573714},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1538993573714},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1538993573714},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1538993573714},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1538993573714},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1538993573714},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1538993573715},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1538993573715},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1538993573763}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2017-06-02T05:21:08.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-06-02 13:21:08\ntype: about\n---\n","updated":"2018-08-29T10:14:44.115Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjn0519yq0001xcno5un7l5yj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"archives","date":"2017-06-02T07:52:54.000Z","type":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2017-06-02 15:52:54\ntype: archives\n---\n","updated":"2018-08-29T10:14:44.115Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cjn0519ys0003xcnokih96l83","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2017-06-02T05:22:07.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-06-02 13:22:07\ntype: categories\n---\n","updated":"2018-08-29T10:14:44.116Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjn0519yv0006xcno5b9zgm1m","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"pageName","date":"2017-06-02T05:20:37.000Z","_content":"","source":"pageName/index.md","raw":"---\ntitle: pageName\ndate: 2017-06-02 13:20:37\n---\n","updated":"2018-08-29T10:14:44.117Z","path":"pageName/index.html","comments":1,"layout":"page","_id":"cjn051a4q002qxcnomjnbc51w","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-06-02T05:22:21.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-06-02 13:22:21\ntype: tags\n---\n","updated":"2018-08-29T10:14:44.117Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjn051a4r002rxcno6fudckwt","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2-语义化","date":"2017-06-02T13:33:51.000Z","_content":"\n# 第二章\n\n#### 2.1 语义化   \nWeb前端开发最核心的3个技术：HTML、CSS、JavaScript。HTML控制网页的结构，CSS控制网页的样式，JavaScript控制网页的行为。  \n\n* P标签，表示的是“paragraph”，标记的是一个段落  \n* h1标签，表示的是“header1”，标记的是一个最高级的标题  \n* div和span是无语义的标签，我们应该尽可能少用  \n\n#### 2.2 标题语义化  \nh1~h6是标题标签，按照标题的重要性一次递减，其中h1重要性最高，h6重要性最低。  \n\n注意：   \n（1）一个页面只能有一个h1标签  \n（2）h1~h6之间不要断层  \n（3）不要用h1~h6来定义样式  \n（4）不要用div来代替h1~h6  \n\n#### 2.3 图片语义化  \nhtml中，我们使用img标签来标示图片  \n\n2.3.1 alt属性和title属性  \n\n * alt属性用于图片描述，这个描述文字是给搜索引擎看的。当图片无法显示时，页面会显示alt中的文字  \n \n * title属性也用于图片描述，这个描述文字是给用户看的。并且当鼠标指针移到图片上时，会显示title中的内容\n   \n 注意：alt属性是img标签必须属性，一定要添加。title属性是img标签可选属性，可加可不加  \n \n2.3.2 figure和figcaption元素  \n figure和figcaption元素用于表示图注文字,语法：  \n < figure \\>  \n  用于包含图片  \n  < img src=\"\" alt=\"\" / \\>  \n  < figcaption \\>图注< / figcaption \\>  \n < /figure \\>\n \n#### 2.4 表格语义化\n 常用table、tr、td  \n 还有5个不常用：th、caption、thread、tbody、tfoot  \n \n#### 2.5 表单语义化\n （1）label标签：用于显示在输入控件旁边的说明性文字，for属性值为所关联的表单元素的id  \n      label标签for属性的作用：   \n       1. 语义上绑定了label元素和表单元素  \n       2. 增强了鼠标可用性 \n        \n（2）fieldset标签和legend标签  \n      fieldset标签来给表单元素进行分组  \n      legend标签用于定义某一组表单的标题  \n      作用：  \n      增强表单的语义  \n      可以定义fieldset元素的disabled属性来禁用整个组中的表单元素  \n      语法：    \n      < fieldset \\>  \n        < legend \\>表单组标题< /legend \\>  \n          ...  \n       < /fieldset \\>\n       \n#### 2.6 其他语义化\n 2.6.1 < br/ \\>标签用于换行  \n    W3C标准规定，< br/ \\>标签仅仅用于段落中的换行，不能用于其他情况，也就是说< br /\\>标签只适合用于p标签内部的换行，不能用与其他标签。\n      \n 2.6.2 无序列表ul\n    < ul \\>< li \\>< /li \\>< /ul \\>  \n    \n 2.6.3 strong和em标签  \n    strong用于实现加粗文本，em用于实现倾斜体文本   \n \n 2.6.4 del和ins标签    \n    这两个标签是配合使用的（例如:原价：---，现价：---）    \n    del表示“delete”  \n    ins表示“insert” \n     \n 2.6.5 img标签  \n    想要在页面上显示一张图片，有两种方式：  \n    一是使用img标签（通过html实现）  \n    二是使用背景图片（通过css实现）  \n    \n\n","source":"_posts/2-语义化.md","raw":"---\ntitle: 2-语义化\ndate: 2017-06-02 21:33:51\ntags: html\n---\n\n# 第二章\n\n#### 2.1 语义化   \nWeb前端开发最核心的3个技术：HTML、CSS、JavaScript。HTML控制网页的结构，CSS控制网页的样式，JavaScript控制网页的行为。  \n\n* P标签，表示的是“paragraph”，标记的是一个段落  \n* h1标签，表示的是“header1”，标记的是一个最高级的标题  \n* div和span是无语义的标签，我们应该尽可能少用  \n\n#### 2.2 标题语义化  \nh1~h6是标题标签，按照标题的重要性一次递减，其中h1重要性最高，h6重要性最低。  \n\n注意：   \n（1）一个页面只能有一个h1标签  \n（2）h1~h6之间不要断层  \n（3）不要用h1~h6来定义样式  \n（4）不要用div来代替h1~h6  \n\n#### 2.3 图片语义化  \nhtml中，我们使用img标签来标示图片  \n\n2.3.1 alt属性和title属性  \n\n * alt属性用于图片描述，这个描述文字是给搜索引擎看的。当图片无法显示时，页面会显示alt中的文字  \n \n * title属性也用于图片描述，这个描述文字是给用户看的。并且当鼠标指针移到图片上时，会显示title中的内容\n   \n 注意：alt属性是img标签必须属性，一定要添加。title属性是img标签可选属性，可加可不加  \n \n2.3.2 figure和figcaption元素  \n figure和figcaption元素用于表示图注文字,语法：  \n < figure \\>  \n  用于包含图片  \n  < img src=\"\" alt=\"\" / \\>  \n  < figcaption \\>图注< / figcaption \\>  \n < /figure \\>\n \n#### 2.4 表格语义化\n 常用table、tr、td  \n 还有5个不常用：th、caption、thread、tbody、tfoot  \n \n#### 2.5 表单语义化\n （1）label标签：用于显示在输入控件旁边的说明性文字，for属性值为所关联的表单元素的id  \n      label标签for属性的作用：   \n       1. 语义上绑定了label元素和表单元素  \n       2. 增强了鼠标可用性 \n        \n（2）fieldset标签和legend标签  \n      fieldset标签来给表单元素进行分组  \n      legend标签用于定义某一组表单的标题  \n      作用：  \n      增强表单的语义  \n      可以定义fieldset元素的disabled属性来禁用整个组中的表单元素  \n      语法：    \n      < fieldset \\>  \n        < legend \\>表单组标题< /legend \\>  \n          ...  \n       < /fieldset \\>\n       \n#### 2.6 其他语义化\n 2.6.1 < br/ \\>标签用于换行  \n    W3C标准规定，< br/ \\>标签仅仅用于段落中的换行，不能用于其他情况，也就是说< br /\\>标签只适合用于p标签内部的换行，不能用与其他标签。\n      \n 2.6.2 无序列表ul\n    < ul \\>< li \\>< /li \\>< /ul \\>  \n    \n 2.6.3 strong和em标签  \n    strong用于实现加粗文本，em用于实现倾斜体文本   \n \n 2.6.4 del和ins标签    \n    这两个标签是配合使用的（例如:原价：---，现价：---）    \n    del表示“delete”  \n    ins表示“insert” \n     \n 2.6.5 img标签  \n    想要在页面上显示一张图片，有两种方式：  \n    一是使用img标签（通过html实现）  \n    二是使用背景图片（通过css实现）  \n    \n\n","slug":"2-语义化","published":1,"updated":"2018-08-29T10:14:44.107Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519yl0000xcnovfiifoof","content":"<h1 id=\"第二章\"><a href=\"#第二章\" class=\"headerlink\" title=\"第二章\"></a>第二章</h1><h4 id=\"2-1-语义化\"><a href=\"#2-1-语义化\" class=\"headerlink\" title=\"2.1 语义化\"></a>2.1 语义化</h4><p>Web前端开发最核心的3个技术：HTML、CSS、JavaScript。HTML控制网页的结构，CSS控制网页的样式，JavaScript控制网页的行为。  </p>\n<ul>\n<li>P标签，表示的是“paragraph”，标记的是一个段落  </li>\n<li>h1标签，表示的是“header1”，标记的是一个最高级的标题  </li>\n<li>div和span是无语义的标签，我们应该尽可能少用  </li>\n</ul>\n<h4 id=\"2-2-标题语义化\"><a href=\"#2-2-标题语义化\" class=\"headerlink\" title=\"2.2 标题语义化\"></a>2.2 标题语义化</h4><p>h1~h6是标题标签，按照标题的重要性一次递减，其中h1重要性最高，h6重要性最低。  </p>\n<p>注意：<br>（1）一个页面只能有一个h1标签<br>（2）h1~h6之间不要断层<br>（3）不要用h1~h6来定义样式<br>（4）不要用div来代替h1~h6  </p>\n<h4 id=\"2-3-图片语义化\"><a href=\"#2-3-图片语义化\" class=\"headerlink\" title=\"2.3 图片语义化\"></a>2.3 图片语义化</h4><p>html中，我们使用img标签来标示图片  </p>\n<p>2.3.1 alt属性和title属性  </p>\n<ul>\n<li><p>alt属性用于图片描述，这个描述文字是给搜索引擎看的。当图片无法显示时，页面会显示alt中的文字  </p>\n</li>\n<li><p>title属性也用于图片描述，这个描述文字是给用户看的。并且当鼠标指针移到图片上时，会显示title中的内容</p>\n<p>注意：alt属性是img标签必须属性，一定要添加。title属性是img标签可选属性，可加可不加  </p>\n</li>\n</ul>\n<p>2.3.2 figure和figcaption元素<br> figure和figcaption元素用于表示图注文字,语法：<br> &lt; figure ><br>  用于包含图片<br>  &lt; img src=”” alt=”” / ><br>  &lt; figcaption >图注&lt; / figcaption ><br> &lt; /figure ></p>\n<h4 id=\"2-4-表格语义化\"><a href=\"#2-4-表格语义化\" class=\"headerlink\" title=\"2.4 表格语义化\"></a>2.4 表格语义化</h4><p> 常用table、tr、td<br> 还有5个不常用：th、caption、thread、tbody、tfoot  </p>\n<h4 id=\"2-5-表单语义化\"><a href=\"#2-5-表单语义化\" class=\"headerlink\" title=\"2.5 表单语义化\"></a>2.5 表单语义化</h4><p> （1）label标签：用于显示在输入控件旁边的说明性文字，for属性值为所关联的表单元素的id<br>      label标签for属性的作用：   </p>\n<pre><code>1. 语义上绑定了label元素和表单元素  \n2. 增强了鼠标可用性 \n</code></pre><p>（2）fieldset标签和legend标签<br>      fieldset标签来给表单元素进行分组<br>      legend标签用于定义某一组表单的标题<br>      作用：<br>      增强表单的语义<br>      可以定义fieldset元素的disabled属性来禁用整个组中的表单元素<br>      语法：<br>      &lt; fieldset ><br>        &lt; legend >表单组标题&lt; /legend ><br>          …<br>       &lt; /fieldset ></p>\n<h4 id=\"2-6-其他语义化\"><a href=\"#2-6-其他语义化\" class=\"headerlink\" title=\"2.6 其他语义化\"></a>2.6 其他语义化</h4><p> 2.6.1 &lt; br/ >标签用于换行<br>    W3C标准规定，&lt; br/ >标签仅仅用于段落中的换行，不能用于其他情况，也就是说&lt; br />标签只适合用于p标签内部的换行，不能用与其他标签。</p>\n<p> 2.6.2 无序列表ul<br>    &lt; ul >&lt; li >&lt; /li >&lt; /ul >  </p>\n<p> 2.6.3 strong和em标签<br>    strong用于实现加粗文本，em用于实现倾斜体文本   </p>\n<p> 2.6.4 del和ins标签<br>    这两个标签是配合使用的（例如:原价：—，现价：—）<br>    del表示“delete”<br>    ins表示“insert” </p>\n<p> 2.6.5 img标签<br>    想要在页面上显示一张图片，有两种方式：<br>    一是使用img标签（通过html实现）<br>    二是使用背景图片（通过css实现）  </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"第二章\"><a href=\"#第二章\" class=\"headerlink\" title=\"第二章\"></a>第二章</h1><h4 id=\"2-1-语义化\"><a href=\"#2-1-语义化\" class=\"headerlink\" title=\"2.1 语义化\"></a>2.1 语义化</h4><p>Web前端开发最核心的3个技术：HTML、CSS、JavaScript。HTML控制网页的结构，CSS控制网页的样式，JavaScript控制网页的行为。  </p>\n<ul>\n<li>P标签，表示的是“paragraph”，标记的是一个段落  </li>\n<li>h1标签，表示的是“header1”，标记的是一个最高级的标题  </li>\n<li>div和span是无语义的标签，我们应该尽可能少用  </li>\n</ul>\n<h4 id=\"2-2-标题语义化\"><a href=\"#2-2-标题语义化\" class=\"headerlink\" title=\"2.2 标题语义化\"></a>2.2 标题语义化</h4><p>h1~h6是标题标签，按照标题的重要性一次递减，其中h1重要性最高，h6重要性最低。  </p>\n<p>注意：<br>（1）一个页面只能有一个h1标签<br>（2）h1~h6之间不要断层<br>（3）不要用h1~h6来定义样式<br>（4）不要用div来代替h1~h6  </p>\n<h4 id=\"2-3-图片语义化\"><a href=\"#2-3-图片语义化\" class=\"headerlink\" title=\"2.3 图片语义化\"></a>2.3 图片语义化</h4><p>html中，我们使用img标签来标示图片  </p>\n<p>2.3.1 alt属性和title属性  </p>\n<ul>\n<li><p>alt属性用于图片描述，这个描述文字是给搜索引擎看的。当图片无法显示时，页面会显示alt中的文字  </p>\n</li>\n<li><p>title属性也用于图片描述，这个描述文字是给用户看的。并且当鼠标指针移到图片上时，会显示title中的内容</p>\n<p>注意：alt属性是img标签必须属性，一定要添加。title属性是img标签可选属性，可加可不加  </p>\n</li>\n</ul>\n<p>2.3.2 figure和figcaption元素<br> figure和figcaption元素用于表示图注文字,语法：<br> &lt; figure ><br>  用于包含图片<br>  &lt; img src=”” alt=”” / ><br>  &lt; figcaption >图注&lt; / figcaption ><br> &lt; /figure ></p>\n<h4 id=\"2-4-表格语义化\"><a href=\"#2-4-表格语义化\" class=\"headerlink\" title=\"2.4 表格语义化\"></a>2.4 表格语义化</h4><p> 常用table、tr、td<br> 还有5个不常用：th、caption、thread、tbody、tfoot  </p>\n<h4 id=\"2-5-表单语义化\"><a href=\"#2-5-表单语义化\" class=\"headerlink\" title=\"2.5 表单语义化\"></a>2.5 表单语义化</h4><p> （1）label标签：用于显示在输入控件旁边的说明性文字，for属性值为所关联的表单元素的id<br>      label标签for属性的作用：   </p>\n<pre><code>1. 语义上绑定了label元素和表单元素  \n2. 增强了鼠标可用性 \n</code></pre><p>（2）fieldset标签和legend标签<br>      fieldset标签来给表单元素进行分组<br>      legend标签用于定义某一组表单的标题<br>      作用：<br>      增强表单的语义<br>      可以定义fieldset元素的disabled属性来禁用整个组中的表单元素<br>      语法：<br>      &lt; fieldset ><br>        &lt; legend >表单组标题&lt; /legend ><br>          …<br>       &lt; /fieldset ></p>\n<h4 id=\"2-6-其他语义化\"><a href=\"#2-6-其他语义化\" class=\"headerlink\" title=\"2.6 其他语义化\"></a>2.6 其他语义化</h4><p> 2.6.1 &lt; br/ >标签用于换行<br>    W3C标准规定，&lt; br/ >标签仅仅用于段落中的换行，不能用于其他情况，也就是说&lt; br />标签只适合用于p标签内部的换行，不能用与其他标签。</p>\n<p> 2.6.2 无序列表ul<br>    &lt; ul >&lt; li >&lt; /li >&lt; /ul >  </p>\n<p> 2.6.3 strong和em标签<br>    strong用于实现加粗文本，em用于实现倾斜体文本   </p>\n<p> 2.6.4 del和ins标签<br>    这两个标签是配合使用的（例如:原价：—，现价：—）<br>    del表示“delete”<br>    ins表示“insert” </p>\n<p> 2.6.5 img标签<br>    想要在页面上显示一张图片，有两种方式：<br>    一是使用img标签（通过html实现）<br>    二是使用背景图片（通过css实现）  </p>\n"},{"title":"xcode和模拟器快捷键","date":"2017-07-12T08:05:50.000Z","_content":"\nmac上CocosBuilder的使用，有一篇不错的新手教程：  \nhttp://blog.sina.com.cn/s/blog_9590ef8201019air.html\n\n\nxcode模拟器使用：\n关闭程序：command + shift + h  按两下\n杀掉进程：command + shift + h 长按\n启动项目：command + r\n快速打开选项卡：command + shift + o\n快速查找：command + shift + f\n","source":"_posts/2d游戏工具使用.md","raw":"---\ntitle: xcode和模拟器快捷键\ndate: 2017-07-12 16:05:50\ntags: [游戏, 工具]\n---\n\nmac上CocosBuilder的使用，有一篇不错的新手教程：  \nhttp://blog.sina.com.cn/s/blog_9590ef8201019air.html\n\n\nxcode模拟器使用：\n关闭程序：command + shift + h  按两下\n杀掉进程：command + shift + h 长按\n启动项目：command + r\n快速打开选项卡：command + shift + o\n快速查找：command + shift + f\n","slug":"2d游戏工具使用","published":1,"updated":"2018-08-29T10:14:44.107Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519yr0002xcnovnsumvx4","content":"<p>mac上CocosBuilder的使用，有一篇不错的新手教程：<br><a href=\"http://blog.sina.com.cn/s/blog_9590ef8201019air.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_9590ef8201019air.html</a></p>\n<p>xcode模拟器使用：<br>关闭程序：command + shift + h  按两下<br>杀掉进程：command + shift + h 长按<br>启动项目：command + r<br>快速打开选项卡：command + shift + o<br>快速查找：command + shift + f</p>\n","site":{"data":{}},"excerpt":"","more":"<p>mac上CocosBuilder的使用，有一篇不错的新手教程：<br><a href=\"http://blog.sina.com.cn/s/blog_9590ef8201019air.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_9590ef8201019air.html</a></p>\n<p>xcode模拟器使用：<br>关闭程序：command + shift + h  按两下<br>杀掉进程：command + shift + h 长按<br>启动项目：command + r<br>快速打开选项卡：command + shift + o<br>快速查找：command + shift + f</p>\n"},{"title":"1-HTML基础知识","date":"2017-06-02T13:25:55.000Z","_content":"\n# HTML基础知识\n#### 1.1 HTML、XHTML、HTML5\n1. 前端最核心的三大技术是HTML、CSS和JavaScript。HTML定义网页的结构，CSS定义网页的外观，而JavaScript定义页面的行为。\n\n2. HTML（超文本标记语言），是构成网页文档的主要语言。\n\n3. XHTML（扩展的超文本标记语言），语法上比HTML更加严格。\n\n4. HTML和XHTML的区别：  \n4.1\tXHTML标签必须闭合。  \n例如：“< div \\>< / div \\>”  \n空标签也需要闭合。  \n例如：< br \\>要写成< br/ \\>   \n4.2\tXHTML标签以及属性必须小写。（属性值可以大写）  \n4.3\tXHTML标签属性必须用引号，单双引号都可以。  \n4.4\tXHTML标签用id属性代替name属性。  \n在XHTML中，除了表单元素之外的所有元素，都应该用id而不是name。    \n错误写法：< div name=”wrapper” \\>< / div \\>  \n正确写法：< div id=”wrapper” \\>< /  div \\>  \n4.5\tHTML指的是HTML4.01，XHTML是HTML的过渡版本，XHTML是XML风格的HTML4.01。  \n\n5. HTML5有以下几个特点：  \n5.1 文档类型说明：基于HTML5设计准则中的“化繁为简”原则，页面文档类型< !DOCTYPE \\>被极大地简化了。  \n5.2 标签不再区分大小写。  \n5.3 允许属性值不加引导。  \n5.4 允许部分属性的属性值省略。  \n\n#### 1.2 div和span  \n1. div 和 span没有任何语义，正是因为没有语义，这两个标签一般都是配合CSS来定义元素样式的。  \n  \n2. div 和 span 区别如下：  \n2.1. div 是块元素，可以包含任何块元素和行内元素，不会与其他元素位于同一行；span是行内元素，可以与其他行内元素位于同一行。  \n2.2 div常用于页面中较大块的结构划分，然后配合CSS来操作；span一般用来包含文字等，它没有结构意义，纯粹是应用样式。当其他行内元素都不适合的时候，可以用span来配合CSS操作。  \n\n3. div 、span、label  \n3.1 div和span是无语义标签，label是有语义标签。  \n3.2 label只适用于表单中，用于显示在输入控件旁边的说明性文字。  \n\n#### 1.3 id和class  \n1.3.1 id属性  \n id 属性具有唯一性，也就是说在一个页面中相同的id只允许出现一次。   \n \n1.3.2 class属性\n同一个页面的相同元素或者不同元素，可以设置相同的class，然后使得相同的class元素具有相同的样式。 \n\n#### 1.4 浏览器标题栏小图标\n在head标签添加一个link标签  \n例如：< link rel=”shortcut icon” type=”image/x-icon” href=”favicon.ico” / \\>\nrel和 type这两个属性的取值是固定形式。href属性取值为小图标的地址。\n注意：小图标的格式是.ico，而不是.jpeg, .png, .gif等格式。\n","source":"_posts/1-HTML基础知识.md","raw":"---\ntitle: 1-HTML基础知识\ndate: 2017-06-02 21:25:55\ntags: html\n---\n\n# HTML基础知识\n#### 1.1 HTML、XHTML、HTML5\n1. 前端最核心的三大技术是HTML、CSS和JavaScript。HTML定义网页的结构，CSS定义网页的外观，而JavaScript定义页面的行为。\n\n2. HTML（超文本标记语言），是构成网页文档的主要语言。\n\n3. XHTML（扩展的超文本标记语言），语法上比HTML更加严格。\n\n4. HTML和XHTML的区别：  \n4.1\tXHTML标签必须闭合。  \n例如：“< div \\>< / div \\>”  \n空标签也需要闭合。  \n例如：< br \\>要写成< br/ \\>   \n4.2\tXHTML标签以及属性必须小写。（属性值可以大写）  \n4.3\tXHTML标签属性必须用引号，单双引号都可以。  \n4.4\tXHTML标签用id属性代替name属性。  \n在XHTML中，除了表单元素之外的所有元素，都应该用id而不是name。    \n错误写法：< div name=”wrapper” \\>< / div \\>  \n正确写法：< div id=”wrapper” \\>< /  div \\>  \n4.5\tHTML指的是HTML4.01，XHTML是HTML的过渡版本，XHTML是XML风格的HTML4.01。  \n\n5. HTML5有以下几个特点：  \n5.1 文档类型说明：基于HTML5设计准则中的“化繁为简”原则，页面文档类型< !DOCTYPE \\>被极大地简化了。  \n5.2 标签不再区分大小写。  \n5.3 允许属性值不加引导。  \n5.4 允许部分属性的属性值省略。  \n\n#### 1.2 div和span  \n1. div 和 span没有任何语义，正是因为没有语义，这两个标签一般都是配合CSS来定义元素样式的。  \n  \n2. div 和 span 区别如下：  \n2.1. div 是块元素，可以包含任何块元素和行内元素，不会与其他元素位于同一行；span是行内元素，可以与其他行内元素位于同一行。  \n2.2 div常用于页面中较大块的结构划分，然后配合CSS来操作；span一般用来包含文字等，它没有结构意义，纯粹是应用样式。当其他行内元素都不适合的时候，可以用span来配合CSS操作。  \n\n3. div 、span、label  \n3.1 div和span是无语义标签，label是有语义标签。  \n3.2 label只适用于表单中，用于显示在输入控件旁边的说明性文字。  \n\n#### 1.3 id和class  \n1.3.1 id属性  \n id 属性具有唯一性，也就是说在一个页面中相同的id只允许出现一次。   \n \n1.3.2 class属性\n同一个页面的相同元素或者不同元素，可以设置相同的class，然后使得相同的class元素具有相同的样式。 \n\n#### 1.4 浏览器标题栏小图标\n在head标签添加一个link标签  \n例如：< link rel=”shortcut icon” type=”image/x-icon” href=”favicon.ico” / \\>\nrel和 type这两个属性的取值是固定形式。href属性取值为小图标的地址。\n注意：小图标的格式是.ico，而不是.jpeg, .png, .gif等格式。\n","slug":"1-HTML基础知识","published":1,"updated":"2018-08-29T10:14:44.106Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519yv0005xcnoohl1deqh","content":"<h1 id=\"HTML基础知识\"><a href=\"#HTML基础知识\" class=\"headerlink\" title=\"HTML基础知识\"></a>HTML基础知识</h1><h4 id=\"1-1-HTML、XHTML、HTML5\"><a href=\"#1-1-HTML、XHTML、HTML5\" class=\"headerlink\" title=\"1.1 HTML、XHTML、HTML5\"></a>1.1 HTML、XHTML、HTML5</h4><ol>\n<li><p>前端最核心的三大技术是HTML、CSS和JavaScript。HTML定义网页的结构，CSS定义网页的外观，而JavaScript定义页面的行为。</p>\n</li>\n<li><p>HTML（超文本标记语言），是构成网页文档的主要语言。</p>\n</li>\n<li><p>XHTML（扩展的超文本标记语言），语法上比HTML更加严格。</p>\n</li>\n<li><p>HTML和XHTML的区别：<br>4.1    XHTML标签必须闭合。<br>例如：“&lt; div >&lt; / div >”<br>空标签也需要闭合。<br>例如：&lt; br >要写成&lt; br/ ><br>4.2    XHTML标签以及属性必须小写。（属性值可以大写）<br>4.3    XHTML标签属性必须用引号，单双引号都可以。<br>4.4    XHTML标签用id属性代替name属性。<br>在XHTML中，除了表单元素之外的所有元素，都应该用id而不是name。<br>错误写法：&lt; div name=”wrapper” >&lt; / div ><br>正确写法：&lt; div id=”wrapper” >&lt; /  div ><br>4.5    HTML指的是HTML4.01，XHTML是HTML的过渡版本，XHTML是XML风格的HTML4.01。  </p>\n</li>\n<li><p>HTML5有以下几个特点：<br>5.1 文档类型说明：基于HTML5设计准则中的“化繁为简”原则，页面文档类型&lt; !DOCTYPE >被极大地简化了。<br>5.2 标签不再区分大小写。<br>5.3 允许属性值不加引导。<br>5.4 允许部分属性的属性值省略。  </p>\n</li>\n</ol>\n<h4 id=\"1-2-div和span\"><a href=\"#1-2-div和span\" class=\"headerlink\" title=\"1.2 div和span\"></a>1.2 div和span</h4><ol>\n<li><p>div 和 span没有任何语义，正是因为没有语义，这两个标签一般都是配合CSS来定义元素样式的。  </p>\n</li>\n<li><p>div 和 span 区别如下：<br>2.1. div 是块元素，可以包含任何块元素和行内元素，不会与其他元素位于同一行；span是行内元素，可以与其他行内元素位于同一行。<br>2.2 div常用于页面中较大块的结构划分，然后配合CSS来操作；span一般用来包含文字等，它没有结构意义，纯粹是应用样式。当其他行内元素都不适合的时候，可以用span来配合CSS操作。  </p>\n</li>\n<li><p>div 、span、label<br>3.1 div和span是无语义标签，label是有语义标签。<br>3.2 label只适用于表单中，用于显示在输入控件旁边的说明性文字。  </p>\n</li>\n</ol>\n<h4 id=\"1-3-id和class\"><a href=\"#1-3-id和class\" class=\"headerlink\" title=\"1.3 id和class\"></a>1.3 id和class</h4><p>1.3.1 id属性<br> id 属性具有唯一性，也就是说在一个页面中相同的id只允许出现一次。   </p>\n<p>1.3.2 class属性<br>同一个页面的相同元素或者不同元素，可以设置相同的class，然后使得相同的class元素具有相同的样式。 </p>\n<h4 id=\"1-4-浏览器标题栏小图标\"><a href=\"#1-4-浏览器标题栏小图标\" class=\"headerlink\" title=\"1.4 浏览器标题栏小图标\"></a>1.4 浏览器标题栏小图标</h4><p>在head标签添加一个link标签<br>例如：&lt; link rel=”shortcut icon” type=”image/x-icon” href=”favicon.ico” / ><br>rel和 type这两个属性的取值是固定形式。href属性取值为小图标的地址。<br>注意：小图标的格式是.ico，而不是.jpeg, .png, .gif等格式。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"HTML基础知识\"><a href=\"#HTML基础知识\" class=\"headerlink\" title=\"HTML基础知识\"></a>HTML基础知识</h1><h4 id=\"1-1-HTML、XHTML、HTML5\"><a href=\"#1-1-HTML、XHTML、HTML5\" class=\"headerlink\" title=\"1.1 HTML、XHTML、HTML5\"></a>1.1 HTML、XHTML、HTML5</h4><ol>\n<li><p>前端最核心的三大技术是HTML、CSS和JavaScript。HTML定义网页的结构，CSS定义网页的外观，而JavaScript定义页面的行为。</p>\n</li>\n<li><p>HTML（超文本标记语言），是构成网页文档的主要语言。</p>\n</li>\n<li><p>XHTML（扩展的超文本标记语言），语法上比HTML更加严格。</p>\n</li>\n<li><p>HTML和XHTML的区别：<br>4.1    XHTML标签必须闭合。<br>例如：“&lt; div >&lt; / div >”<br>空标签也需要闭合。<br>例如：&lt; br >要写成&lt; br/ ><br>4.2    XHTML标签以及属性必须小写。（属性值可以大写）<br>4.3    XHTML标签属性必须用引号，单双引号都可以。<br>4.4    XHTML标签用id属性代替name属性。<br>在XHTML中，除了表单元素之外的所有元素，都应该用id而不是name。<br>错误写法：&lt; div name=”wrapper” >&lt; / div ><br>正确写法：&lt; div id=”wrapper” >&lt; /  div ><br>4.5    HTML指的是HTML4.01，XHTML是HTML的过渡版本，XHTML是XML风格的HTML4.01。  </p>\n</li>\n<li><p>HTML5有以下几个特点：<br>5.1 文档类型说明：基于HTML5设计准则中的“化繁为简”原则，页面文档类型&lt; !DOCTYPE >被极大地简化了。<br>5.2 标签不再区分大小写。<br>5.3 允许属性值不加引导。<br>5.4 允许部分属性的属性值省略。  </p>\n</li>\n</ol>\n<h4 id=\"1-2-div和span\"><a href=\"#1-2-div和span\" class=\"headerlink\" title=\"1.2 div和span\"></a>1.2 div和span</h4><ol>\n<li><p>div 和 span没有任何语义，正是因为没有语义，这两个标签一般都是配合CSS来定义元素样式的。  </p>\n</li>\n<li><p>div 和 span 区别如下：<br>2.1. div 是块元素，可以包含任何块元素和行内元素，不会与其他元素位于同一行；span是行内元素，可以与其他行内元素位于同一行。<br>2.2 div常用于页面中较大块的结构划分，然后配合CSS来操作；span一般用来包含文字等，它没有结构意义，纯粹是应用样式。当其他行内元素都不适合的时候，可以用span来配合CSS操作。  </p>\n</li>\n<li><p>div 、span、label<br>3.1 div和span是无语义标签，label是有语义标签。<br>3.2 label只适用于表单中，用于显示在输入控件旁边的说明性文字。  </p>\n</li>\n</ol>\n<h4 id=\"1-3-id和class\"><a href=\"#1-3-id和class\" class=\"headerlink\" title=\"1.3 id和class\"></a>1.3 id和class</h4><p>1.3.1 id属性<br> id 属性具有唯一性，也就是说在一个页面中相同的id只允许出现一次。   </p>\n<p>1.3.2 class属性<br>同一个页面的相同元素或者不同元素，可以设置相同的class，然后使得相同的class元素具有相同的样式。 </p>\n<h4 id=\"1-4-浏览器标题栏小图标\"><a href=\"#1-4-浏览器标题栏小图标\" class=\"headerlink\" title=\"1.4 浏览器标题栏小图标\"></a>1.4 浏览器标题栏小图标</h4><p>在head标签添加一个link标签<br>例如：&lt; link rel=”shortcut icon” type=”image/x-icon” href=”favicon.ico” / ><br>rel和 type这两个属性的取值是固定形式。href属性取值为小图标的地址。<br>注意：小图标的格式是.ico，而不是.jpeg, .png, .gif等格式。</p>\n"},{"title":"3-CSS基础知识","date":"2017-06-02T13:46:44.000Z","_content":"\n## CSS基础知识\n\n### 3.1 CSS单位\n\n#### 3.1.1 绝对单位\ncm：厘米、  \nmm: 毫米、  \nin: 英寸、  \npt： 磅(point),印刷的点数、  \npc： pica，1pc = 12pt\n\n### 3.1.2 相对单位\n在CSS中相对单位定义的大小是不固定的，一般是相对其他长度而言：常用的相对单位如下：  \npx：像素（一张图片最小的点，或者屏幕最小的点）  \n%： 百分比  \nem： 1em = “当前元素字体大小”  \nrem： 1rem = “根元素”字体大小  \n\n1. 在CSS中，使用em使用小技巧：  \n（1）首行缩进使用text-indent：2em实现；  \n（2）使用em作为统一单位  \n例如：  \n< style type=\"text/css\" >  \n\tbody\\{font-size: 62.5%;\\}  \n\t\\#p1\\{font-size:1em;\\}   \n\t\\#p2\\{font-size:1.5em;\\}  \n\t\\#p3\\{font-size:2em;\\}   \n< /style >  \n\n(3)使用em作为字体大小单位    \n对于一个页面的字体大小，使用px作为单位时可能扩展性不好，使用百分比作为单位时候也不符合习惯，最佳选择是使用em作为单位来定义字体大小。使用em作为单位，当需要改变页面整体的文字大小时，我们只需要改变根元素字体大小即可，工作量变得非常少。\n\n2.rem：    \n  rem是CSS3新引入的单位，目前除了IE8及以前版本之外，大部分主浏览器都支持rem的。  \n  \n### 3.2 CSS特性：\n继承性和层叠性  \n3.2.1 继承性： 子元素继承了父元素的某些样式和属性。（注意： 并不是所有的子元素都有继承性，如：padding，margin，border等就不具备继承性）  \n\n3.2.2 层叠性：样式的覆盖\n\n### 3.3 CSS优先级  \n（1）引用方式冲突  \n（2）继承方式冲突  \n（3）指定样式冲突  \n（4）继承样式与指定样式冲突  \n（5）!important\n\n3.3.1 引用方式冲突：\n CSS常用的三种引用方式:外部样式、内部样式、行内样式  \n### 行内样式 > (内部样式 = 外部样式)  \n 如果内部样式和外部样式同时存在，则以最后引入的样式为准（后来者居上）  \n \n3.3.2 继承方式冲突  \n由于继承方式引起的冲突，最近的祖先元素获胜。  \n\n3.3.3  指定样式冲突  \n指定样式，指的是指定“当前元素”的样式。直接指定的样式发生冲突时，样式权值高者获胜。  \n### 行内样式 > id选择器 > class选择器 > 元素选择器\n\n3.3.4 继承样式和指定样式冲突  \n当继承样式和指定样式冲突时，指定样式获胜  \n\n3.3.5 \\!important   \n\\!important会覆盖CSS中任何的其他样式  \n优先级：优先级高的样式覆盖优先级低的样式\n       同一优先级的样式，后定义的覆盖先定义的，即后来者居上。  \n \n3.4 CSS引入方式  \n常用的三种：  \n（1）外部样式 ：link方式，先加载CSS后加载HTML    \n 所谓的“外部样式表”，就是把CSS代码和HTML代码单独放在不同的文件中·，然后在HTML文档中使用link标签来引用CSS样式。   \n 外部样式表在氮素文件中定义，并且在< head >< /head >标签对中使用link标签来引用。  \n 多用于公有样式  \n（2）内部样式：私有样式  \n（3）行内样式：用于小修改或者优先级方面  \n不常用的：\n@import方式（即“导入样式”）：先加载HTMl后加载CSS，用户体验非常差  \n\n3.5 CSS选择器  \n（1）元素选择器  \n（2）id选择器  \n（3）class选择器  \n（4）群组选择器  \n常见的层次选择器：父子、后代、兄弟、相邻  \nM N : 后代选择器，选择M元素内部后代N元素（所有N元素）  \nM\\>N: 子代选择器，选择M元素内部子代N元素（所有第1级N元素）  \nM~N: 兄弟选择器，选择M元素后所有的同级N元素  \nM+N：相邻选择器，选择M元素相邻的下一个元素（M、N是同级元素）  \n","source":"_posts/3-CSS基础知识.md","raw":"---\ntitle: 3-CSS基础知识\ndate: 2017-06-02 21:46:44\ntags: html\n---\n\n## CSS基础知识\n\n### 3.1 CSS单位\n\n#### 3.1.1 绝对单位\ncm：厘米、  \nmm: 毫米、  \nin: 英寸、  \npt： 磅(point),印刷的点数、  \npc： pica，1pc = 12pt\n\n### 3.1.2 相对单位\n在CSS中相对单位定义的大小是不固定的，一般是相对其他长度而言：常用的相对单位如下：  \npx：像素（一张图片最小的点，或者屏幕最小的点）  \n%： 百分比  \nem： 1em = “当前元素字体大小”  \nrem： 1rem = “根元素”字体大小  \n\n1. 在CSS中，使用em使用小技巧：  \n（1）首行缩进使用text-indent：2em实现；  \n（2）使用em作为统一单位  \n例如：  \n< style type=\"text/css\" >  \n\tbody\\{font-size: 62.5%;\\}  \n\t\\#p1\\{font-size:1em;\\}   \n\t\\#p2\\{font-size:1.5em;\\}  \n\t\\#p3\\{font-size:2em;\\}   \n< /style >  \n\n(3)使用em作为字体大小单位    \n对于一个页面的字体大小，使用px作为单位时可能扩展性不好，使用百分比作为单位时候也不符合习惯，最佳选择是使用em作为单位来定义字体大小。使用em作为单位，当需要改变页面整体的文字大小时，我们只需要改变根元素字体大小即可，工作量变得非常少。\n\n2.rem：    \n  rem是CSS3新引入的单位，目前除了IE8及以前版本之外，大部分主浏览器都支持rem的。  \n  \n### 3.2 CSS特性：\n继承性和层叠性  \n3.2.1 继承性： 子元素继承了父元素的某些样式和属性。（注意： 并不是所有的子元素都有继承性，如：padding，margin，border等就不具备继承性）  \n\n3.2.2 层叠性：样式的覆盖\n\n### 3.3 CSS优先级  \n（1）引用方式冲突  \n（2）继承方式冲突  \n（3）指定样式冲突  \n（4）继承样式与指定样式冲突  \n（5）!important\n\n3.3.1 引用方式冲突：\n CSS常用的三种引用方式:外部样式、内部样式、行内样式  \n### 行内样式 > (内部样式 = 外部样式)  \n 如果内部样式和外部样式同时存在，则以最后引入的样式为准（后来者居上）  \n \n3.3.2 继承方式冲突  \n由于继承方式引起的冲突，最近的祖先元素获胜。  \n\n3.3.3  指定样式冲突  \n指定样式，指的是指定“当前元素”的样式。直接指定的样式发生冲突时，样式权值高者获胜。  \n### 行内样式 > id选择器 > class选择器 > 元素选择器\n\n3.3.4 继承样式和指定样式冲突  \n当继承样式和指定样式冲突时，指定样式获胜  \n\n3.3.5 \\!important   \n\\!important会覆盖CSS中任何的其他样式  \n优先级：优先级高的样式覆盖优先级低的样式\n       同一优先级的样式，后定义的覆盖先定义的，即后来者居上。  \n \n3.4 CSS引入方式  \n常用的三种：  \n（1）外部样式 ：link方式，先加载CSS后加载HTML    \n 所谓的“外部样式表”，就是把CSS代码和HTML代码单独放在不同的文件中·，然后在HTML文档中使用link标签来引用CSS样式。   \n 外部样式表在氮素文件中定义，并且在< head >< /head >标签对中使用link标签来引用。  \n 多用于公有样式  \n（2）内部样式：私有样式  \n（3）行内样式：用于小修改或者优先级方面  \n不常用的：\n@import方式（即“导入样式”）：先加载HTMl后加载CSS，用户体验非常差  \n\n3.5 CSS选择器  \n（1）元素选择器  \n（2）id选择器  \n（3）class选择器  \n（4）群组选择器  \n常见的层次选择器：父子、后代、兄弟、相邻  \nM N : 后代选择器，选择M元素内部后代N元素（所有N元素）  \nM\\>N: 子代选择器，选择M元素内部子代N元素（所有第1级N元素）  \nM~N: 兄弟选择器，选择M元素后所有的同级N元素  \nM+N：相邻选择器，选择M元素相邻的下一个元素（M、N是同级元素）  \n","slug":"3-CSS基础知识","published":1,"updated":"2018-08-29T10:14:44.107Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519yw0007xcnoqsmm2r0k","content":"<h2 id=\"CSS基础知识\"><a href=\"#CSS基础知识\" class=\"headerlink\" title=\"CSS基础知识\"></a>CSS基础知识</h2><h3 id=\"3-1-CSS单位\"><a href=\"#3-1-CSS单位\" class=\"headerlink\" title=\"3.1 CSS单位\"></a>3.1 CSS单位</h3><h4 id=\"3-1-1-绝对单位\"><a href=\"#3-1-1-绝对单位\" class=\"headerlink\" title=\"3.1.1 绝对单位\"></a>3.1.1 绝对单位</h4><p>cm：厘米、<br>mm: 毫米、<br>in: 英寸、<br>pt： 磅(point),印刷的点数、<br>pc： pica，1pc = 12pt</p>\n<h3 id=\"3-1-2-相对单位\"><a href=\"#3-1-2-相对单位\" class=\"headerlink\" title=\"3.1.2 相对单位\"></a>3.1.2 相对单位</h3><p>在CSS中相对单位定义的大小是不固定的，一般是相对其他长度而言：常用的相对单位如下：<br>px：像素（一张图片最小的点，或者屏幕最小的点）<br>%： 百分比<br>em： 1em = “当前元素字体大小”<br>rem： 1rem = “根元素”字体大小  </p>\n<ol>\n<li>在CSS中，使用em使用小技巧：<br>（1）首行缩进使用text-indent：2em实现；<br>（2）使用em作为统一单位<br>例如：<br>&lt; style type=”text/css” &gt;<br> body{font-size: 62.5%;}<br> #p1{font-size:1em;}<br> #p2{font-size:1.5em;}<br> #p3{font-size:2em;}<br>&lt; /style &gt;  </li>\n</ol>\n<p>(3)使用em作为字体大小单位<br>对于一个页面的字体大小，使用px作为单位时可能扩展性不好，使用百分比作为单位时候也不符合习惯，最佳选择是使用em作为单位来定义字体大小。使用em作为单位，当需要改变页面整体的文字大小时，我们只需要改变根元素字体大小即可，工作量变得非常少。</p>\n<p>2.rem：<br>  rem是CSS3新引入的单位，目前除了IE8及以前版本之外，大部分主浏览器都支持rem的。  </p>\n<h3 id=\"3-2-CSS特性：\"><a href=\"#3-2-CSS特性：\" class=\"headerlink\" title=\"3.2 CSS特性：\"></a>3.2 CSS特性：</h3><p>继承性和层叠性<br>3.2.1 继承性： 子元素继承了父元素的某些样式和属性。（注意： 并不是所有的子元素都有继承性，如：padding，margin，border等就不具备继承性）  </p>\n<p>3.2.2 层叠性：样式的覆盖</p>\n<h3 id=\"3-3-CSS优先级\"><a href=\"#3-3-CSS优先级\" class=\"headerlink\" title=\"3.3 CSS优先级\"></a>3.3 CSS优先级</h3><p>（1）引用方式冲突<br>（2）继承方式冲突<br>（3）指定样式冲突<br>（4）继承样式与指定样式冲突<br>（5）!important</p>\n<p>3.3.1 引用方式冲突：<br> CSS常用的三种引用方式:外部样式、内部样式、行内样式  </p>\n<h3 id=\"行内样式-gt-内部样式-外部样式\"><a href=\"#行内样式-gt-内部样式-外部样式\" class=\"headerlink\" title=\"行内样式 &gt; (内部样式 = 外部样式)\"></a>行内样式 &gt; (内部样式 = 外部样式)</h3><p> 如果内部样式和外部样式同时存在，则以最后引入的样式为准（后来者居上）  </p>\n<p>3.3.2 继承方式冲突<br>由于继承方式引起的冲突，最近的祖先元素获胜。  </p>\n<p>3.3.3  指定样式冲突<br>指定样式，指的是指定“当前元素”的样式。直接指定的样式发生冲突时，样式权值高者获胜。  </p>\n<h3 id=\"行内样式-gt-id选择器-gt-class选择器-gt-元素选择器\"><a href=\"#行内样式-gt-id选择器-gt-class选择器-gt-元素选择器\" class=\"headerlink\" title=\"行内样式 &gt; id选择器 &gt; class选择器 &gt; 元素选择器\"></a>行内样式 &gt; id选择器 &gt; class选择器 &gt; 元素选择器</h3><p>3.3.4 继承样式和指定样式冲突<br>当继承样式和指定样式冲突时，指定样式获胜  </p>\n<p>3.3.5 !important<br>!important会覆盖CSS中任何的其他样式<br>优先级：优先级高的样式覆盖优先级低的样式<br>       同一优先级的样式，后定义的覆盖先定义的，即后来者居上。  </p>\n<p>3.4 CSS引入方式<br>常用的三种：<br>（1）外部样式 ：link方式，先加载CSS后加载HTML<br> 所谓的“外部样式表”，就是把CSS代码和HTML代码单独放在不同的文件中·，然后在HTML文档中使用link标签来引用CSS样式。<br> 外部样式表在氮素文件中定义，并且在&lt; head &gt;&lt; /head &gt;标签对中使用link标签来引用。<br> 多用于公有样式<br>（2）内部样式：私有样式<br>（3）行内样式：用于小修改或者优先级方面<br>不常用的：<br>@import方式（即“导入样式”）：先加载HTMl后加载CSS，用户体验非常差  </p>\n<p>3.5 CSS选择器<br>（1）元素选择器<br>（2）id选择器<br>（3）class选择器<br>（4）群组选择器<br>常见的层次选择器：父子、后代、兄弟、相邻<br>M N : 后代选择器，选择M元素内部后代N元素（所有N元素）<br>M>N: 子代选择器，选择M元素内部子代N元素（所有第1级N元素）<br>M~N: 兄弟选择器，选择M元素后所有的同级N元素<br>M+N：相邻选择器，选择M元素相邻的下一个元素（M、N是同级元素）  </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"CSS基础知识\"><a href=\"#CSS基础知识\" class=\"headerlink\" title=\"CSS基础知识\"></a>CSS基础知识</h2><h3 id=\"3-1-CSS单位\"><a href=\"#3-1-CSS单位\" class=\"headerlink\" title=\"3.1 CSS单位\"></a>3.1 CSS单位</h3><h4 id=\"3-1-1-绝对单位\"><a href=\"#3-1-1-绝对单位\" class=\"headerlink\" title=\"3.1.1 绝对单位\"></a>3.1.1 绝对单位</h4><p>cm：厘米、<br>mm: 毫米、<br>in: 英寸、<br>pt： 磅(point),印刷的点数、<br>pc： pica，1pc = 12pt</p>\n<h3 id=\"3-1-2-相对单位\"><a href=\"#3-1-2-相对单位\" class=\"headerlink\" title=\"3.1.2 相对单位\"></a>3.1.2 相对单位</h3><p>在CSS中相对单位定义的大小是不固定的，一般是相对其他长度而言：常用的相对单位如下：<br>px：像素（一张图片最小的点，或者屏幕最小的点）<br>%： 百分比<br>em： 1em = “当前元素字体大小”<br>rem： 1rem = “根元素”字体大小  </p>\n<ol>\n<li>在CSS中，使用em使用小技巧：<br>（1）首行缩进使用text-indent：2em实现；<br>（2）使用em作为统一单位<br>例如：<br>&lt; style type=”text/css” &gt;<br> body{font-size: 62.5%;}<br> #p1{font-size:1em;}<br> #p2{font-size:1.5em;}<br> #p3{font-size:2em;}<br>&lt; /style &gt;  </li>\n</ol>\n<p>(3)使用em作为字体大小单位<br>对于一个页面的字体大小，使用px作为单位时可能扩展性不好，使用百分比作为单位时候也不符合习惯，最佳选择是使用em作为单位来定义字体大小。使用em作为单位，当需要改变页面整体的文字大小时，我们只需要改变根元素字体大小即可，工作量变得非常少。</p>\n<p>2.rem：<br>  rem是CSS3新引入的单位，目前除了IE8及以前版本之外，大部分主浏览器都支持rem的。  </p>\n<h3 id=\"3-2-CSS特性：\"><a href=\"#3-2-CSS特性：\" class=\"headerlink\" title=\"3.2 CSS特性：\"></a>3.2 CSS特性：</h3><p>继承性和层叠性<br>3.2.1 继承性： 子元素继承了父元素的某些样式和属性。（注意： 并不是所有的子元素都有继承性，如：padding，margin，border等就不具备继承性）  </p>\n<p>3.2.2 层叠性：样式的覆盖</p>\n<h3 id=\"3-3-CSS优先级\"><a href=\"#3-3-CSS优先级\" class=\"headerlink\" title=\"3.3 CSS优先级\"></a>3.3 CSS优先级</h3><p>（1）引用方式冲突<br>（2）继承方式冲突<br>（3）指定样式冲突<br>（4）继承样式与指定样式冲突<br>（5）!important</p>\n<p>3.3.1 引用方式冲突：<br> CSS常用的三种引用方式:外部样式、内部样式、行内样式  </p>\n<h3 id=\"行内样式-gt-内部样式-外部样式\"><a href=\"#行内样式-gt-内部样式-外部样式\" class=\"headerlink\" title=\"行内样式 &gt; (内部样式 = 外部样式)\"></a>行内样式 &gt; (内部样式 = 外部样式)</h3><p> 如果内部样式和外部样式同时存在，则以最后引入的样式为准（后来者居上）  </p>\n<p>3.3.2 继承方式冲突<br>由于继承方式引起的冲突，最近的祖先元素获胜。  </p>\n<p>3.3.3  指定样式冲突<br>指定样式，指的是指定“当前元素”的样式。直接指定的样式发生冲突时，样式权值高者获胜。  </p>\n<h3 id=\"行内样式-gt-id选择器-gt-class选择器-gt-元素选择器\"><a href=\"#行内样式-gt-id选择器-gt-class选择器-gt-元素选择器\" class=\"headerlink\" title=\"行内样式 &gt; id选择器 &gt; class选择器 &gt; 元素选择器\"></a>行内样式 &gt; id选择器 &gt; class选择器 &gt; 元素选择器</h3><p>3.3.4 继承样式和指定样式冲突<br>当继承样式和指定样式冲突时，指定样式获胜  </p>\n<p>3.3.5 !important<br>!important会覆盖CSS中任何的其他样式<br>优先级：优先级高的样式覆盖优先级低的样式<br>       同一优先级的样式，后定义的覆盖先定义的，即后来者居上。  </p>\n<p>3.4 CSS引入方式<br>常用的三种：<br>（1）外部样式 ：link方式，先加载CSS后加载HTML<br> 所谓的“外部样式表”，就是把CSS代码和HTML代码单独放在不同的文件中·，然后在HTML文档中使用link标签来引用CSS样式。<br> 外部样式表在氮素文件中定义，并且在&lt; head &gt;&lt; /head &gt;标签对中使用link标签来引用。<br> 多用于公有样式<br>（2）内部样式：私有样式<br>（3）行内样式：用于小修改或者优先级方面<br>不常用的：<br>@import方式（即“导入样式”）：先加载HTMl后加载CSS，用户体验非常差  </p>\n<p>3.5 CSS选择器<br>（1）元素选择器<br>（2）id选择器<br>（3）class选择器<br>（4）群组选择器<br>常见的层次选择器：父子、后代、兄弟、相邻<br>M N : 后代选择器，选择M元素内部后代N元素（所有N元素）<br>M>N: 子代选择器，选择M元素内部子代N元素（所有第1级N元素）<br>M~N: 兄弟选择器，选择M元素后所有的同级N元素<br>M+N：相邻选择器，选择M元素相邻的下一个元素（M、N是同级元素）  </p>\n"},{"title":"5-盒子模型","date":"2017-06-07T11:52:17.000Z","_content":"\n5.1 CSS盒子模型  \n**每个元素都可以看成一个盒子**  \n盒子模型由content、padding、margin、border四个属性组成  \ncontent：内容，可以是文字或图片    \nmargin：外边距，用于定义页面中元素与元素之间的距离    \npadding: 内边距（也称“补白”），用于定义内容与边框之间的距离  \nborder: 边框 \n>内容区：  \n内容区是CSS盒子模型的中心，有三个属性：width、height、overflow  \nwidth和height是针对内容区而言，不包括padding部分  \noverflow溢出属性，用来处理内容信息过多而超出内容区所占范围。  \n\n5.2 深入border  \n**“border:0”和“border:none”的区别主要体现在两点：性能差异和兼容差异**\n  \n5.2.1 性能差异 \n \n* \"border:0“ 表示把border定义为0px，浏览器会对border进行渲染，需要占用内存\n* \"border:none\" 表示把border定义为”none(无)“，浏览器对改属性不会作出渲染，不需要占用内存  \n\n5.2.2 兼容差异  \n兼容差异只存在于IE6和IE7的< input type=\"button\" / >标签以及< button >标签中，其他浏览器不存在兼容问题  \n\"border:0“ 在所有浏览器中的效果都一样，都是把边框隐藏掉（不是去掉）   \n\"border:none\"  对IE6和IE7按钮的边框无效，在其他浏览器中会去掉按钮的边框\n  \n5.3 负margin使用技巧  \n\n* 图片与文字对齐\n* 自适应两列布局\n* 元素垂直居中\n* tab选项卡\n\n5.4 overflow使用  \n\n* \"overflow:scroll\" 显示滚动条  \n* \"overflow:hidden\" 清除浮动，隐藏溢出内容，以免影响布局，不好的一点是这部分的内容完全不显示，比如图片只显示了一部分  \n\n>使用clear属性清除浮动的缺点是增加了一个多余标签\n>\"overflow:hidden\" 是一个小炸弹，它会将超出父元素部分的内容隐藏\n\n\n\n","source":"_posts/5-盒子模型.md","raw":"---\ntitle: 5-盒子模型\ndate: 2017-06-07 19:52:17\ntags: html\n---\n\n5.1 CSS盒子模型  \n**每个元素都可以看成一个盒子**  \n盒子模型由content、padding、margin、border四个属性组成  \ncontent：内容，可以是文字或图片    \nmargin：外边距，用于定义页面中元素与元素之间的距离    \npadding: 内边距（也称“补白”），用于定义内容与边框之间的距离  \nborder: 边框 \n>内容区：  \n内容区是CSS盒子模型的中心，有三个属性：width、height、overflow  \nwidth和height是针对内容区而言，不包括padding部分  \noverflow溢出属性，用来处理内容信息过多而超出内容区所占范围。  \n\n5.2 深入border  \n**“border:0”和“border:none”的区别主要体现在两点：性能差异和兼容差异**\n  \n5.2.1 性能差异 \n \n* \"border:0“ 表示把border定义为0px，浏览器会对border进行渲染，需要占用内存\n* \"border:none\" 表示把border定义为”none(无)“，浏览器对改属性不会作出渲染，不需要占用内存  \n\n5.2.2 兼容差异  \n兼容差异只存在于IE6和IE7的< input type=\"button\" / >标签以及< button >标签中，其他浏览器不存在兼容问题  \n\"border:0“ 在所有浏览器中的效果都一样，都是把边框隐藏掉（不是去掉）   \n\"border:none\"  对IE6和IE7按钮的边框无效，在其他浏览器中会去掉按钮的边框\n  \n5.3 负margin使用技巧  \n\n* 图片与文字对齐\n* 自适应两列布局\n* 元素垂直居中\n* tab选项卡\n\n5.4 overflow使用  \n\n* \"overflow:scroll\" 显示滚动条  \n* \"overflow:hidden\" 清除浮动，隐藏溢出内容，以免影响布局，不好的一点是这部分的内容完全不显示，比如图片只显示了一部分  \n\n>使用clear属性清除浮动的缺点是增加了一个多余标签\n>\"overflow:hidden\" 是一个小炸弹，它会将超出父元素部分的内容隐藏\n\n\n\n","slug":"5-盒子模型","published":1,"updated":"2018-08-29T10:14:44.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519yx0008xcnolhbnvuum","content":"<p>5.1 CSS盒子模型<br><strong>每个元素都可以看成一个盒子</strong><br>盒子模型由content、padding、margin、border四个属性组成<br>content：内容，可以是文字或图片<br>margin：外边距，用于定义页面中元素与元素之间的距离<br>padding: 内边距（也称“补白”），用于定义内容与边框之间的距离<br>border: 边框 </p>\n<blockquote>\n<p>内容区：<br>内容区是CSS盒子模型的中心，有三个属性：width、height、overflow<br>width和height是针对内容区而言，不包括padding部分<br>overflow溢出属性，用来处理内容信息过多而超出内容区所占范围。  </p>\n</blockquote>\n<p>5.2 深入border<br><strong>“border:0”和“border:none”的区别主要体现在两点：性能差异和兼容差异</strong></p>\n<p>5.2.1 性能差异 </p>\n<ul>\n<li>“border:0“ 表示把border定义为0px，浏览器会对border进行渲染，需要占用内存</li>\n<li>“border:none” 表示把border定义为”none(无)“，浏览器对改属性不会作出渲染，不需要占用内存  </li>\n</ul>\n<p>5.2.2 兼容差异<br>兼容差异只存在于IE6和IE7的&lt; input type=”button” / &gt;标签以及&lt; button &gt;标签中，其他浏览器不存在兼容问题<br>“border:0“ 在所有浏览器中的效果都一样，都是把边框隐藏掉（不是去掉）<br>“border:none”  对IE6和IE7按钮的边框无效，在其他浏览器中会去掉按钮的边框</p>\n<p>5.3 负margin使用技巧  </p>\n<ul>\n<li>图片与文字对齐</li>\n<li>自适应两列布局</li>\n<li>元素垂直居中</li>\n<li>tab选项卡</li>\n</ul>\n<p>5.4 overflow使用  </p>\n<ul>\n<li>“overflow:scroll” 显示滚动条  </li>\n<li>“overflow:hidden” 清除浮动，隐藏溢出内容，以免影响布局，不好的一点是这部分的内容完全不显示，比如图片只显示了一部分  </li>\n</ul>\n<blockquote>\n<p>使用clear属性清除浮动的缺点是增加了一个多余标签<br>“overflow:hidden” 是一个小炸弹，它会将超出父元素部分的内容隐藏</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>5.1 CSS盒子模型<br><strong>每个元素都可以看成一个盒子</strong><br>盒子模型由content、padding、margin、border四个属性组成<br>content：内容，可以是文字或图片<br>margin：外边距，用于定义页面中元素与元素之间的距离<br>padding: 内边距（也称“补白”），用于定义内容与边框之间的距离<br>border: 边框 </p>\n<blockquote>\n<p>内容区：<br>内容区是CSS盒子模型的中心，有三个属性：width、height、overflow<br>width和height是针对内容区而言，不包括padding部分<br>overflow溢出属性，用来处理内容信息过多而超出内容区所占范围。  </p>\n</blockquote>\n<p>5.2 深入border<br><strong>“border:0”和“border:none”的区别主要体现在两点：性能差异和兼容差异</strong></p>\n<p>5.2.1 性能差异 </p>\n<ul>\n<li>“border:0“ 表示把border定义为0px，浏览器会对border进行渲染，需要占用内存</li>\n<li>“border:none” 表示把border定义为”none(无)“，浏览器对改属性不会作出渲染，不需要占用内存  </li>\n</ul>\n<p>5.2.2 兼容差异<br>兼容差异只存在于IE6和IE7的&lt; input type=”button” / &gt;标签以及&lt; button &gt;标签中，其他浏览器不存在兼容问题<br>“border:0“ 在所有浏览器中的效果都一样，都是把边框隐藏掉（不是去掉）<br>“border:none”  对IE6和IE7按钮的边框无效，在其他浏览器中会去掉按钮的边框</p>\n<p>5.3 负margin使用技巧  </p>\n<ul>\n<li>图片与文字对齐</li>\n<li>自适应两列布局</li>\n<li>元素垂直居中</li>\n<li>tab选项卡</li>\n</ul>\n<p>5.4 overflow使用  </p>\n<ul>\n<li>“overflow:scroll” 显示滚动条  </li>\n<li>“overflow:hidden” 清除浮动，隐藏溢出内容，以免影响布局，不好的一点是这部分的内容完全不显示，比如图片只显示了一部分  </li>\n</ul>\n<blockquote>\n<p>使用clear属性清除浮动的缺点是增加了一个多余标签<br>“overflow:hidden” 是一个小炸弹，它会将超出父元素部分的内容隐藏</p>\n</blockquote>\n"},{"title":"4-CSS规范","date":"2017-06-03T13:22:25.000Z","_content":"\n4.1 命名规范：  \n4.1.1 css文件命名  \n\n* reset.css  重置样式，重置元素默认样式，使得页面在所有浏览器中有统一的外观\n* global.css 全局样式，全站公用，定义页面基础样式（常见的公共模块包括导航、底部信息栏；常见的基础样式包括全局字体、文字颜色等）\n* themes.css 主题样式，用于实现换肤功能\n* module.css 模块样式，用于模块的样式\n* master.css 母版样式，用于母版页样式\n* columns.css 专栏样式\n* forms.css 表单样式\n* mend.css 补丁样式，用于维护、修改的样式\n* print.css 打印样式  \n\n4.2 id和class命名  \n（1）驼峰命名法  \n（2）中划线命名法（推荐使用）  \n（3）下划线命名法  ","source":"_posts/4-CSS规范.md","raw":"---\ntitle: 4-CSS规范\ndate: 2017-06-03 21:22:25\ntags: html\n---\n\n4.1 命名规范：  \n4.1.1 css文件命名  \n\n* reset.css  重置样式，重置元素默认样式，使得页面在所有浏览器中有统一的外观\n* global.css 全局样式，全站公用，定义页面基础样式（常见的公共模块包括导航、底部信息栏；常见的基础样式包括全局字体、文字颜色等）\n* themes.css 主题样式，用于实现换肤功能\n* module.css 模块样式，用于模块的样式\n* master.css 母版样式，用于母版页样式\n* columns.css 专栏样式\n* forms.css 表单样式\n* mend.css 补丁样式，用于维护、修改的样式\n* print.css 打印样式  \n\n4.2 id和class命名  \n（1）驼峰命名法  \n（2）中划线命名法（推荐使用）  \n（3）下划线命名法  ","slug":"4-CSS规范","published":1,"updated":"2018-08-29T10:14:44.107Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519yz000bxcno5mugeh9m","content":"<p>4.1 命名规范：<br>4.1.1 css文件命名  </p>\n<ul>\n<li>reset.css  重置样式，重置元素默认样式，使得页面在所有浏览器中有统一的外观</li>\n<li>global.css 全局样式，全站公用，定义页面基础样式（常见的公共模块包括导航、底部信息栏；常见的基础样式包括全局字体、文字颜色等）</li>\n<li>themes.css 主题样式，用于实现换肤功能</li>\n<li>module.css 模块样式，用于模块的样式</li>\n<li>master.css 母版样式，用于母版页样式</li>\n<li>columns.css 专栏样式</li>\n<li>forms.css 表单样式</li>\n<li>mend.css 补丁样式，用于维护、修改的样式</li>\n<li>print.css 打印样式  </li>\n</ul>\n<p>4.2 id和class命名<br>（1）驼峰命名法<br>（2）中划线命名法（推荐使用）<br>（3）下划线命名法  </p>\n","site":{"data":{}},"excerpt":"","more":"<p>4.1 命名规范：<br>4.1.1 css文件命名  </p>\n<ul>\n<li>reset.css  重置样式，重置元素默认样式，使得页面在所有浏览器中有统一的外观</li>\n<li>global.css 全局样式，全站公用，定义页面基础样式（常见的公共模块包括导航、底部信息栏；常见的基础样式包括全局字体、文字颜色等）</li>\n<li>themes.css 主题样式，用于实现换肤功能</li>\n<li>module.css 模块样式，用于模块的样式</li>\n<li>master.css 母版样式，用于母版页样式</li>\n<li>columns.css 专栏样式</li>\n<li>forms.css 表单样式</li>\n<li>mend.css 补丁样式，用于维护、修改的样式</li>\n<li>print.css 打印样式  </li>\n</ul>\n<p>4.2 id和class命名<br>（1）驼峰命名法<br>（2）中划线命名法（推荐使用）<br>（3）下划线命名法  </p>\n"},{"title":"6-常用的标签和属性","date":"2017-06-07T12:58:20.000Z","_content":"1. 常见块元素与行内元素  \n块级元素：div , p , form, ul, li , ol, dl, form, address, fieldset, hr, menu, table\r行内元素：span, strong, em, br, img , input, label...  \n\n2. display常见属性  \n\"display:none\"：元素被隐藏之后，不占据原来的位置    \n\"visibility:hidden\"：元素被隐藏之后，依然占据原来的位置  \n\"display:table-cell\":  \n可以让元素以表格单元格的形式呈现，具备td元素的特点。  \nIE8+以及其他现代浏览器都支持此属性，不过IE6/IE7中并不支持，考虑到IE6/IE7使用率越来越低，我们还是果断使用这一布局神器，可以实现以下3种功能    \n * 图片垂直居中于元素\n * 等高布局\n * 自动平均划分元素，并且在同一行显示\n\n\n3. 图片常用的三种居中方式  \n水平居中 \"text-align:center\"   \n垂直居中 \"display:table-cell\"和\"vertical-align:center\"配合实现  \n\n4. 使用\"font-size:0\"来去除\"display:inline-block\"的元素间距  \n\n5. 常用标签：  \ndl定义列表，结合dt、dd使用。dt定义列表中的项目，dd描述列表中的项目。  \nb 加粗  \nu 下划线  \ni 斜体  \ns 中划线  \nstrong  强调  \nhr 分割线\nimg标签下，alt属性是找不到图片的时候显示，title是鼠标放在图片上的时候显示  \na标签下，设置target=\"_blank\"属性，点击链接会打开新窗口，title属性设置内容，是鼠标放在链接上的时候显示  \n\n6. 搜索引擎优化  \n\"text-indent:-9999px;\"属性一般用于LOGO部分，在搜索引擎中h1是非常重要的标签，一般把网站的LOGO图片放到h1标签中，但是搜索引擎无法识别图片，只能识别文字，为了更好的优化SEO：  \n指定h1元素的长宽与LOGO图片的长宽一样，然后定义h1的背景图片（background-image）为LOGO图片  \n使用LOGO图片为h1的背景图片，然后使用\"text-indent:-9999px;\"属性来隐藏h1的文字内容。  \n\n7. \"text-align:center;\"与\"margin:0 auto;\"的区别    \n * \"text-align:center;\" 实现文字、inline元素以及inline-block元素的水平居中  \n * \"margin:0 auto;\" 实现的是块元素的水平居中  \n * \"text-align:center;\"在父元素中定义，\"margin:0 auto;\" 在当前元素中定义\n\n8. 清除浮动常见的三种方法  \n * clear:both（最常用）不应用于浮动元素本身，而是浮动元素后面的元素\n * overflow:hidden 应用于浮动元素的父元素，而是不是当前的浮动元素\n * ::after伪元素 结合clear:both使用\n","source":"_posts/6-常用的标签和属性.md","raw":"---\ntitle: 6-常用的标签和属性\ndate: 2017-06-07 20:58:20\ntags: html\n---\n1. 常见块元素与行内元素  \n块级元素：div , p , form, ul, li , ol, dl, form, address, fieldset, hr, menu, table\r行内元素：span, strong, em, br, img , input, label...  \n\n2. display常见属性  \n\"display:none\"：元素被隐藏之后，不占据原来的位置    \n\"visibility:hidden\"：元素被隐藏之后，依然占据原来的位置  \n\"display:table-cell\":  \n可以让元素以表格单元格的形式呈现，具备td元素的特点。  \nIE8+以及其他现代浏览器都支持此属性，不过IE6/IE7中并不支持，考虑到IE6/IE7使用率越来越低，我们还是果断使用这一布局神器，可以实现以下3种功能    \n * 图片垂直居中于元素\n * 等高布局\n * 自动平均划分元素，并且在同一行显示\n\n\n3. 图片常用的三种居中方式  \n水平居中 \"text-align:center\"   \n垂直居中 \"display:table-cell\"和\"vertical-align:center\"配合实现  \n\n4. 使用\"font-size:0\"来去除\"display:inline-block\"的元素间距  \n\n5. 常用标签：  \ndl定义列表，结合dt、dd使用。dt定义列表中的项目，dd描述列表中的项目。  \nb 加粗  \nu 下划线  \ni 斜体  \ns 中划线  \nstrong  强调  \nhr 分割线\nimg标签下，alt属性是找不到图片的时候显示，title是鼠标放在图片上的时候显示  \na标签下，设置target=\"_blank\"属性，点击链接会打开新窗口，title属性设置内容，是鼠标放在链接上的时候显示  \n\n6. 搜索引擎优化  \n\"text-indent:-9999px;\"属性一般用于LOGO部分，在搜索引擎中h1是非常重要的标签，一般把网站的LOGO图片放到h1标签中，但是搜索引擎无法识别图片，只能识别文字，为了更好的优化SEO：  \n指定h1元素的长宽与LOGO图片的长宽一样，然后定义h1的背景图片（background-image）为LOGO图片  \n使用LOGO图片为h1的背景图片，然后使用\"text-indent:-9999px;\"属性来隐藏h1的文字内容。  \n\n7. \"text-align:center;\"与\"margin:0 auto;\"的区别    \n * \"text-align:center;\" 实现文字、inline元素以及inline-block元素的水平居中  \n * \"margin:0 auto;\" 实现的是块元素的水平居中  \n * \"text-align:center;\"在父元素中定义，\"margin:0 auto;\" 在当前元素中定义\n\n8. 清除浮动常见的三种方法  \n * clear:both（最常用）不应用于浮动元素本身，而是浮动元素后面的元素\n * overflow:hidden 应用于浮动元素的父元素，而是不是当前的浮动元素\n * ::after伪元素 结合clear:both使用\n","slug":"6-常用的标签和属性","published":1,"updated":"2018-08-29T10:14:44.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519z0000dxcnonkl4npnw","content":"<ol>\n<li><p>常见块元素与行内元素<br>块级元素：div , p , form, ul, li , ol, dl, form, address, fieldset, hr, menu, table<br>行内元素：span, strong, em, br, img , input, label…  </p>\n</li>\n<li><p>display常见属性<br>“display:none”：元素被隐藏之后，不占据原来的位置<br>“visibility:hidden”：元素被隐藏之后，依然占据原来的位置<br>“display:table-cell”:<br>可以让元素以表格单元格的形式呈现，具备td元素的特点。<br>IE8+以及其他现代浏览器都支持此属性，不过IE6/IE7中并不支持，考虑到IE6/IE7使用率越来越低，我们还是果断使用这一布局神器，可以实现以下3种功能    </p>\n<ul>\n<li>图片垂直居中于元素</li>\n<li>等高布局</li>\n<li>自动平均划分元素，并且在同一行显示</li>\n</ul>\n</li>\n</ol>\n<ol>\n<li><p>图片常用的三种居中方式<br>水平居中 “text-align:center”<br>垂直居中 “display:table-cell”和”vertical-align:center”配合实现  </p>\n</li>\n<li><p>使用”font-size:0”来去除”display:inline-block”的元素间距  </p>\n</li>\n<li><p>常用标签：<br>dl定义列表，结合dt、dd使用。dt定义列表中的项目，dd描述列表中的项目。<br>b 加粗<br>u 下划线<br>i 斜体<br>s 中划线<br>strong  强调<br>hr 分割线<br>img标签下，alt属性是找不到图片的时候显示，title是鼠标放在图片上的时候显示<br>a标签下，设置target=”_blank”属性，点击链接会打开新窗口，title属性设置内容，是鼠标放在链接上的时候显示  </p>\n</li>\n<li><p>搜索引擎优化<br>“text-indent:-9999px;”属性一般用于LOGO部分，在搜索引擎中h1是非常重要的标签，一般把网站的LOGO图片放到h1标签中，但是搜索引擎无法识别图片，只能识别文字，为了更好的优化SEO：<br>指定h1元素的长宽与LOGO图片的长宽一样，然后定义h1的背景图片（background-image）为LOGO图片<br>使用LOGO图片为h1的背景图片，然后使用”text-indent:-9999px;”属性来隐藏h1的文字内容。  </p>\n</li>\n<li><p>“text-align:center;”与”margin:0 auto;”的区别    </p>\n<ul>\n<li>“text-align:center;” 实现文字、inline元素以及inline-block元素的水平居中  </li>\n<li>“margin:0 auto;” 实现的是块元素的水平居中  </li>\n<li>“text-align:center;”在父元素中定义，”margin:0 auto;” 在当前元素中定义</li>\n</ul>\n</li>\n<li><p>清除浮动常见的三种方法  </p>\n<ul>\n<li>clear:both（最常用）不应用于浮动元素本身，而是浮动元素后面的元素</li>\n<li>overflow:hidden 应用于浮动元素的父元素，而是不是当前的浮动元素</li>\n<li>::after伪元素 结合clear:both使用</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>常见块元素与行内元素<br>块级元素：div , p , form, ul, li , ol, dl, form, address, fieldset, hr, menu, table<br>行内元素：span, strong, em, br, img , input, label…  </p>\n</li>\n<li><p>display常见属性<br>“display:none”：元素被隐藏之后，不占据原来的位置<br>“visibility:hidden”：元素被隐藏之后，依然占据原来的位置<br>“display:table-cell”:<br>可以让元素以表格单元格的形式呈现，具备td元素的特点。<br>IE8+以及其他现代浏览器都支持此属性，不过IE6/IE7中并不支持，考虑到IE6/IE7使用率越来越低，我们还是果断使用这一布局神器，可以实现以下3种功能    </p>\n<ul>\n<li>图片垂直居中于元素</li>\n<li>等高布局</li>\n<li>自动平均划分元素，并且在同一行显示</li>\n</ul>\n</li>\n</ol>\n<ol>\n<li><p>图片常用的三种居中方式<br>水平居中 “text-align:center”<br>垂直居中 “display:table-cell”和”vertical-align:center”配合实现  </p>\n</li>\n<li><p>使用”font-size:0”来去除”display:inline-block”的元素间距  </p>\n</li>\n<li><p>常用标签：<br>dl定义列表，结合dt、dd使用。dt定义列表中的项目，dd描述列表中的项目。<br>b 加粗<br>u 下划线<br>i 斜体<br>s 中划线<br>strong  强调<br>hr 分割线<br>img标签下，alt属性是找不到图片的时候显示，title是鼠标放在图片上的时候显示<br>a标签下，设置target=”_blank”属性，点击链接会打开新窗口，title属性设置内容，是鼠标放在链接上的时候显示  </p>\n</li>\n<li><p>搜索引擎优化<br>“text-indent:-9999px;”属性一般用于LOGO部分，在搜索引擎中h1是非常重要的标签，一般把网站的LOGO图片放到h1标签中，但是搜索引擎无法识别图片，只能识别文字，为了更好的优化SEO：<br>指定h1元素的长宽与LOGO图片的长宽一样，然后定义h1的背景图片（background-image）为LOGO图片<br>使用LOGO图片为h1的背景图片，然后使用”text-indent:-9999px;”属性来隐藏h1的文字内容。  </p>\n</li>\n<li><p>“text-align:center;”与”margin:0 auto;”的区别    </p>\n<ul>\n<li>“text-align:center;” 实现文字、inline元素以及inline-block元素的水平居中  </li>\n<li>“margin:0 auto;” 实现的是块元素的水平居中  </li>\n<li>“text-align:center;”在父元素中定义，”margin:0 auto;” 在当前元素中定义</li>\n</ul>\n</li>\n<li><p>清除浮动常见的三种方法  </p>\n<ul>\n<li>clear:both（最常用）不应用于浮动元素本身，而是浮动元素后面的元素</li>\n<li>overflow:hidden 应用于浮动元素的父元素，而是不是当前的浮动元素</li>\n<li>::after伪元素 结合clear:both使用</li>\n</ul>\n</li>\n</ol>\n"},{"title":"6月定个目标","date":"2017-06-05T14:30:42.000Z","_content":"\n想背单词，想看电视剧，想看小说，想学web前端，想学python，想学唱歌，想学跳舞，想练瑜伽，想跑步，想写博客，想学画画，想做的事情太多了。。。  \n\n于是我晚上8点下班回去，吃完饭，20个单词先看了一遍，也没记住，就又听了几首歌，听了一篇文章，看看空间朋友圈，就10点了  \n\n突然就觉得精力太分散了，每天下班后的时间就那么点，什么都想做，什么都没做好，想做的事真的得排个优先级了  \n\n6月份工作任务，上班时间提高效率，下班之前都能完成了，家里、个人生活都没什么占时较多的，这个月可以先尝试安排个计划  \n\n6月5号----6月30号  \n每天背20个单词   #优先级高（上下班地铁上、晚上回家）  \n每天早上看英文书半小时    #优先级高（上班前）  \nweb前端基础             #优先级高（下班后在公司看）  \n瑜伽15--20分钟          #优先级高（睡觉前）  \n博客                   #优先级中  \n看其他书               #优先级中  \n其他                  #优先级低  ","source":"_posts/6月定个目标.md","raw":"---\ntitle: 6月定个目标\ndate: 2017-06-05 22:30:42\ntags: [总结]\n---\n\n想背单词，想看电视剧，想看小说，想学web前端，想学python，想学唱歌，想学跳舞，想练瑜伽，想跑步，想写博客，想学画画，想做的事情太多了。。。  \n\n于是我晚上8点下班回去，吃完饭，20个单词先看了一遍，也没记住，就又听了几首歌，听了一篇文章，看看空间朋友圈，就10点了  \n\n突然就觉得精力太分散了，每天下班后的时间就那么点，什么都想做，什么都没做好，想做的事真的得排个优先级了  \n\n6月份工作任务，上班时间提高效率，下班之前都能完成了，家里、个人生活都没什么占时较多的，这个月可以先尝试安排个计划  \n\n6月5号----6月30号  \n每天背20个单词   #优先级高（上下班地铁上、晚上回家）  \n每天早上看英文书半小时    #优先级高（上班前）  \nweb前端基础             #优先级高（下班后在公司看）  \n瑜伽15--20分钟          #优先级高（睡觉前）  \n博客                   #优先级中  \n看其他书               #优先级中  \n其他                  #优先级低  ","slug":"6月定个目标","published":1,"updated":"2018-08-29T10:14:44.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519z2000gxcnotov78mwg","content":"<p>想背单词，想看电视剧，想看小说，想学web前端，想学python，想学唱歌，想学跳舞，想练瑜伽，想跑步，想写博客，想学画画，想做的事情太多了。。。  </p>\n<p>于是我晚上8点下班回去，吃完饭，20个单词先看了一遍，也没记住，就又听了几首歌，听了一篇文章，看看空间朋友圈，就10点了  </p>\n<p>突然就觉得精力太分散了，每天下班后的时间就那么点，什么都想做，什么都没做好，想做的事真的得排个优先级了  </p>\n<p>6月份工作任务，上班时间提高效率，下班之前都能完成了，家里、个人生活都没什么占时较多的，这个月可以先尝试安排个计划  </p>\n<p>6月5号—-6月30号<br>每天背20个单词   #优先级高（上下班地铁上、晚上回家）<br>每天早上看英文书半小时    #优先级高（上班前）<br>web前端基础             #优先级高（下班后在公司看）<br>瑜伽15–20分钟          #优先级高（睡觉前）<br>博客                   #优先级中<br>看其他书               #优先级中<br>其他                  #优先级低  </p>\n","site":{"data":{}},"excerpt":"","more":"<p>想背单词，想看电视剧，想看小说，想学web前端，想学python，想学唱歌，想学跳舞，想练瑜伽，想跑步，想写博客，想学画画，想做的事情太多了。。。  </p>\n<p>于是我晚上8点下班回去，吃完饭，20个单词先看了一遍，也没记住，就又听了几首歌，听了一篇文章，看看空间朋友圈，就10点了  </p>\n<p>突然就觉得精力太分散了，每天下班后的时间就那么点，什么都想做，什么都没做好，想做的事真的得排个优先级了  </p>\n<p>6月份工作任务，上班时间提高效率，下班之前都能完成了，家里、个人生活都没什么占时较多的，这个月可以先尝试安排个计划  </p>\n<p>6月5号—-6月30号<br>每天背20个单词   #优先级高（上下班地铁上、晚上回家）<br>每天早上看英文书半小时    #优先级高（上班前）<br>web前端基础             #优先级高（下班后在公司看）<br>瑜伽15–20分钟          #优先级高（睡觉前）<br>博客                   #优先级中<br>看其他书               #优先级中<br>其他                  #优先级低  </p>\n"},{"title":"Android手机调试","date":"2017-10-12T12:50:40.000Z","_content":"\n1. 查看adb安装版本   \n adb version\n \n2. 查看设备是否连接  \n adb devices\n \n3. 查看日志  \n adb logcat | grep \"cocos2d-x\"\n\n\n安装ADB参考文档：  \nhttp://www.jianshu.com/p/1b3fb1f27b67\n","source":"_posts/Android手机调试.md","raw":"---\ntitle: Android手机调试\ndate: 2017-10-12 20:50:40\ntags: [工具, 游戏]\n---\n\n1. 查看adb安装版本   \n adb version\n \n2. 查看设备是否连接  \n adb devices\n \n3. 查看日志  \n adb logcat | grep \"cocos2d-x\"\n\n\n安装ADB参考文档：  \nhttp://www.jianshu.com/p/1b3fb1f27b67\n","slug":"Android手机调试","published":1,"updated":"2018-08-29T10:14:44.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519z3000ixcno7vb6d74v","content":"<ol>\n<li><p>查看adb安装版本<br>adb version</p>\n</li>\n<li><p>查看设备是否连接<br>adb devices</p>\n</li>\n<li><p>查看日志<br>adb logcat | grep “cocos2d-x”</p>\n</li>\n</ol>\n<p>安装ADB参考文档：<br><a href=\"http://www.jianshu.com/p/1b3fb1f27b67\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/1b3fb1f27b67</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>查看adb安装版本<br>adb version</p>\n</li>\n<li><p>查看设备是否连接<br>adb devices</p>\n</li>\n<li><p>查看日志<br>adb logcat | grep “cocos2d-x”</p>\n</li>\n</ol>\n<p>安装ADB参考文档：<br><a href=\"http://www.jianshu.com/p/1b3fb1f27b67\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/1b3fb1f27b67</a></p>\n"},{"title":"7-布局和性能优化","date":"2017-06-09T14:59:53.000Z","_content":"\n1. 深入定位  \nCSS两大定位方式：浮动和定位。  \n * 浮动布局比较灵活，但不容易控制\n * 定位布局虽然缺乏灵活性，但可以精准的定页面中元素的位置\n\n2. 定位布局的四种方式：  \n * 固定定位（fixed）\n * 相对定位（ralative）\n * 绝对定位（absolute）  #会将元素转换为块元素\n * 静态定位（static）   \n  除了static之外的，元素定义了position之后，top、bottom、left、right才生效\n\n3. z-index属性  \n默认情况下处于不激活状态，设置了无效。只有定义了position为relative、absolute、fixed时才会被激活  \nz-index值越大的，会展现在越上层  \n  ","source":"_posts/7-布局和性能优化.md","raw":"---\ntitle: 7-布局和性能优化\ndate: 2017-06-09 22:59:53\ntags: html\n---\n\n1. 深入定位  \nCSS两大定位方式：浮动和定位。  \n * 浮动布局比较灵活，但不容易控制\n * 定位布局虽然缺乏灵活性，但可以精准的定页面中元素的位置\n\n2. 定位布局的四种方式：  \n * 固定定位（fixed）\n * 相对定位（ralative）\n * 绝对定位（absolute）  #会将元素转换为块元素\n * 静态定位（static）   \n  除了static之外的，元素定义了position之后，top、bottom、left、right才生效\n\n3. z-index属性  \n默认情况下处于不激活状态，设置了无效。只有定义了position为relative、absolute、fixed时才会被激活  \nz-index值越大的，会展现在越上层  \n  ","slug":"7-布局和性能优化","published":1,"updated":"2018-08-29T10:14:44.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519z5000lxcnov87w09aw","content":"<ol>\n<li><p>深入定位<br>CSS两大定位方式：浮动和定位。  </p>\n<ul>\n<li>浮动布局比较灵活，但不容易控制</li>\n<li>定位布局虽然缺乏灵活性，但可以精准的定页面中元素的位置</li>\n</ul>\n</li>\n<li><p>定位布局的四种方式：  </p>\n<ul>\n<li>固定定位（fixed）</li>\n<li>相对定位（ralative）</li>\n<li>绝对定位（absolute）  #会将元素转换为块元素</li>\n<li>静态定位（static）<br>除了static之外的，元素定义了position之后，top、bottom、left、right才生效</li>\n</ul>\n</li>\n<li><p>z-index属性<br>默认情况下处于不激活状态，设置了无效。只有定义了position为relative、absolute、fixed时才会被激活<br>z-index值越大的，会展现在越上层  </p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>深入定位<br>CSS两大定位方式：浮动和定位。  </p>\n<ul>\n<li>浮动布局比较灵活，但不容易控制</li>\n<li>定位布局虽然缺乏灵活性，但可以精准的定页面中元素的位置</li>\n</ul>\n</li>\n<li><p>定位布局的四种方式：  </p>\n<ul>\n<li>固定定位（fixed）</li>\n<li>相对定位（ralative）</li>\n<li>绝对定位（absolute）  #会将元素转换为块元素</li>\n<li>静态定位（static）<br>除了static之外的，元素定义了position之后，top、bottom、left、right才生效</li>\n</ul>\n</li>\n<li><p>z-index属性<br>默认情况下处于不激活状态，设置了无效。只有定义了position为relative、absolute、fixed时才会被激活<br>z-index值越大的，会展现在越上层  </p>\n</li>\n</ol>\n"},{"title":"Cocos2d-JS开发","date":"2017-08-29T12:19:00.000Z","_content":"\n1. cocos2d-js中数据持久化：  \n\t* localStorage: 没有时间限制的数据持久化。（键值对）\n\t* sessionStorage: 针对一个web会话的数据持久化。  \n\tcocos2d-js不支持cocos2d-x中的属性列表和sqlite数据库。\n\n2. HTTP 与 HTTPS\n\tInternet的基本协议是TCP/IP。    \n\tHTTP超文本传输协议，是无连接协议，每一次请求时建立连接，服务器处理完客户端的请求后，应答给客户端，然后断开连接，不会一直占用网络资源。  \n\tHTTPS安全超文本传输协议，是超文本传输协议和SSL组合，提供加密通信及网络服务器身份的鉴定。  \n\n3. GET和POST  \n\tGET是向指定的资源发出请求，送的信息显示在URL后面，GET方法应该只用在读取数据(如静态图片等数据)。（GET方法就像使用明信片给别人写信，接触到的人都可以看到，因此不安全）  \n\tPOST是向指定资源提交数据，请求服务器进行处理。例如：提交表单或者上传文件等。数据被包含在请求体中。（POST方法像把“信内容”装到信封中给别人写信，接触到的人都看不到，因此安全）","source":"_posts/Cocos2d-JS开发.md","raw":"---\ntitle: Cocos2d-JS开发\ndate: 2017-08-29 20:19:00\ntags: 游戏\n---\n\n1. cocos2d-js中数据持久化：  \n\t* localStorage: 没有时间限制的数据持久化。（键值对）\n\t* sessionStorage: 针对一个web会话的数据持久化。  \n\tcocos2d-js不支持cocos2d-x中的属性列表和sqlite数据库。\n\n2. HTTP 与 HTTPS\n\tInternet的基本协议是TCP/IP。    \n\tHTTP超文本传输协议，是无连接协议，每一次请求时建立连接，服务器处理完客户端的请求后，应答给客户端，然后断开连接，不会一直占用网络资源。  \n\tHTTPS安全超文本传输协议，是超文本传输协议和SSL组合，提供加密通信及网络服务器身份的鉴定。  \n\n3. GET和POST  \n\tGET是向指定的资源发出请求，送的信息显示在URL后面，GET方法应该只用在读取数据(如静态图片等数据)。（GET方法就像使用明信片给别人写信，接触到的人都可以看到，因此不安全）  \n\tPOST是向指定资源提交数据，请求服务器进行处理。例如：提交表单或者上传文件等。数据被包含在请求体中。（POST方法像把“信内容”装到信封中给别人写信，接触到的人都看不到，因此安全）","slug":"Cocos2d-JS开发","published":1,"updated":"2018-08-29T10:14:44.109Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519z6000nxcno3da419gs","content":"<ol>\n<li><p>cocos2d-js中数据持久化：  </p>\n<ul>\n<li>localStorage: 没有时间限制的数据持久化。（键值对）</li>\n<li>sessionStorage: 针对一个web会话的数据持久化。<br>cocos2d-js不支持cocos2d-x中的属性列表和sqlite数据库。</li>\n</ul>\n</li>\n<li><p>HTTP 与 HTTPS<br> Internet的基本协议是TCP/IP。<br> HTTP超文本传输协议，是无连接协议，每一次请求时建立连接，服务器处理完客户端的请求后，应答给客户端，然后断开连接，不会一直占用网络资源。<br> HTTPS安全超文本传输协议，是超文本传输协议和SSL组合，提供加密通信及网络服务器身份的鉴定。  </p>\n</li>\n<li><p>GET和POST<br> GET是向指定的资源发出请求，送的信息显示在URL后面，GET方法应该只用在读取数据(如静态图片等数据)。（GET方法就像使用明信片给别人写信，接触到的人都可以看到，因此不安全）<br> POST是向指定资源提交数据，请求服务器进行处理。例如：提交表单或者上传文件等。数据被包含在请求体中。（POST方法像把“信内容”装到信封中给别人写信，接触到的人都看不到，因此安全）</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>cocos2d-js中数据持久化：  </p>\n<ul>\n<li>localStorage: 没有时间限制的数据持久化。（键值对）</li>\n<li>sessionStorage: 针对一个web会话的数据持久化。<br>cocos2d-js不支持cocos2d-x中的属性列表和sqlite数据库。</li>\n</ul>\n</li>\n<li><p>HTTP 与 HTTPS<br> Internet的基本协议是TCP/IP。<br> HTTP超文本传输协议，是无连接协议，每一次请求时建立连接，服务器处理完客户端的请求后，应答给客户端，然后断开连接，不会一直占用网络资源。<br> HTTPS安全超文本传输协议，是超文本传输协议和SSL组合，提供加密通信及网络服务器身份的鉴定。  </p>\n</li>\n<li><p>GET和POST<br> GET是向指定的资源发出请求，送的信息显示在URL后面，GET方法应该只用在读取数据(如静态图片等数据)。（GET方法就像使用明信片给别人写信，接触到的人都可以看到，因此不安全）<br> POST是向指定资源提交数据，请求服务器进行处理。例如：提交表单或者上传文件等。数据被包含在请求体中。（POST方法像把“信内容”装到信封中给别人写信，接触到的人都看不到，因此安全）</p>\n</li>\n</ol>\n"},{"title":"Cocos2d-x基础","date":"2017-07-11T10:48:19.000Z","_content":"基础：一个游戏可以有多个场景，每个场景可以包含多个不同的层，每层可拥有任意个游戏节点（常见的是精灵，但也可以是层、菜单和文本等）。  \n  \n继承关系：cc.Class<--cc.Node<--cc.NodeRGBA<--cc.Sprite  \n（与Java中的Object一样，所有类都要直接或间接继承自Class） \n\n=== 严格等于：不仅值要相等，类型也要相等  \n!== 非严格等于，与===恰恰相反  \n\n导演：cc.Director用于管理场景，采用单例模式，整个过程中只有一个实例对象。   \n场景类：cc.Class<--cc.Node<--cc.Scene<--cc.TransitionScene  \n层：cc.Class<--cc.Node<--cc.Layer<--cc.LayerColor<--cc.LayerGrandient\ncc.LabelTTF是最简单的标签类：cc.Class<--cc.Node<--cc.NodeRGBA<--cc.Sprite<--cc.LabelTTF  \n\n引用框架常用赋值写法： var chess = chess || {}; (假如chess已经被定义，就用原来的值，chess未被定义，就赋值{})\n\n精灵的性能优化  \n* 使用纹理图集  \n* 使用精灵帧缓存  \n>纹理缓存（TextureCache）\n>精灵帧缓存（SpriteFrameCache）\n\n场景与层：  \n通过导演类cc.director切换场景:   \n* runScene(scene): 运行场景，只能在启动第一个场景时调用该函数。如果已经有一个场景运行则不能调用该函数。  \n* pushScene(scene): 切换到下一个场景，将当前场景挂起放入到场景堆栈中，然后切换到下一个场景中。（不释放和销毁场景，原来的场景状态可以保持，但是不能同时有太多的场景对象运行cc.director.pushScene(new SettingScene());）  \n* popScene()：与pushScene配合使用，可以回到根场景。(cc.director.popScene();)   \n* popToRootScene(): 与pushScene配合使用，可以回到根场景。  \n\n设计分辨率设置：cc.view.setDesignResolutionSize(640,960,cc.ResolutionPolicy.NO_BORDER);  //640和960是设计分辨率宽高，背景图片是640*960","source":"_posts/Cocos2d-x基础.md","raw":"---\ntitle: Cocos2d-x基础\ndate: 2017-07-11 18:48:19\ntags: 游戏\n---\n基础：一个游戏可以有多个场景，每个场景可以包含多个不同的层，每层可拥有任意个游戏节点（常见的是精灵，但也可以是层、菜单和文本等）。  \n  \n继承关系：cc.Class<--cc.Node<--cc.NodeRGBA<--cc.Sprite  \n（与Java中的Object一样，所有类都要直接或间接继承自Class） \n\n=== 严格等于：不仅值要相等，类型也要相等  \n!== 非严格等于，与===恰恰相反  \n\n导演：cc.Director用于管理场景，采用单例模式，整个过程中只有一个实例对象。   \n场景类：cc.Class<--cc.Node<--cc.Scene<--cc.TransitionScene  \n层：cc.Class<--cc.Node<--cc.Layer<--cc.LayerColor<--cc.LayerGrandient\ncc.LabelTTF是最简单的标签类：cc.Class<--cc.Node<--cc.NodeRGBA<--cc.Sprite<--cc.LabelTTF  \n\n引用框架常用赋值写法： var chess = chess || {}; (假如chess已经被定义，就用原来的值，chess未被定义，就赋值{})\n\n精灵的性能优化  \n* 使用纹理图集  \n* 使用精灵帧缓存  \n>纹理缓存（TextureCache）\n>精灵帧缓存（SpriteFrameCache）\n\n场景与层：  \n通过导演类cc.director切换场景:   \n* runScene(scene): 运行场景，只能在启动第一个场景时调用该函数。如果已经有一个场景运行则不能调用该函数。  \n* pushScene(scene): 切换到下一个场景，将当前场景挂起放入到场景堆栈中，然后切换到下一个场景中。（不释放和销毁场景，原来的场景状态可以保持，但是不能同时有太多的场景对象运行cc.director.pushScene(new SettingScene());）  \n* popScene()：与pushScene配合使用，可以回到根场景。(cc.director.popScene();)   \n* popToRootScene(): 与pushScene配合使用，可以回到根场景。  \n\n设计分辨率设置：cc.view.setDesignResolutionSize(640,960,cc.ResolutionPolicy.NO_BORDER);  //640和960是设计分辨率宽高，背景图片是640*960","slug":"Cocos2d-x基础","published":1,"updated":"2018-08-29T10:14:44.109Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519z7000qxcno75tw4owt","content":"<p>基础：一个游戏可以有多个场景，每个场景可以包含多个不同的层，每层可拥有任意个游戏节点（常见的是精灵，但也可以是层、菜单和文本等）。  </p>\n<p>继承关系：cc.Class&lt;–cc.Node&lt;–cc.NodeRGBA&lt;–cc.Sprite<br>（与Java中的Object一样，所有类都要直接或间接继承自Class） </p>\n<p>=== 严格等于：不仅值要相等，类型也要相等<br>!== 非严格等于，与===恰恰相反  </p>\n<p>导演：cc.Director用于管理场景，采用单例模式，整个过程中只有一个实例对象。<br>场景类：cc.Class&lt;–cc.Node&lt;–cc.Scene&lt;–cc.TransitionScene<br>层：cc.Class&lt;–cc.Node&lt;–cc.Layer&lt;–cc.LayerColor&lt;–cc.LayerGrandient<br>cc.LabelTTF是最简单的标签类：cc.Class&lt;–cc.Node&lt;–cc.NodeRGBA&lt;–cc.Sprite&lt;–cc.LabelTTF  </p>\n<p>引用框架常用赋值写法： var chess = chess || {}; (假如chess已经被定义，就用原来的值，chess未被定义，就赋值{})</p>\n<p>精灵的性能优化  </p>\n<ul>\n<li>使用纹理图集  </li>\n<li>使用精灵帧缓存  <blockquote>\n<p>纹理缓存（TextureCache）<br>精灵帧缓存（SpriteFrameCache）</p>\n</blockquote>\n</li>\n</ul>\n<p>场景与层：<br>通过导演类cc.director切换场景:   </p>\n<ul>\n<li>runScene(scene): 运行场景，只能在启动第一个场景时调用该函数。如果已经有一个场景运行则不能调用该函数。  </li>\n<li>pushScene(scene): 切换到下一个场景，将当前场景挂起放入到场景堆栈中，然后切换到下一个场景中。（不释放和销毁场景，原来的场景状态可以保持，但是不能同时有太多的场景对象运行cc.director.pushScene(new SettingScene());）  </li>\n<li>popScene()：与pushScene配合使用，可以回到根场景。(cc.director.popScene();)   </li>\n<li>popToRootScene(): 与pushScene配合使用，可以回到根场景。  </li>\n</ul>\n<p>设计分辨率设置：cc.view.setDesignResolutionSize(640,960,cc.ResolutionPolicy.NO_BORDER);  //640和960是设计分辨率宽高，背景图片是640*960</p>\n","site":{"data":{}},"excerpt":"","more":"<p>基础：一个游戏可以有多个场景，每个场景可以包含多个不同的层，每层可拥有任意个游戏节点（常见的是精灵，但也可以是层、菜单和文本等）。  </p>\n<p>继承关系：cc.Class&lt;–cc.Node&lt;–cc.NodeRGBA&lt;–cc.Sprite<br>（与Java中的Object一样，所有类都要直接或间接继承自Class） </p>\n<p>=== 严格等于：不仅值要相等，类型也要相等<br>!== 非严格等于，与===恰恰相反  </p>\n<p>导演：cc.Director用于管理场景，采用单例模式，整个过程中只有一个实例对象。<br>场景类：cc.Class&lt;–cc.Node&lt;–cc.Scene&lt;–cc.TransitionScene<br>层：cc.Class&lt;–cc.Node&lt;–cc.Layer&lt;–cc.LayerColor&lt;–cc.LayerGrandient<br>cc.LabelTTF是最简单的标签类：cc.Class&lt;–cc.Node&lt;–cc.NodeRGBA&lt;–cc.Sprite&lt;–cc.LabelTTF  </p>\n<p>引用框架常用赋值写法： var chess = chess || {}; (假如chess已经被定义，就用原来的值，chess未被定义，就赋值{})</p>\n<p>精灵的性能优化  </p>\n<ul>\n<li>使用纹理图集  </li>\n<li>使用精灵帧缓存  <blockquote>\n<p>纹理缓存（TextureCache）<br>精灵帧缓存（SpriteFrameCache）</p>\n</blockquote>\n</li>\n</ul>\n<p>场景与层：<br>通过导演类cc.director切换场景:   </p>\n<ul>\n<li>runScene(scene): 运行场景，只能在启动第一个场景时调用该函数。如果已经有一个场景运行则不能调用该函数。  </li>\n<li>pushScene(scene): 切换到下一个场景，将当前场景挂起放入到场景堆栈中，然后切换到下一个场景中。（不释放和销毁场景，原来的场景状态可以保持，但是不能同时有太多的场景对象运行cc.director.pushScene(new SettingScene());）  </li>\n<li>popScene()：与pushScene配合使用，可以回到根场景。(cc.director.popScene();)   </li>\n<li>popToRootScene(): 与pushScene配合使用，可以回到根场景。  </li>\n</ul>\n<p>设计分辨率设置：cc.view.setDesignResolutionSize(640,960,cc.ResolutionPolicy.NO_BORDER);  //640和960是设计分辨率宽高，背景图片是640*960</p>\n"},{"title":"css和js放在head标签中还是body中","date":"2017-09-19T12:45:24.000Z","_content":"\n**在HTML body中的JavaScript会在<font color=red>页面加载的时候</font>执行**  \n**在HTML head中的JavaScript会在<font color=red>被调用的时候</font>才执行**   \n**<font color=red>建议：css在head中引入，js在body尾部引入（这样有利于提升页面的性能，加载速度更快）</font>**  \n**加载顺序：放在head中，页面加载前就加载js了。放在body中，页面加载后才加载js，所以head里面的先加载优先级高**\n\n---\njavascript应该放在哪里？  \n页面中的JavaScript会在浏览器加载页面的时候立即被执行，通常被用来生成页面的内容。写法如下：     \n> < html >  \n> < head >  \n> < /head >  \n> < body >  \n> < script type=\"text/javascript\" \\>  \n> ...  \n> < script >  \n> < /body >  \n> < /html >\n\nJavaScript放在head中，可以保证脚本在任何调用之前被加载，通常写需调用才执行的脚本或事件触发执行的脚本。写法如下：  \n> < html >  \n> < head >  \n> < script type=\"text/javascript\" >  \n> ...    \n> < script >   \n> </head >   \n> </html >\n\nhead中和bosy中可同时放无数的脚本  \n外部js，使用“src”属性指向相应的js文件。写法如下：  \n> < html >  \n> < head >  \n> < script src=\"xx.js\" >  \n> ...    \n> < script >   \n> < /head >   \n> < /html >\n\n参考：\nhttp://www.cnblogs.com/ddyq/archive/2012/03/06/2382816.html  \nhttp://www.imooc.com/qadetail/76717  ","source":"_posts/css和js放在head标签中还是body中.md","raw":"---\ntitle: css和js放在head标签中还是body中\ndate: 2017-09-19 20:45:24\ntags: javascript\n---\n\n**在HTML body中的JavaScript会在<font color=red>页面加载的时候</font>执行**  \n**在HTML head中的JavaScript会在<font color=red>被调用的时候</font>才执行**   \n**<font color=red>建议：css在head中引入，js在body尾部引入（这样有利于提升页面的性能，加载速度更快）</font>**  \n**加载顺序：放在head中，页面加载前就加载js了。放在body中，页面加载后才加载js，所以head里面的先加载优先级高**\n\n---\njavascript应该放在哪里？  \n页面中的JavaScript会在浏览器加载页面的时候立即被执行，通常被用来生成页面的内容。写法如下：     \n> < html >  \n> < head >  \n> < /head >  \n> < body >  \n> < script type=\"text/javascript\" \\>  \n> ...  \n> < script >  \n> < /body >  \n> < /html >\n\nJavaScript放在head中，可以保证脚本在任何调用之前被加载，通常写需调用才执行的脚本或事件触发执行的脚本。写法如下：  \n> < html >  \n> < head >  \n> < script type=\"text/javascript\" >  \n> ...    \n> < script >   \n> </head >   \n> </html >\n\nhead中和bosy中可同时放无数的脚本  \n外部js，使用“src”属性指向相应的js文件。写法如下：  \n> < html >  \n> < head >  \n> < script src=\"xx.js\" >  \n> ...    \n> < script >   \n> < /head >   \n> < /html >\n\n参考：\nhttp://www.cnblogs.com/ddyq/archive/2012/03/06/2382816.html  \nhttp://www.imooc.com/qadetail/76717  ","slug":"css和js放在head标签中还是body中","published":1,"updated":"2018-08-29T10:14:44.109Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519z8000sxcnoddu32e94","content":"<p><strong>在HTML body中的JavaScript会在<font color=\"red\">页面加载的时候</font>执行</strong><br><strong>在HTML head中的JavaScript会在<font color=\"red\">被调用的时候</font>才执行</strong><br><strong><font color=\"red\">建议：css在head中引入，js在body尾部引入（这样有利于提升页面的性能，加载速度更快）</font></strong><br><strong>加载顺序：放在head中，页面加载前就加载js了。放在body中，页面加载后才加载js，所以head里面的先加载优先级高</strong></p>\n<hr>\n<p>javascript应该放在哪里？<br>页面中的JavaScript会在浏览器加载页面的时候立即被执行，通常被用来生成页面的内容。写法如下：     </p>\n<blockquote>\n<p>&lt; html &gt;<br>&lt; head &gt;<br>&lt; /head &gt;<br>&lt; body &gt;<br>&lt; script type=”text/javascript” ><br>…<br>&lt; script &gt;<br>&lt; /body &gt;<br>&lt; /html &gt;</p>\n</blockquote>\n<p>JavaScript放在head中，可以保证脚本在任何调用之前被加载，通常写需调用才执行的脚本或事件触发执行的脚本。写法如下：  </p>\n<blockquote>\n<p>&lt; html &gt;<br>&lt; head &gt;<br>&lt; script type=”text/javascript” &gt;<br>…<br>&lt; script &gt;<br><br></p>\n</blockquote>\n<p>head中和bosy中可同时放无数的脚本<br>外部js，使用“src”属性指向相应的js文件。写法如下：  </p>\n<blockquote>\n<p>&lt; html &gt;<br>&lt; head &gt;<br>&lt; script src=”xx.js” &gt;<br>…<br>&lt; script &gt;<br>&lt; /head &gt;<br>&lt; /html &gt;</p>\n</blockquote>\n<p>参考：<br><a href=\"http://www.cnblogs.com/ddyq/archive/2012/03/06/2382816.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/ddyq/archive/2012/03/06/2382816.html</a><br><a href=\"http://www.imooc.com/qadetail/76717\" target=\"_blank\" rel=\"external\">http://www.imooc.com/qadetail/76717</a>  </p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>在HTML body中的JavaScript会在<font color=\"red\">页面加载的时候</font>执行</strong><br><strong>在HTML head中的JavaScript会在<font color=\"red\">被调用的时候</font>才执行</strong><br><strong><font color=\"red\">建议：css在head中引入，js在body尾部引入（这样有利于提升页面的性能，加载速度更快）</font></strong><br><strong>加载顺序：放在head中，页面加载前就加载js了。放在body中，页面加载后才加载js，所以head里面的先加载优先级高</strong></p>\n<hr>\n<p>javascript应该放在哪里？<br>页面中的JavaScript会在浏览器加载页面的时候立即被执行，通常被用来生成页面的内容。写法如下：     </p>\n<blockquote>\n<p>&lt; html &gt;<br>&lt; head &gt;<br>&lt; /head &gt;<br>&lt; body &gt;<br>&lt; script type=”text/javascript” ><br>…<br>&lt; script &gt;<br>&lt; /body &gt;<br>&lt; /html &gt;</p>\n</blockquote>\n<p>JavaScript放在head中，可以保证脚本在任何调用之前被加载，通常写需调用才执行的脚本或事件触发执行的脚本。写法如下：  </p>\n<blockquote>\n<p>&lt; html &gt;<br>&lt; head &gt;<br>&lt; script type=”text/javascript” &gt;<br>…<br>&lt; script &gt;<br><br></p>\n</blockquote>\n<p>head中和bosy中可同时放无数的脚本<br>外部js，使用“src”属性指向相应的js文件。写法如下：  </p>\n<blockquote>\n<p>&lt; html &gt;<br>&lt; head &gt;<br>&lt; script src=”xx.js” &gt;<br>…<br>&lt; script &gt;<br>&lt; /head &gt;<br>&lt; /html &gt;</p>\n</blockquote>\n<p>参考：<br><a href=\"http://www.cnblogs.com/ddyq/archive/2012/03/06/2382816.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/ddyq/archive/2012/03/06/2382816.html</a><br><a href=\"http://www.imooc.com/qadetail/76717\" target=\"_blank\" rel=\"external\">http://www.imooc.com/qadetail/76717</a>  </p>\n"},{"title":"git命令行","date":"2017-06-02T09:25:55.000Z","_content":"\n1. git clone\n拉一个分支到当前目录\ngit clone https://github.com/cocosgirl/diana.git\n\n2. git add . \n把我们要提交的文件的信息添加到索引库中  \n例如：git add html_1_chapter.md\n\n3. git commit   \ngit将依据索引库中的内容来进行文件的提交  \n例如：git commit html_1_chapter.md -m \"测试本地提交\"  \n本地删除文件提交：  \ngit commit -a -m \"删除不要的文件\"\n\n4. git push  \n提交完以后发布  \n发布到分支：  \n例如：git push -u https://github.com/cocosgirl/cocosgirl.github.io master  \n\n5. 合并分支  \ngit pull origin hexo MERGE_HEAD origin/master  \n\n6. 设置当前分支  \n首先git checkout -b origin/master\n其次git checkout master\n即可恢复到master repository的状态，然后就可以pull了  \n\n7. git help <命令>   \n查找命令的帮助信息  \n\n8. git log  \n查看git的日志信息\n\t\n9. git init    \n创建一个新的代码库或者初始化一个已存在的代码库\n\n10. git rm  \n删除索引或代码库中的文件  \n\n11. git status  \n显示当前git的状态，包括增删改，但是没有提交的信息\n\n12. 初始化\\*\\*目录为本地代码库  \ncd \\*\\*  \ngit init   \n\n13. git fetch  \n从服务器代码库获取数据 \neg. git fetch origin  \n\n14. git merge origin/master   \n合并origin/master到本地master分支\n\n15. git pull 命令是git fetch和git merge命令的组合  \neg. git pull origin master 其中origin是远程代码库名，master是要合并的本地分支\n\n16. git其他常用命令参考\nhttp://www.cnblogs.com/cspku/articles/Git_cmds.html","source":"_posts/git命令行.md","raw":"---\ntitle: git命令行  \ndate: 2017-06-02 17:25:55\ntags: 命令行\n---\n\n1. git clone\n拉一个分支到当前目录\ngit clone https://github.com/cocosgirl/diana.git\n\n2. git add . \n把我们要提交的文件的信息添加到索引库中  \n例如：git add html_1_chapter.md\n\n3. git commit   \ngit将依据索引库中的内容来进行文件的提交  \n例如：git commit html_1_chapter.md -m \"测试本地提交\"  \n本地删除文件提交：  \ngit commit -a -m \"删除不要的文件\"\n\n4. git push  \n提交完以后发布  \n发布到分支：  \n例如：git push -u https://github.com/cocosgirl/cocosgirl.github.io master  \n\n5. 合并分支  \ngit pull origin hexo MERGE_HEAD origin/master  \n\n6. 设置当前分支  \n首先git checkout -b origin/master\n其次git checkout master\n即可恢复到master repository的状态，然后就可以pull了  \n\n7. git help <命令>   \n查找命令的帮助信息  \n\n8. git log  \n查看git的日志信息\n\t\n9. git init    \n创建一个新的代码库或者初始化一个已存在的代码库\n\n10. git rm  \n删除索引或代码库中的文件  \n\n11. git status  \n显示当前git的状态，包括增删改，但是没有提交的信息\n\n12. 初始化\\*\\*目录为本地代码库  \ncd \\*\\*  \ngit init   \n\n13. git fetch  \n从服务器代码库获取数据 \neg. git fetch origin  \n\n14. git merge origin/master   \n合并origin/master到本地master分支\n\n15. git pull 命令是git fetch和git merge命令的组合  \neg. git pull origin master 其中origin是远程代码库名，master是要合并的本地分支\n\n16. git其他常用命令参考\nhttp://www.cnblogs.com/cspku/articles/Git_cmds.html","slug":"git命令行","published":1,"updated":"2018-08-29T10:14:44.110Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519z9000uxcnobux1zhqy","content":"<ol>\n<li><p>git clone<br>拉一个分支到当前目录<br>git clone <a href=\"https://github.com/cocosgirl/diana.git\">https://github.com/cocosgirl/diana.git</a></p>\n</li>\n<li><p>git add .<br>把我们要提交的文件的信息添加到索引库中<br>例如：git add html_1_chapter.md</p>\n</li>\n<li><p>git commit<br>git将依据索引库中的内容来进行文件的提交<br>例如：git commit html_1_chapter.md -m “测试本地提交”<br>本地删除文件提交：<br>git commit -a -m “删除不要的文件”</p>\n</li>\n<li><p>git push<br>提交完以后发布<br>发布到分支：<br>例如：git push -u <a href=\"https://github.com/cocosgirl/cocosgirl.github.io\">https://github.com/cocosgirl/cocosgirl.github.io</a> master  </p>\n</li>\n<li><p>合并分支<br>git pull origin hexo MERGE_HEAD origin/master  </p>\n</li>\n<li><p>设置当前分支<br>首先git checkout -b origin/master<br>其次git checkout master<br>即可恢复到master repository的状态，然后就可以pull了  </p>\n</li>\n<li><p>git help &lt;命令&gt;<br>查找命令的帮助信息  </p>\n</li>\n<li><p>git log<br>查看git的日志信息</p>\n</li>\n<li><p>git init<br>创建一个新的代码库或者初始化一个已存在的代码库</p>\n</li>\n<li><p>git rm<br>删除索引或代码库中的文件  </p>\n</li>\n<li><p>git status<br>显示当前git的状态，包括增删改，但是没有提交的信息</p>\n</li>\n<li><p>初始化**目录为本地代码库<br>cd **<br>git init   </p>\n</li>\n<li><p>git fetch<br>从服务器代码库获取数据<br>eg. git fetch origin  </p>\n</li>\n<li><p>git merge origin/master<br>合并origin/master到本地master分支</p>\n</li>\n<li><p>git pull 命令是git fetch和git merge命令的组合<br>eg. git pull origin master 其中origin是远程代码库名，master是要合并的本地分支</p>\n</li>\n<li><p>git其他常用命令参考<br><a href=\"http://www.cnblogs.com/cspku/articles/Git_cmds.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/cspku/articles/Git_cmds.html</a></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>git clone<br>拉一个分支到当前目录<br>git clone <a href=\"https://github.com/cocosgirl/diana.git\">https://github.com/cocosgirl/diana.git</a></p>\n</li>\n<li><p>git add .<br>把我们要提交的文件的信息添加到索引库中<br>例如：git add html_1_chapter.md</p>\n</li>\n<li><p>git commit<br>git将依据索引库中的内容来进行文件的提交<br>例如：git commit html_1_chapter.md -m “测试本地提交”<br>本地删除文件提交：<br>git commit -a -m “删除不要的文件”</p>\n</li>\n<li><p>git push<br>提交完以后发布<br>发布到分支：<br>例如：git push -u <a href=\"https://github.com/cocosgirl/cocosgirl.github.io\">https://github.com/cocosgirl/cocosgirl.github.io</a> master  </p>\n</li>\n<li><p>合并分支<br>git pull origin hexo MERGE_HEAD origin/master  </p>\n</li>\n<li><p>设置当前分支<br>首先git checkout -b origin/master<br>其次git checkout master<br>即可恢复到master repository的状态，然后就可以pull了  </p>\n</li>\n<li><p>git help &lt;命令&gt;<br>查找命令的帮助信息  </p>\n</li>\n<li><p>git log<br>查看git的日志信息</p>\n</li>\n<li><p>git init<br>创建一个新的代码库或者初始化一个已存在的代码库</p>\n</li>\n<li><p>git rm<br>删除索引或代码库中的文件  </p>\n</li>\n<li><p>git status<br>显示当前git的状态，包括增删改，但是没有提交的信息</p>\n</li>\n<li><p>初始化**目录为本地代码库<br>cd **<br>git init   </p>\n</li>\n<li><p>git fetch<br>从服务器代码库获取数据<br>eg. git fetch origin  </p>\n</li>\n<li><p>git merge origin/master<br>合并origin/master到本地master分支</p>\n</li>\n<li><p>git pull 命令是git fetch和git merge命令的组合<br>eg. git pull origin master 其中origin是远程代码库名，master是要合并的本地分支</p>\n</li>\n<li><p>git其他常用命令参考<br><a href=\"http://www.cnblogs.com/cspku/articles/Git_cmds.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/cspku/articles/Git_cmds.html</a></p>\n</li>\n</ol>\n"},{"title":"Django学习","date":"2017-06-07T07:34:28.000Z","_content":"\n学习参考教程：\nhttp://djangobook.py3k.cn/\n\n1. Django MVC设计模式 \n总体的设计：\n * models.py  \\#模型：用这个类，可以通过简单的python代码来操作数据库，无需写每个操作都写一条SQL语句。\n * view.py  \\#视图：写后端业务逻辑\n * urls.py  \\#URL和视图的对应关系\n * \\*\\*.html  \\#html模板，写前端页面设计\n\n2. 使用Django的条件  \n使用Django的唯一先决条件是安装python。  \n\n3. 数据库  \nDjango 并不是非得要数据库才可以运行。如果只用它提供一些不涉及数据库的动态页面服务，也同样可以完美运行。   \nDJango的亮点之一--基于数据库的网站开发，必须安装某种类型的数据库来存储数据。\n\n4. 创建一个项目  \n * django-admin.py startproject myMenu  （myMenu 是项目名）\n * 创建app python manage.py startapp selectFood (selectFood是app名)\n * 校验模型的有效性：python manage.py validate\n\n5. 启动服务器命令：  \npython manage.py runserver #默认端口8000  \npython manage.py runserver 8080  #启动并修改服务器端口  \npython manage.py runserver 0.0.0.0:8080  #改变服务器监听的IP地址，让Django监听所有网络接口，其他电脑也可以连接到开发服务器了。\\(要和其他开发人员共享同一开发站点的话，该功能特别有用\\)\n\n6. 修改时区  \nDjango 包含一个默认为 America/Chicago 的 TIME_ZONE 设置，可以在 settings.py 文件中修改成你想要的时区。  \n例如：TIME_ZONE = 'Asia/Shanghai'\n\n7. python后端传值到html页面\n> 用两个大括号括起来的文字\\(例如 \\{ \\{ person_name \\} \\} \\)是变量\\(variable\\)  \n> 被大括号和百分号包围的文本(例如 \\{ % if ordered_warranty % \\} \\)是 模板标签\\(template tag\\)  \\(例如：if，for等\\)\n\n8. 当模板系统在变量名中遇到点时，按照以下顺序尝试进行查找：  \n * 字典查找 \\(比如 foo[\"bar\"] \\)\n * 属性查找 \\(比如 foo.bar \\)\n * 方法调用 \\(比如 foo.bar() \\)\n * 列表类型索引查找 \\(比如 foo[bar] \\)\n\n9. sql操作：  \n 9.1 数据过滤，使用 filter() 方法：   \n > Food.objects.filter(name=\"bread\", type=\"1\")   \n > filter()根据关键字参数来转换成SQL语句,相当于这样：   \n > select * from food where name=\"bread\" and type=\"1\"\n \n > Food.objects.filter(name__contains=\"bre\")   \n > 转换成SQL语句,相当于这样：   \n > select * from food where name LIKE \"bre\"\n \n 获取单个对象(只能是单个)\n > Food.objects.get(id=1)  \n \n 排序\n > Food.objects.order_by(\"name\")\n ","source":"_posts/Django学习.md","raw":"---\ntitle: Django学习\ndate: 2017-06-07 15:34:28\ntags: [框架]\n---\n\n学习参考教程：\nhttp://djangobook.py3k.cn/\n\n1. Django MVC设计模式 \n总体的设计：\n * models.py  \\#模型：用这个类，可以通过简单的python代码来操作数据库，无需写每个操作都写一条SQL语句。\n * view.py  \\#视图：写后端业务逻辑\n * urls.py  \\#URL和视图的对应关系\n * \\*\\*.html  \\#html模板，写前端页面设计\n\n2. 使用Django的条件  \n使用Django的唯一先决条件是安装python。  \n\n3. 数据库  \nDjango 并不是非得要数据库才可以运行。如果只用它提供一些不涉及数据库的动态页面服务，也同样可以完美运行。   \nDJango的亮点之一--基于数据库的网站开发，必须安装某种类型的数据库来存储数据。\n\n4. 创建一个项目  \n * django-admin.py startproject myMenu  （myMenu 是项目名）\n * 创建app python manage.py startapp selectFood (selectFood是app名)\n * 校验模型的有效性：python manage.py validate\n\n5. 启动服务器命令：  \npython manage.py runserver #默认端口8000  \npython manage.py runserver 8080  #启动并修改服务器端口  \npython manage.py runserver 0.0.0.0:8080  #改变服务器监听的IP地址，让Django监听所有网络接口，其他电脑也可以连接到开发服务器了。\\(要和其他开发人员共享同一开发站点的话，该功能特别有用\\)\n\n6. 修改时区  \nDjango 包含一个默认为 America/Chicago 的 TIME_ZONE 设置，可以在 settings.py 文件中修改成你想要的时区。  \n例如：TIME_ZONE = 'Asia/Shanghai'\n\n7. python后端传值到html页面\n> 用两个大括号括起来的文字\\(例如 \\{ \\{ person_name \\} \\} \\)是变量\\(variable\\)  \n> 被大括号和百分号包围的文本(例如 \\{ % if ordered_warranty % \\} \\)是 模板标签\\(template tag\\)  \\(例如：if，for等\\)\n\n8. 当模板系统在变量名中遇到点时，按照以下顺序尝试进行查找：  \n * 字典查找 \\(比如 foo[\"bar\"] \\)\n * 属性查找 \\(比如 foo.bar \\)\n * 方法调用 \\(比如 foo.bar() \\)\n * 列表类型索引查找 \\(比如 foo[bar] \\)\n\n9. sql操作：  \n 9.1 数据过滤，使用 filter() 方法：   \n > Food.objects.filter(name=\"bread\", type=\"1\")   \n > filter()根据关键字参数来转换成SQL语句,相当于这样：   \n > select * from food where name=\"bread\" and type=\"1\"\n \n > Food.objects.filter(name__contains=\"bre\")   \n > 转换成SQL语句,相当于这样：   \n > select * from food where name LIKE \"bre\"\n \n 获取单个对象(只能是单个)\n > Food.objects.get(id=1)  \n \n 排序\n > Food.objects.order_by(\"name\")\n ","slug":"Django学习","published":1,"updated":"2018-08-29T10:14:44.109Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zb000xxcnooim39euo","content":"<p>学习参考教程：<br><a href=\"http://djangobook.py3k.cn/\" target=\"_blank\" rel=\"external\">http://djangobook.py3k.cn/</a></p>\n<ol>\n<li><p>Django MVC设计模式<br>总体的设计：</p>\n<ul>\n<li>models.py  #模型：用这个类，可以通过简单的python代码来操作数据库，无需写每个操作都写一条SQL语句。</li>\n<li>view.py  #视图：写后端业务逻辑</li>\n<li>urls.py  #URL和视图的对应关系</li>\n<li>**.html  #html模板，写前端页面设计</li>\n</ul>\n</li>\n<li><p>使用Django的条件<br>使用Django的唯一先决条件是安装python。  </p>\n</li>\n<li><p>数据库<br>Django 并不是非得要数据库才可以运行。如果只用它提供一些不涉及数据库的动态页面服务，也同样可以完美运行。<br>DJango的亮点之一–基于数据库的网站开发，必须安装某种类型的数据库来存储数据。</p>\n</li>\n<li><p>创建一个项目  </p>\n<ul>\n<li>django-admin.py startproject myMenu  （myMenu 是项目名）</li>\n<li>创建app python manage.py startapp selectFood (selectFood是app名)</li>\n<li>校验模型的有效性：python manage.py validate</li>\n</ul>\n</li>\n<li><p>启动服务器命令：<br>python manage.py runserver #默认端口8000<br>python manage.py runserver 8080  #启动并修改服务器端口<br>python manage.py runserver 0.0.0.0:8080  #改变服务器监听的IP地址，让Django监听所有网络接口，其他电脑也可以连接到开发服务器了。(要和其他开发人员共享同一开发站点的话，该功能特别有用)</p>\n</li>\n<li><p>修改时区<br>Django 包含一个默认为 America/Chicago 的 TIME_ZONE 设置，可以在 settings.py 文件中修改成你想要的时区。<br>例如：TIME_ZONE = ‘Asia/Shanghai’</p>\n</li>\n<li><p>python后端传值到html页面</p>\n<blockquote>\n<p>用两个大括号括起来的文字(例如 { { person_name } } )是变量(variable)<br>被大括号和百分号包围的文本(例如 { % if ordered_warranty % } )是 模板标签(template tag)  (例如：if，for等)</p>\n</blockquote>\n</li>\n<li><p>当模板系统在变量名中遇到点时，按照以下顺序尝试进行查找：  </p>\n<ul>\n<li>字典查找 (比如 foo[“bar”] )</li>\n<li>属性查找 (比如 foo.bar )</li>\n<li>方法调用 (比如 foo.bar() )</li>\n<li>列表类型索引查找 (比如 foo[bar] )</li>\n</ul>\n</li>\n<li><p>sql操作：<br>9.1 数据过滤，使用 filter() 方法：   </p>\n<blockquote>\n<p>Food.objects.filter(name=”bread”, type=”1”)<br>filter()根据关键字参数来转换成SQL语句,相当于这样：<br>select * from food where name=”bread” and type=”1”</p>\n<p>Food.objects.filter(name__contains=”bre”)<br>转换成SQL语句,相当于这样：<br>select * from food where name LIKE “bre”</p>\n</blockquote>\n<p>获取单个对象(只能是单个)</p>\n<blockquote>\n<p>Food.objects.get(id=1)  </p>\n</blockquote>\n<p>排序</p>\n<blockquote>\n<p>Food.objects.order_by(“name”)</p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>学习参考教程：<br><a href=\"http://djangobook.py3k.cn/\" target=\"_blank\" rel=\"external\">http://djangobook.py3k.cn/</a></p>\n<ol>\n<li><p>Django MVC设计模式<br>总体的设计：</p>\n<ul>\n<li>models.py  #模型：用这个类，可以通过简单的python代码来操作数据库，无需写每个操作都写一条SQL语句。</li>\n<li>view.py  #视图：写后端业务逻辑</li>\n<li>urls.py  #URL和视图的对应关系</li>\n<li>**.html  #html模板，写前端页面设计</li>\n</ul>\n</li>\n<li><p>使用Django的条件<br>使用Django的唯一先决条件是安装python。  </p>\n</li>\n<li><p>数据库<br>Django 并不是非得要数据库才可以运行。如果只用它提供一些不涉及数据库的动态页面服务，也同样可以完美运行。<br>DJango的亮点之一–基于数据库的网站开发，必须安装某种类型的数据库来存储数据。</p>\n</li>\n<li><p>创建一个项目  </p>\n<ul>\n<li>django-admin.py startproject myMenu  （myMenu 是项目名）</li>\n<li>创建app python manage.py startapp selectFood (selectFood是app名)</li>\n<li>校验模型的有效性：python manage.py validate</li>\n</ul>\n</li>\n<li><p>启动服务器命令：<br>python manage.py runserver #默认端口8000<br>python manage.py runserver 8080  #启动并修改服务器端口<br>python manage.py runserver 0.0.0.0:8080  #改变服务器监听的IP地址，让Django监听所有网络接口，其他电脑也可以连接到开发服务器了。(要和其他开发人员共享同一开发站点的话，该功能特别有用)</p>\n</li>\n<li><p>修改时区<br>Django 包含一个默认为 America/Chicago 的 TIME_ZONE 设置，可以在 settings.py 文件中修改成你想要的时区。<br>例如：TIME_ZONE = ‘Asia/Shanghai’</p>\n</li>\n<li><p>python后端传值到html页面</p>\n<blockquote>\n<p>用两个大括号括起来的文字(例如 { { person_name } } )是变量(variable)<br>被大括号和百分号包围的文本(例如 { % if ordered_warranty % } )是 模板标签(template tag)  (例如：if，for等)</p>\n</blockquote>\n</li>\n<li><p>当模板系统在变量名中遇到点时，按照以下顺序尝试进行查找：  </p>\n<ul>\n<li>字典查找 (比如 foo[“bar”] )</li>\n<li>属性查找 (比如 foo.bar )</li>\n<li>方法调用 (比如 foo.bar() )</li>\n<li>列表类型索引查找 (比如 foo[bar] )</li>\n</ul>\n</li>\n<li><p>sql操作：<br>9.1 数据过滤，使用 filter() 方法：   </p>\n<blockquote>\n<p>Food.objects.filter(name=”bread”, type=”1”)<br>filter()根据关键字参数来转换成SQL语句,相当于这样：<br>select * from food where name=”bread” and type=”1”</p>\n<p>Food.objects.filter(name__contains=”bre”)<br>转换成SQL语句,相当于这样：<br>select * from food where name LIKE “bre”</p>\n</blockquote>\n<p>获取单个对象(只能是单个)</p>\n<blockquote>\n<p>Food.objects.get(id=1)  </p>\n</blockquote>\n<p>排序</p>\n<blockquote>\n<p>Food.objects.order_by(“name”)</p>\n</blockquote>\n</li>\n</ol>\n"},{"title":"hexo命令行","date":"2017-06-02T11:29:38.000Z","_content":"\n1. 新建页面的hexo命令是：  \nhexo new page \"pageName\"  \n\n2. 新建博客文章    \nhexo new \"文章名称\"  #新建文章  \nhexo new post \"文章名称\"  #新建文章,双引号可以不用\n\n3. 发布博客  \nhexo clean  #清除缓存 网页正常情况下可以忽略此条命令  \nhexo generate  #生成静态页面至public目录\n\n4. 写好之后可以现在本地预览，确定无误之后再部署到Github上    \nhexo server  #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）  \nhexo deploy  #将.deploy目录部署到GitHub  \n\n5. hexo命令简写形式  \nhexo n \"我的博客\" == hexo new \"我的博客\"  \nhexo g == hexo generate  \nhexo s == hexo server  \nhexo d == hexo deploy  \n \n6. 其他\nhexo help   # 查看帮助  \rhexo version  #查看Hexo的版本  \rhexo deploy -g  #生成加部署  \rhexo server -g  #生成加预览  ","source":"_posts/hexo命令行.md","raw":"---\ntitle: hexo命令行\ndate: 2017-06-02 19:29:38\ntags: 命令行\n---\n\n1. 新建页面的hexo命令是：  \nhexo new page \"pageName\"  \n\n2. 新建博客文章    \nhexo new \"文章名称\"  #新建文章  \nhexo new post \"文章名称\"  #新建文章,双引号可以不用\n\n3. 发布博客  \nhexo clean  #清除缓存 网页正常情况下可以忽略此条命令  \nhexo generate  #生成静态页面至public目录\n\n4. 写好之后可以现在本地预览，确定无误之后再部署到Github上    \nhexo server  #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）  \nhexo deploy  #将.deploy目录部署到GitHub  \n\n5. hexo命令简写形式  \nhexo n \"我的博客\" == hexo new \"我的博客\"  \nhexo g == hexo generate  \nhexo s == hexo server  \nhexo d == hexo deploy  \n \n6. 其他\nhexo help   # 查看帮助  \rhexo version  #查看Hexo的版本  \rhexo deploy -g  #生成加部署  \rhexo server -g  #生成加预览  ","slug":"hexo命令行","published":1,"updated":"2018-08-29T10:14:44.110Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zc000zxcnor06y2p4s","content":"<ol>\n<li><p>新建页面的hexo命令是：<br>hexo new page “pageName”  </p>\n</li>\n<li><p>新建博客文章<br>hexo new “文章名称”  #新建文章<br>hexo new post “文章名称”  #新建文章,双引号可以不用</p>\n</li>\n<li><p>发布博客<br>hexo clean  #清除缓存 网页正常情况下可以忽略此条命令<br>hexo generate  #生成静态页面至public目录</p>\n</li>\n<li><p>写好之后可以现在本地预览，确定无误之后再部署到Github上<br>hexo server  #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy  #将.deploy目录部署到GitHub  </p>\n</li>\n<li><p>hexo命令简写形式<br>hexo n “我的博客” == hexo new “我的博客”<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy  </p>\n</li>\n<li><p>其他<br>hexo help   # 查看帮助<br>hexo version  #查看Hexo的版本<br>hexo deploy -g  #生成加部署<br>hexo server -g  #生成加预览  </p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>新建页面的hexo命令是：<br>hexo new page “pageName”  </p>\n</li>\n<li><p>新建博客文章<br>hexo new “文章名称”  #新建文章<br>hexo new post “文章名称”  #新建文章,双引号可以不用</p>\n</li>\n<li><p>发布博客<br>hexo clean  #清除缓存 网页正常情况下可以忽略此条命令<br>hexo generate  #生成静态页面至public目录</p>\n</li>\n<li><p>写好之后可以现在本地预览，确定无误之后再部署到Github上<br>hexo server  #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy  #将.deploy目录部署到GitHub  </p>\n</li>\n<li><p>hexo命令简写形式<br>hexo n “我的博客” == hexo new “我的博客”<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy  </p>\n</li>\n<li><p>其他<br>hexo help   # 查看帮助<br>hexo version  #查看Hexo的版本<br>hexo deploy -g  #生成加部署<br>hexo server -g  #生成加预览  </p>\n</li>\n</ol>\n"},{"title":"javascript基础知识","date":"2017-07-27T12:58:03.000Z","_content":"\n1. 变量命名： \n   不能是保留字，首字符不能是数字，区分大小写，可以是下划线、美元符、字母开头。  \n   \n2. 数据类型：  \n\tjavascript数据类型：数值、布尔、字符串、对象、数组类型。\n\t\n\n\t","source":"_posts/javascript基础知识.md","raw":"---\ntitle: javascript基础知识\ndate: 2017-07-27 20:58:03\ntags: javascript\n---\n\n1. 变量命名： \n   不能是保留字，首字符不能是数字，区分大小写，可以是下划线、美元符、字母开头。  \n   \n2. 数据类型：  \n\tjavascript数据类型：数值、布尔、字符串、对象、数组类型。\n\t\n\n\t","slug":"javascript基础知识","published":1,"updated":"2018-08-29T10:14:44.110Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zd0011xcnosevh4t3y","content":"<ol>\n<li><p>变量命名：<br>不能是保留字，首字符不能是数字，区分大小写，可以是下划线、美元符、字母开头。  </p>\n</li>\n<li><p>数据类型：<br> javascript数据类型：数值、布尔、字符串、对象、数组类型。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>变量命名：<br>不能是保留字，首字符不能是数字，区分大小写，可以是下划线、美元符、字母开头。  </p>\n</li>\n<li><p>数据类型：<br> javascript数据类型：数值、布尔、字符串、对象、数组类型。</p>\n</li>\n</ol>\n"},{"title":"javascript几种输出方式区别","date":"2017-09-19T13:51:02.000Z","_content":"\n第一种： alert 将输出到浏览器的警示窗口  \n\n第二种： console.log 将把文本输出到调试工具的Console标签  \n\n第三种： document.write 直接输出到html页面里，并被浏览器呈现  \n\n\n以上三种方式，可以选择你喜欢的方式来调试","source":"_posts/javascript的几种输出方式.md","raw":"---\ntitle: javascript几种输出方式区别\ndate: 2017-09-19 21:51:02\ntags: javascript\n---\n\n第一种： alert 将输出到浏览器的警示窗口  \n\n第二种： console.log 将把文本输出到调试工具的Console标签  \n\n第三种： document.write 直接输出到html页面里，并被浏览器呈现  \n\n\n以上三种方式，可以选择你喜欢的方式来调试","slug":"javascript的几种输出方式","published":1,"updated":"2018-08-29T10:14:44.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519ze0014xcnornu7g4ee","content":"<p>第一种： alert 将输出到浏览器的警示窗口  </p>\n<p>第二种： console.log 将把文本输出到调试工具的Console标签  </p>\n<p>第三种： document.write 直接输出到html页面里，并被浏览器呈现  </p>\n<p>以上三种方式，可以选择你喜欢的方式来调试</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一种： alert 将输出到浏览器的警示窗口  </p>\n<p>第二种： console.log 将把文本输出到调试工具的Console标签  </p>\n<p>第三种： document.write 直接输出到html页面里，并被浏览器呈现  </p>\n<p>以上三种方式，可以选择你喜欢的方式来调试</p>\n"},{"title":"markdown使用","date":"2017-06-02T12:46:42.000Z","_content":"\n# 1. 标题  \n\\# 标题1  \n\\#\\# 标题2  \n\\#\\#\\#\\# 标题3   \n\n# 2. 引用   \n行首使用 \\> 加上一个空格表示引用一个段落，可嵌套  \n\\> 引用  \n\\> \\> 我再引用\n> 引用\n> > 我再引用  \n\n# 3. 分隔线  \n在一行连续使用三个或以上_或\\* \\:   \n\\-\\-\\-  \n\\*\\*\\*   \n\n>---\n***  \n\n# 4. 强调（粗体、斜体）:  \n\\*斜体\\*  \n\\*\\*粗体\\*\\*  \n\n>*斜体*   \n \n>**粗体**\n\n# 5. 阅读全文  \n在喜欢的位置添加阅读全文的功能，主题会自动识别这个标签：\n  \n以上是文章摘要  \n<\\!\\-\\-more\\-\\-\\>  \n以下是余下全文  \n\n# 6. 不能使用的字符\nhexo g编译不通过的字符：两对大括号，或者大括号中间包含百分号，每个符号之间留空格可以编译通过，不留空格编译不通过  \n例如：\\{ \\{ aaa \\} \\}  和 \\{ % bbb % \\}\n\n \n# 7. 转义字符要多加一个\\  \n\\\\\\\\ 反斜杠  \n\\\\\\` 反引号  \n\\\\\\* 星号  \n\\\\\\_ 下划线  \n\\\\\\{\\\\\\} 大括号  \n\\\\\\[\\\\\\] 中括号  \n\\\\\\(\\\\\\) 小括号  \n\\\\\\# 井号  \n\\\\\\+ 加号  \n\\\\\\- 减号  \n\\\\\\. 英文句号  \n\\\\\\! 感叹号  \n\n# 8. 列表\n## 无序列表  \n\\* 无序列表1  \n\\+ 无序列表2  \n\\- 无序列表3 \n\n>* 无序列表1  \n+ 无序列表2  \n- 无序列表3\n\n## 有序列表\n1.第一项  \n2.第二项  \n\n>1.第一项  \n2.第二项    \n\n# 9. 链接\nMarkdown有两种链接方式：Inline以及Reference  \n## 文字链接：\nInline:  \n\\[谷歌](https://www.google.com)   \nReference:  \n\\[谷歌]\\[google_url]  \n\\[google_url]:https://www.google.com  \n\n>Inline:  \n[谷歌](https://www.google.com)   \nReference:  \n[谷歌][google_url]  \n[google_url]:https://www.google.com  \n\n## 图像链接\n\\!\\[\\](http://www.google.rw/images/srpr/logo4w.png)  \n\\!\\[\\]\\[google_url\\]  \n\\[google_url\\]:http://www.google.rw/images/srpr/logo4w.png  \n\n![](http://www.google.rw/images/srpr/logo4w.png)\n![][google_url]\n[google_url]:http://www.google.rw/images/srpr/logo4w.png\n","source":"_posts/markdown使用.md","raw":"---\ntitle: markdown使用\ndate: 2017-06-02 20:46:42\ntags: 工具\n---\n\n# 1. 标题  \n\\# 标题1  \n\\#\\# 标题2  \n\\#\\#\\#\\# 标题3   \n\n# 2. 引用   \n行首使用 \\> 加上一个空格表示引用一个段落，可嵌套  \n\\> 引用  \n\\> \\> 我再引用\n> 引用\n> > 我再引用  \n\n# 3. 分隔线  \n在一行连续使用三个或以上_或\\* \\:   \n\\-\\-\\-  \n\\*\\*\\*   \n\n>---\n***  \n\n# 4. 强调（粗体、斜体）:  \n\\*斜体\\*  \n\\*\\*粗体\\*\\*  \n\n>*斜体*   \n \n>**粗体**\n\n# 5. 阅读全文  \n在喜欢的位置添加阅读全文的功能，主题会自动识别这个标签：\n  \n以上是文章摘要  \n<\\!\\-\\-more\\-\\-\\>  \n以下是余下全文  \n\n# 6. 不能使用的字符\nhexo g编译不通过的字符：两对大括号，或者大括号中间包含百分号，每个符号之间留空格可以编译通过，不留空格编译不通过  \n例如：\\{ \\{ aaa \\} \\}  和 \\{ % bbb % \\}\n\n \n# 7. 转义字符要多加一个\\  \n\\\\\\\\ 反斜杠  \n\\\\\\` 反引号  \n\\\\\\* 星号  \n\\\\\\_ 下划线  \n\\\\\\{\\\\\\} 大括号  \n\\\\\\[\\\\\\] 中括号  \n\\\\\\(\\\\\\) 小括号  \n\\\\\\# 井号  \n\\\\\\+ 加号  \n\\\\\\- 减号  \n\\\\\\. 英文句号  \n\\\\\\! 感叹号  \n\n# 8. 列表\n## 无序列表  \n\\* 无序列表1  \n\\+ 无序列表2  \n\\- 无序列表3 \n\n>* 无序列表1  \n+ 无序列表2  \n- 无序列表3\n\n## 有序列表\n1.第一项  \n2.第二项  \n\n>1.第一项  \n2.第二项    \n\n# 9. 链接\nMarkdown有两种链接方式：Inline以及Reference  \n## 文字链接：\nInline:  \n\\[谷歌](https://www.google.com)   \nReference:  \n\\[谷歌]\\[google_url]  \n\\[google_url]:https://www.google.com  \n\n>Inline:  \n[谷歌](https://www.google.com)   \nReference:  \n[谷歌][google_url]  \n[google_url]:https://www.google.com  \n\n## 图像链接\n\\!\\[\\](http://www.google.rw/images/srpr/logo4w.png)  \n\\!\\[\\]\\[google_url\\]  \n\\[google_url\\]:http://www.google.rw/images/srpr/logo4w.png  \n\n![](http://www.google.rw/images/srpr/logo4w.png)\n![][google_url]\n[google_url]:http://www.google.rw/images/srpr/logo4w.png\n","slug":"markdown使用","published":1,"updated":"2018-08-29T10:14:44.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zf0016xcnoiewufcqk","content":"<h1 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1. 标题\"></a>1. 标题</h1><p># 标题1<br>## 标题2<br>#### 标题3   </p>\n<h1 id=\"2-引用\"><a href=\"#2-引用\" class=\"headerlink\" title=\"2. 引用\"></a>2. 引用</h1><p>行首使用 > 加上一个空格表示引用一个段落，可嵌套<br>> 引用<br>> > 我再引用</p>\n<blockquote>\n<p>引用</p>\n<blockquote>\n<p>我再引用  </p>\n</blockquote>\n</blockquote>\n<h1 id=\"3-分隔线\"><a href=\"#3-分隔线\" class=\"headerlink\" title=\"3. 分隔线\"></a>3. 分隔线</h1><p>在一行连续使用三个或以上_或* \\:<br>---<br>***   </p>\n<blockquote>\n<hr>\n<hr>\n</blockquote>\n<h1 id=\"4-强调（粗体、斜体）\"><a href=\"#4-强调（粗体、斜体）\" class=\"headerlink\" title=\"4. 强调（粗体、斜体）:\"></a>4. 强调（粗体、斜体）:</h1><p>*斜体*<br>**粗体**  </p>\n<blockquote>\n<p><em>斜体</em>   </p>\n<p><strong>粗体</strong></p>\n</blockquote>\n<h1 id=\"5-阅读全文\"><a href=\"#5-阅读全文\" class=\"headerlink\" title=\"5. 阅读全文\"></a>5. 阅读全文</h1><p>在喜欢的位置添加阅读全文的功能，主题会自动识别这个标签：</p>\n<p>以上是文章摘要<br>&lt;!--more--><br>以下是余下全文  </p>\n<h1 id=\"6-不能使用的字符\"><a href=\"#6-不能使用的字符\" class=\"headerlink\" title=\"6. 不能使用的字符\"></a>6. 不能使用的字符</h1><p>hexo g编译不通过的字符：两对大括号，或者大括号中间包含百分号，每个符号之间留空格可以编译通过，不留空格编译不通过<br>例如：{ { aaa } }  和 { % bbb % }</p>\n<h1 id=\"7-转义字符要多加一个\"><a href=\"#7-转义字符要多加一个\" class=\"headerlink\" title=\"7. 转义字符要多加一个\\\"></a>7. 转义字符要多加一个\\</h1><p>\\\\ 反斜杠<br>\\` 反引号<br>\\* 星号<br>\\_ 下划线<br>\\{\\} 大括号<br>\\[\\] 中括号<br>\\(\\) 小括号<br>\\# 井号<br>\\+ 加号<br>\\- 减号<br>\\. 英文句号<br>\\! 感叹号  </p>\n<h1 id=\"8-列表\"><a href=\"#8-列表\" class=\"headerlink\" title=\"8. 列表\"></a>8. 列表</h1><h2 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h2><p>* 无序列表1<br>+ 无序列表2<br>- 无序列表3 </p>\n<blockquote>\n<ul>\n<li>无序列表1  </li>\n</ul>\n<ul>\n<li>无序列表2  </li>\n</ul>\n<ul>\n<li>无序列表3</li>\n</ul>\n</blockquote>\n<h2 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h2><p>1.第一项<br>2.第二项  </p>\n<blockquote>\n<p>1.第一项<br>2.第二项    </p>\n</blockquote>\n<h1 id=\"9-链接\"><a href=\"#9-链接\" class=\"headerlink\" title=\"9. 链接\"></a>9. 链接</h1><p>Markdown有两种链接方式：Inline以及Reference  </p>\n<h2 id=\"文字链接：\"><a href=\"#文字链接：\" class=\"headerlink\" title=\"文字链接：\"></a>文字链接：</h2><p>Inline:<br>[谷歌](<a href=\"https://www.google.com\" target=\"_blank\" rel=\"external\">https://www.google.com</a>)<br>Reference:<br>[谷歌][google_url]<br>[google_url]:<a href=\"https://www.google.com\" target=\"_blank\" rel=\"external\">https://www.google.com</a>  </p>\n<blockquote>\n<p>Inline:<br><a href=\"https://www.google.com\" target=\"_blank\" rel=\"external\">谷歌</a><br>Reference:<br><a href=\"http://www.google.rw/images/srpr/logo4w.png\" target=\"_blank\" rel=\"external\">谷歌</a>  </p>\n</blockquote>\n<h2 id=\"图像链接\"><a href=\"#图像链接\" class=\"headerlink\" title=\"图像链接\"></a>图像链接</h2><p>![](<a href=\"http://www.google.rw/images/srpr/logo4w.png\" target=\"_blank\" rel=\"external\">http://www.google.rw/images/srpr/logo4w.png</a>)<br>![][google_url]<br>[google_url]:<a href=\"http://www.google.rw/images/srpr/logo4w.png\" target=\"_blank\" rel=\"external\">http://www.google.rw/images/srpr/logo4w.png</a>  </p>\n<p><img src=\"http://www.google.rw/images/srpr/logo4w.png\" alt=\"\"><br><img src=\"http://www.google.rw/images/srpr/logo4w.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1. 标题\"></a>1. 标题</h1><p># 标题1<br>## 标题2<br>#### 标题3   </p>\n<h1 id=\"2-引用\"><a href=\"#2-引用\" class=\"headerlink\" title=\"2. 引用\"></a>2. 引用</h1><p>行首使用 > 加上一个空格表示引用一个段落，可嵌套<br>> 引用<br>> > 我再引用</p>\n<blockquote>\n<p>引用</p>\n<blockquote>\n<p>我再引用  </p>\n</blockquote>\n</blockquote>\n<h1 id=\"3-分隔线\"><a href=\"#3-分隔线\" class=\"headerlink\" title=\"3. 分隔线\"></a>3. 分隔线</h1><p>在一行连续使用三个或以上_或* \\:<br>---<br>***   </p>\n<blockquote>\n<hr>\n<hr>\n</blockquote>\n<h1 id=\"4-强调（粗体、斜体）\"><a href=\"#4-强调（粗体、斜体）\" class=\"headerlink\" title=\"4. 强调（粗体、斜体）:\"></a>4. 强调（粗体、斜体）:</h1><p>*斜体*<br>**粗体**  </p>\n<blockquote>\n<p><em>斜体</em>   </p>\n<p><strong>粗体</strong></p>\n</blockquote>\n<h1 id=\"5-阅读全文\"><a href=\"#5-阅读全文\" class=\"headerlink\" title=\"5. 阅读全文\"></a>5. 阅读全文</h1><p>在喜欢的位置添加阅读全文的功能，主题会自动识别这个标签：</p>\n<p>以上是文章摘要<br>&lt;!--more--><br>以下是余下全文  </p>\n<h1 id=\"6-不能使用的字符\"><a href=\"#6-不能使用的字符\" class=\"headerlink\" title=\"6. 不能使用的字符\"></a>6. 不能使用的字符</h1><p>hexo g编译不通过的字符：两对大括号，或者大括号中间包含百分号，每个符号之间留空格可以编译通过，不留空格编译不通过<br>例如：{ { aaa } }  和 { % bbb % }</p>\n<h1 id=\"7-转义字符要多加一个\"><a href=\"#7-转义字符要多加一个\" class=\"headerlink\" title=\"7. 转义字符要多加一个\\\"></a>7. 转义字符要多加一个\\</h1><p>\\\\ 反斜杠<br>\\` 反引号<br>\\* 星号<br>\\_ 下划线<br>\\{\\} 大括号<br>\\[\\] 中括号<br>\\(\\) 小括号<br>\\# 井号<br>\\+ 加号<br>\\- 减号<br>\\. 英文句号<br>\\! 感叹号  </p>\n<h1 id=\"8-列表\"><a href=\"#8-列表\" class=\"headerlink\" title=\"8. 列表\"></a>8. 列表</h1><h2 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h2><p>* 无序列表1<br>+ 无序列表2<br>- 无序列表3 </p>\n<blockquote>\n<ul>\n<li>无序列表1  </li>\n</ul>\n<ul>\n<li>无序列表2  </li>\n</ul>\n<ul>\n<li>无序列表3</li>\n</ul>\n</blockquote>\n<h2 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h2><p>1.第一项<br>2.第二项  </p>\n<blockquote>\n<p>1.第一项<br>2.第二项    </p>\n</blockquote>\n<h1 id=\"9-链接\"><a href=\"#9-链接\" class=\"headerlink\" title=\"9. 链接\"></a>9. 链接</h1><p>Markdown有两种链接方式：Inline以及Reference  </p>\n<h2 id=\"文字链接：\"><a href=\"#文字链接：\" class=\"headerlink\" title=\"文字链接：\"></a>文字链接：</h2><p>Inline:<br>[谷歌](<a href=\"https://www.google.com\" target=\"_blank\" rel=\"external\">https://www.google.com</a>)<br>Reference:<br>[谷歌][google_url]<br>[google_url]:<a href=\"https://www.google.com\" target=\"_blank\" rel=\"external\">https://www.google.com</a>  </p>\n<blockquote>\n<p>Inline:<br><a href=\"https://www.google.com\" target=\"_blank\" rel=\"external\">谷歌</a><br>Reference:<br><a href=\"http://www.google.rw/images/srpr/logo4w.png\" target=\"_blank\" rel=\"external\">谷歌</a>  </p>\n</blockquote>\n<h2 id=\"图像链接\"><a href=\"#图像链接\" class=\"headerlink\" title=\"图像链接\"></a>图像链接</h2><p>![](<a href=\"http://www.google.rw/images/srpr/logo4w.png\" target=\"_blank\" rel=\"external\">http://www.google.rw/images/srpr/logo4w.png</a>)<br>![][google_url]<br>[google_url]:<a href=\"http://www.google.rw/images/srpr/logo4w.png\" target=\"_blank\" rel=\"external\">http://www.google.rw/images/srpr/logo4w.png</a>  </p>\n<p><img src=\"http://www.google.rw/images/srpr/logo4w.png\" alt=\"\"><br><img src=\"http://www.google.rw/images/srpr/logo4w.png\" alt=\"\"></p>\n"},{"title":"javascript数组用法","date":"2017-09-21T12:13:00.000Z","_content":"1. 数组声明与初始化方式： \n\tvar studentList = [\"张三\",\"李四\",\"王五\"];  \n\tvar studentList = new Array(\"张三\",\"李四\",\"王五\");  \n\tvar studentList = new Array();    \n\tstudentList[0] = \"张三\";\n  \n2. <font color=\"red\">splice的使用</font>  \n\tsplice方法接收的第一个参数，表示想要删除或插入的元素的索引值，第二个参数是删除元素的个数。第三个往后就是要添加到数组里的值。\n\t\n3. 数组添加元素操作  \n\tpush把元素添加到数组的末尾（可以一次加多个）：   \n\tstudentList.push(\"小赵\",\"燕子\");  \n\t\n\tunshift把元素添加到数组的首位（可以一次加多个）：  \n\tstudentList.unshift(\"第一\",\"第二\");\n\t\n\t从索引5开始删除0个元素，添加张1、张2、张3三个元素：  \n\tstudentList.splice(5, 0, \"张1\", \"张2\", \"张3\");\n\t\n4. 数组删除元素操作  \n   pop删除数组最后一个元素  \n   shift删除数组第一个元素  \n   splice(index, num)删除相应位置和数量的元素  \n   studentList.splice(5,3); //删除从数组索引5开始的3个元素\n   \n5. 数组合并concat\n\tarray1.concat(array2);  \n\t","source":"_posts/javascript数组用法.md","raw":"---\ntitle: javascript数组用法\ndate: 2017-09-21 20:13:00\ntags:\n---\n1. 数组声明与初始化方式： \n\tvar studentList = [\"张三\",\"李四\",\"王五\"];  \n\tvar studentList = new Array(\"张三\",\"李四\",\"王五\");  \n\tvar studentList = new Array();    \n\tstudentList[0] = \"张三\";\n  \n2. <font color=\"red\">splice的使用</font>  \n\tsplice方法接收的第一个参数，表示想要删除或插入的元素的索引值，第二个参数是删除元素的个数。第三个往后就是要添加到数组里的值。\n\t\n3. 数组添加元素操作  \n\tpush把元素添加到数组的末尾（可以一次加多个）：   \n\tstudentList.push(\"小赵\",\"燕子\");  \n\t\n\tunshift把元素添加到数组的首位（可以一次加多个）：  \n\tstudentList.unshift(\"第一\",\"第二\");\n\t\n\t从索引5开始删除0个元素，添加张1、张2、张3三个元素：  \n\tstudentList.splice(5, 0, \"张1\", \"张2\", \"张3\");\n\t\n4. 数组删除元素操作  \n   pop删除数组最后一个元素  \n   shift删除数组第一个元素  \n   splice(index, num)删除相应位置和数量的元素  \n   studentList.splice(5,3); //删除从数组索引5开始的3个元素\n   \n5. 数组合并concat\n\tarray1.concat(array2);  \n\t","slug":"javascript数组用法","published":1,"updated":"2018-08-29T10:14:44.110Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zg0019xcno9zwcim1n","content":"<ol>\n<li><p>数组声明与初始化方式：<br> var studentList = [“张三”,”李四”,”王五”];<br> var studentList = new Array(“张三”,”李四”,”王五”);<br> var studentList = new Array();<br> studentList[0] = “张三”;</p>\n</li>\n<li><p><font color=\"red\">splice的使用</font><br> splice方法接收的第一个参数，表示想要删除或插入的元素的索引值，第二个参数是删除元素的个数。第三个往后就是要添加到数组里的值。</p>\n</li>\n<li><p>数组添加元素操作<br> push把元素添加到数组的末尾（可以一次加多个）：<br> studentList.push(“小赵”,”燕子”);  </p>\n<p> unshift把元素添加到数组的首位（可以一次加多个）：<br> studentList.unshift(“第一”,”第二”);</p>\n<p> 从索引5开始删除0个元素，添加张1、张2、张3三个元素：<br> studentList.splice(5, 0, “张1”, “张2”, “张3”);</p>\n</li>\n<li><p>数组删除元素操作<br>pop删除数组最后一个元素<br>shift删除数组第一个元素<br>splice(index, num)删除相应位置和数量的元素<br>studentList.splice(5,3); //删除从数组索引5开始的3个元素</p>\n</li>\n<li><p>数组合并concat<br> array1.concat(array2);  </p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>数组声明与初始化方式：<br> var studentList = [“张三”,”李四”,”王五”];<br> var studentList = new Array(“张三”,”李四”,”王五”);<br> var studentList = new Array();<br> studentList[0] = “张三”;</p>\n</li>\n<li><p><font color=\"red\">splice的使用</font><br> splice方法接收的第一个参数，表示想要删除或插入的元素的索引值，第二个参数是删除元素的个数。第三个往后就是要添加到数组里的值。</p>\n</li>\n<li><p>数组添加元素操作<br> push把元素添加到数组的末尾（可以一次加多个）：<br> studentList.push(“小赵”,”燕子”);  </p>\n<p> unshift把元素添加到数组的首位（可以一次加多个）：<br> studentList.unshift(“第一”,”第二”);</p>\n<p> 从索引5开始删除0个元素，添加张1、张2、张3三个元素：<br> studentList.splice(5, 0, “张1”, “张2”, “张3”);</p>\n</li>\n<li><p>数组删除元素操作<br>pop删除数组最后一个元素<br>shift删除数组第一个元素<br>splice(index, num)删除相应位置和数量的元素<br>studentList.splice(5,3); //删除从数组索引5开始的3个元素</p>\n</li>\n<li><p>数组合并concat<br> array1.concat(array2);  </p>\n</li>\n</ol>\n"},{"title":"mysql命令行","date":"2017-09-13T01:48:38.000Z","_content":"\n1. 重启服务器上的mysql  \nsudo su -  \nservice mysqld restart\n\n2. 在当前服务器下连接数据库  \nmysql -uUser -pPassword  \n\n3. 查看当前服务器下的数据库  \nshow databases;  \n\n4. 进入数据库  \nuse database1;  \n\n5. 查看当前数据库的表  \nshow tables;  \n\n6. 如果存在某表，删除  \nDROP TABLE IF EXISTS table1;  ","source":"_posts/mysql命令行.md","raw":"---\ntitle: mysql命令行\ndate: 2017-09-13 09:48:38\ntags: 命令行\n---\n\n1. 重启服务器上的mysql  \nsudo su -  \nservice mysqld restart\n\n2. 在当前服务器下连接数据库  \nmysql -uUser -pPassword  \n\n3. 查看当前服务器下的数据库  \nshow databases;  \n\n4. 进入数据库  \nuse database1;  \n\n5. 查看当前数据库的表  \nshow tables;  \n\n6. 如果存在某表，删除  \nDROP TABLE IF EXISTS table1;  ","slug":"mysql命令行","published":1,"updated":"2018-08-29T10:14:44.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zh001bxcnoz6tfby5m","content":"<ol>\n<li><p>重启服务器上的mysql<br>sudo su -<br>service mysqld restart</p>\n</li>\n<li><p>在当前服务器下连接数据库<br>mysql -uUser -pPassword  </p>\n</li>\n<li><p>查看当前服务器下的数据库<br>show databases;  </p>\n</li>\n<li><p>进入数据库<br>use database1;  </p>\n</li>\n<li><p>查看当前数据库的表<br>show tables;  </p>\n</li>\n<li><p>如果存在某表，删除<br>DROP TABLE IF EXISTS table1;  </p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>重启服务器上的mysql<br>sudo su -<br>service mysqld restart</p>\n</li>\n<li><p>在当前服务器下连接数据库<br>mysql -uUser -pPassword  </p>\n</li>\n<li><p>查看当前服务器下的数据库<br>show databases;  </p>\n</li>\n<li><p>进入数据库<br>use database1;  </p>\n</li>\n<li><p>查看当前数据库的表<br>show tables;  </p>\n</li>\n<li><p>如果存在某表，删除<br>DROP TABLE IF EXISTS table1;  </p>\n</li>\n</ol>\n"},{"title":"mysql密码过期","date":"2017-12-11T03:28:15.000Z","_content":"\n# mysql5.7密码过期问题\n\n### 报错：  \nERROR 1862 (HY000): Your password has expired. To log in you must change it using a client that supports expired passwords.  \n翻译：  \n错误1862(HY000):你的密码已经过期。登录必须改变它使用一个客户端,支持过期的密码。  \n\n### 错误解决：  \n进入mysql的服务器中使用mysql指令进行登录及操作。\n\n1.登录mysql：mysql -uroot -proot\n\n(root是我的帐号及密码）\n\n2.尝试是否报1820错误，执行语句：mysql> select 1;\n\n(将会得到一个错误：ERROR 1820 (HY000): You must SET PASSWORD before executing this statement)\n\n3.设置新密码：mysql> set password=password(‘root');\n\n(由于我不需要更改密码，所以再次重置一下密码为root)\n\n4.重设密码的时候可能会出现以下错误：（不出现的话，忽略此步）    \nERROR 1819 (HY000): Your password does not satisfy the current policy requirements  \n出现这个错误的话，需要修改一个全局参数：   \nmysql> set global validate_password_policy=0;  \nQuery OK, 0 rows affected (0.00 sec)\n\n改完再重新操作第3步    \n\n5.最后给用户赋权限  \nmysql>  GRANT ALL PRIVILEGES ON \\*.* TO 'username'@'%' IDENTIFIED BY 'password' WITH GRANT OPTION;  \nQuery OK, 0 rows affected, 1 warning (0.00 sec)  \n\nmysql> FLUSH PRIVILEGES;  \nQuery OK, 0 rows affected (0.00 sec)  \n\n6.尝试登录，正常\n\n","source":"_posts/mysql密码过期.md","raw":"---\ntitle: mysql密码过期\ndate: 2017-12-11 11:28:15\ntags: 命令行\n---\n\n# mysql5.7密码过期问题\n\n### 报错：  \nERROR 1862 (HY000): Your password has expired. To log in you must change it using a client that supports expired passwords.  \n翻译：  \n错误1862(HY000):你的密码已经过期。登录必须改变它使用一个客户端,支持过期的密码。  \n\n### 错误解决：  \n进入mysql的服务器中使用mysql指令进行登录及操作。\n\n1.登录mysql：mysql -uroot -proot\n\n(root是我的帐号及密码）\n\n2.尝试是否报1820错误，执行语句：mysql> select 1;\n\n(将会得到一个错误：ERROR 1820 (HY000): You must SET PASSWORD before executing this statement)\n\n3.设置新密码：mysql> set password=password(‘root');\n\n(由于我不需要更改密码，所以再次重置一下密码为root)\n\n4.重设密码的时候可能会出现以下错误：（不出现的话，忽略此步）    \nERROR 1819 (HY000): Your password does not satisfy the current policy requirements  \n出现这个错误的话，需要修改一个全局参数：   \nmysql> set global validate_password_policy=0;  \nQuery OK, 0 rows affected (0.00 sec)\n\n改完再重新操作第3步    \n\n5.最后给用户赋权限  \nmysql>  GRANT ALL PRIVILEGES ON \\*.* TO 'username'@'%' IDENTIFIED BY 'password' WITH GRANT OPTION;  \nQuery OK, 0 rows affected, 1 warning (0.00 sec)  \n\nmysql> FLUSH PRIVILEGES;  \nQuery OK, 0 rows affected (0.00 sec)  \n\n6.尝试登录，正常\n\n","slug":"mysql密码过期","published":1,"updated":"2018-08-29T10:14:44.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zj001excnopyyx51yy","content":"<h1 id=\"mysql5-7密码过期问题\"><a href=\"#mysql5-7密码过期问题\" class=\"headerlink\" title=\"mysql5.7密码过期问题\"></a>mysql5.7密码过期问题</h1><h3 id=\"报错：\"><a href=\"#报错：\" class=\"headerlink\" title=\"报错：\"></a>报错：</h3><p>ERROR 1862 (HY000): Your password has expired. To log in you must change it using a client that supports expired passwords.<br>翻译：<br>错误1862(HY000):你的密码已经过期。登录必须改变它使用一个客户端,支持过期的密码。  </p>\n<h3 id=\"错误解决：\"><a href=\"#错误解决：\" class=\"headerlink\" title=\"错误解决：\"></a>错误解决：</h3><p>进入mysql的服务器中使用mysql指令进行登录及操作。</p>\n<p>1.登录mysql：mysql -uroot -proot</p>\n<p>(root是我的帐号及密码）</p>\n<p>2.尝试是否报1820错误，执行语句：mysql&gt; select 1;</p>\n<p>(将会得到一个错误：ERROR 1820 (HY000): You must SET PASSWORD before executing this statement)</p>\n<p>3.设置新密码：mysql&gt; set password=password(‘root’);</p>\n<p>(由于我不需要更改密码，所以再次重置一下密码为root)</p>\n<p>4.重设密码的时候可能会出现以下错误：（不出现的话，忽略此步）<br>ERROR 1819 (HY000): Your password does not satisfy the current policy requirements<br>出现这个错误的话，需要修改一个全局参数：<br>mysql&gt; set global validate_password_policy=0;<br>Query OK, 0 rows affected (0.00 sec)</p>\n<p>改完再重新操作第3步    </p>\n<p>5.最后给用户赋权限<br>mysql&gt;  GRANT ALL PRIVILEGES ON *.* TO ‘username’@’%’ IDENTIFIED BY ‘password’ WITH GRANT OPTION;<br>Query OK, 0 rows affected, 1 warning (0.00 sec)  </p>\n<p>mysql&gt; FLUSH PRIVILEGES;<br>Query OK, 0 rows affected (0.00 sec)  </p>\n<p>6.尝试登录，正常</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mysql5-7密码过期问题\"><a href=\"#mysql5-7密码过期问题\" class=\"headerlink\" title=\"mysql5.7密码过期问题\"></a>mysql5.7密码过期问题</h1><h3 id=\"报错：\"><a href=\"#报错：\" class=\"headerlink\" title=\"报错：\"></a>报错：</h3><p>ERROR 1862 (HY000): Your password has expired. To log in you must change it using a client that supports expired passwords.<br>翻译：<br>错误1862(HY000):你的密码已经过期。登录必须改变它使用一个客户端,支持过期的密码。  </p>\n<h3 id=\"错误解决：\"><a href=\"#错误解决：\" class=\"headerlink\" title=\"错误解决：\"></a>错误解决：</h3><p>进入mysql的服务器中使用mysql指令进行登录及操作。</p>\n<p>1.登录mysql：mysql -uroot -proot</p>\n<p>(root是我的帐号及密码）</p>\n<p>2.尝试是否报1820错误，执行语句：mysql&gt; select 1;</p>\n<p>(将会得到一个错误：ERROR 1820 (HY000): You must SET PASSWORD before executing this statement)</p>\n<p>3.设置新密码：mysql&gt; set password=password(‘root’);</p>\n<p>(由于我不需要更改密码，所以再次重置一下密码为root)</p>\n<p>4.重设密码的时候可能会出现以下错误：（不出现的话，忽略此步）<br>ERROR 1819 (HY000): Your password does not satisfy the current policy requirements<br>出现这个错误的话，需要修改一个全局参数：<br>mysql&gt; set global validate_password_policy=0;<br>Query OK, 0 rows affected (0.00 sec)</p>\n<p>改完再重新操作第3步    </p>\n<p>5.最后给用户赋权限<br>mysql&gt;  GRANT ALL PRIVILEGES ON *.* TO ‘username’@’%’ IDENTIFIED BY ‘password’ WITH GRANT OPTION;<br>Query OK, 0 rows affected, 1 warning (0.00 sec)  </p>\n<p>mysql&gt; FLUSH PRIVILEGES;<br>Query OK, 0 rows affected (0.00 sec)  </p>\n<p>6.尝试登录，正常</p>\n"},{"title":"python之os模块","date":"2017-12-07T03:40:37.000Z","_content":"\npython os模块提供了多数操作系统的功能接口函数，对文件和路径进行的操作都要依赖于os模块。\n\n常见的用法：\n\n1. 查看当前所在路径  \n >  ~  python  \n  Python 2.7.10 (default, Feb  7 2017, 00:08:15)  \n  \\>>> import os  \n  \\>>> os.getcwd()    \n  '/Users/tuyoo'  \n  \n >  \\>>> os.path.abspath('.')  \n '/Users/tuyoo'\n \n2. 列举路径下的所有文件  \n  os.listdir(path)\n  \n3. os.path.split(path):将路径分解为(文件夹,文件名)，返回的是元组类型。\n\n4. os.path.join(path1,path2,...):将path进行组合，若其中有绝对路径，则之前的path将被删除。\n\n5. os.path.dirname(path):返回path中的文件夹部分，结果不包含'\\'\n\n6. os.path.basename(path):返回path中的文件名。\n\n7. 查看文件时间  \n  os.path.getmtime(path):文件或文件夹的最后修改时间，从新纪元到访问时的秒数。  \n os.path.getatime(path):文件或文件夹的最后访问时间，从新纪元到访问时的秒数。  \n os.path.getctime(path):文件或文件夹的创建时间，从新纪元到访问时的秒数。\n\n8. os.path.getsize(path):查看文件或文件夹的大小，若是文件夹返回0。\n\n\n参考地址：  \nhttps://www.cnblogs.com/emily-qin/p/7001152.html  \nhttps://www.cnblogs.com/yufeihlf/p/6179547.html","source":"_posts/python之os模块.md","raw":"---\ntitle: python之os模块\ndate: 2017-12-07 11:40:37\ntags: python\n---\n\npython os模块提供了多数操作系统的功能接口函数，对文件和路径进行的操作都要依赖于os模块。\n\n常见的用法：\n\n1. 查看当前所在路径  \n >  ~  python  \n  Python 2.7.10 (default, Feb  7 2017, 00:08:15)  \n  \\>>> import os  \n  \\>>> os.getcwd()    \n  '/Users/tuyoo'  \n  \n >  \\>>> os.path.abspath('.')  \n '/Users/tuyoo'\n \n2. 列举路径下的所有文件  \n  os.listdir(path)\n  \n3. os.path.split(path):将路径分解为(文件夹,文件名)，返回的是元组类型。\n\n4. os.path.join(path1,path2,...):将path进行组合，若其中有绝对路径，则之前的path将被删除。\n\n5. os.path.dirname(path):返回path中的文件夹部分，结果不包含'\\'\n\n6. os.path.basename(path):返回path中的文件名。\n\n7. 查看文件时间  \n  os.path.getmtime(path):文件或文件夹的最后修改时间，从新纪元到访问时的秒数。  \n os.path.getatime(path):文件或文件夹的最后访问时间，从新纪元到访问时的秒数。  \n os.path.getctime(path):文件或文件夹的创建时间，从新纪元到访问时的秒数。\n\n8. os.path.getsize(path):查看文件或文件夹的大小，若是文件夹返回0。\n\n\n参考地址：  \nhttps://www.cnblogs.com/emily-qin/p/7001152.html  \nhttps://www.cnblogs.com/yufeihlf/p/6179547.html","slug":"python之os模块","published":1,"updated":"2018-08-29T10:14:44.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zk001gxcnodjxq4489","content":"<p>python os模块提供了多数操作系统的功能接口函数，对文件和路径进行的操作都要依赖于os模块。</p>\n<p>常见的用法：</p>\n<ol>\n<li><p>查看当前所在路径  </p>\n<blockquote>\n<p> ~  python<br>Python 2.7.10 (default, Feb  7 2017, 00:08:15)<br>>&gt;&gt; import os<br>>&gt;&gt; os.getcwd()<br>‘/Users/tuyoo’  </p>\n<p> >&gt;&gt; os.path.abspath(‘.’)<br>‘/Users/tuyoo’</p>\n</blockquote>\n</li>\n<li><p>列举路径下的所有文件<br>os.listdir(path)</p>\n</li>\n<li><p>os.path.split(path):将路径分解为(文件夹,文件名)，返回的是元组类型。</p>\n</li>\n<li><p>os.path.join(path1,path2,…):将path进行组合，若其中有绝对路径，则之前的path将被删除。</p>\n</li>\n<li><p>os.path.dirname(path):返回path中的文件夹部分，结果不包含’\\’</p>\n</li>\n<li><p>os.path.basename(path):返回path中的文件名。</p>\n</li>\n<li><p>查看文件时间<br>os.path.getmtime(path):文件或文件夹的最后修改时间，从新纪元到访问时的秒数。<br>os.path.getatime(path):文件或文件夹的最后访问时间，从新纪元到访问时的秒数。<br>os.path.getctime(path):文件或文件夹的创建时间，从新纪元到访问时的秒数。</p>\n</li>\n<li><p>os.path.getsize(path):查看文件或文件夹的大小，若是文件夹返回0。</p>\n</li>\n</ol>\n<p>参考地址：<br><a href=\"https://www.cnblogs.com/emily-qin/p/7001152.html\" target=\"_blank\" rel=\"external\">https://www.cnblogs.com/emily-qin/p/7001152.html</a><br><a href=\"https://www.cnblogs.com/yufeihlf/p/6179547.html\" target=\"_blank\" rel=\"external\">https://www.cnblogs.com/yufeihlf/p/6179547.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>python os模块提供了多数操作系统的功能接口函数，对文件和路径进行的操作都要依赖于os模块。</p>\n<p>常见的用法：</p>\n<ol>\n<li><p>查看当前所在路径  </p>\n<blockquote>\n<p> ~  python<br>Python 2.7.10 (default, Feb  7 2017, 00:08:15)<br>>&gt;&gt; import os<br>>&gt;&gt; os.getcwd()<br>‘/Users/tuyoo’  </p>\n<p> >&gt;&gt; os.path.abspath(‘.’)<br>‘/Users/tuyoo’</p>\n</blockquote>\n</li>\n<li><p>列举路径下的所有文件<br>os.listdir(path)</p>\n</li>\n<li><p>os.path.split(path):将路径分解为(文件夹,文件名)，返回的是元组类型。</p>\n</li>\n<li><p>os.path.join(path1,path2,…):将path进行组合，若其中有绝对路径，则之前的path将被删除。</p>\n</li>\n<li><p>os.path.dirname(path):返回path中的文件夹部分，结果不包含’\\’</p>\n</li>\n<li><p>os.path.basename(path):返回path中的文件名。</p>\n</li>\n<li><p>查看文件时间<br>os.path.getmtime(path):文件或文件夹的最后修改时间，从新纪元到访问时的秒数。<br>os.path.getatime(path):文件或文件夹的最后访问时间，从新纪元到访问时的秒数。<br>os.path.getctime(path):文件或文件夹的创建时间，从新纪元到访问时的秒数。</p>\n</li>\n<li><p>os.path.getsize(path):查看文件或文件夹的大小，若是文件夹返回0。</p>\n</li>\n</ol>\n<p>参考地址：<br><a href=\"https://www.cnblogs.com/emily-qin/p/7001152.html\" target=\"_blank\" rel=\"external\">https://www.cnblogs.com/emily-qin/p/7001152.html</a><br><a href=\"https://www.cnblogs.com/yufeihlf/p/6179547.html\" target=\"_blank\" rel=\"external\">https://www.cnblogs.com/yufeihlf/p/6179547.html</a></p>\n"},{"title":"struts-config.xml配置文件","date":"2018-03-02T02:01:54.000Z","_content":"\n< struts-config >是struts的根元素，它主要有8个子元素，DTD定义如下：\n\n< !ELEMENT struts-config  \n(data-sources?,form-beans?,global-exceptions?,global-forwards?,action-mappings?,controller?,message-resources\\*,plug-in\\*)  \n\\>  \n\n以上8个元素，下面一一描述：  \n1. date-sources元素  \n　　date-sources元素用来配置应用程序所需要的数据源。java语言提供了javax.sql.DateSource接口，所有数据源必须实现该接口。如下配置：\n>  \n< data-sources>  \n　　< data-source type=\"org.apached.commons.dbcp.BasicDataSource\"\\>  \n　　　　………………  \n　　< /data-source>  \n< /data-sources>  \n\n在Action中访问方式如下：\n>>\njavax.sql.DataSource dataSource;  \njava.sql.Connection myConnection;  \ntry  \n{  \n　　dataSource = getDataSource(request);  \n　　myConnection　＝　dataSource.getConnection();  \n}  \n…………  \n\n如果是多数据源，可用如下配置：\n>>\n< data-sources>  \n　　< data-source key=\"a\"  type=\"org.apached.commons.dbcp.BasicDataSource\">  \n　　　　………………  \n　　< /data-source>  \n　　< data-source key=\"b\"   type=\"org.apached.commons.dbcp.BasicDataSource\">  \n　　　　………………   \n　　< /data-source>  \n< /data-sources>\n\n访问方式：dataSource = getDataSource(request,\"a\");\n\n2.form-beans元素  \n　　该元素主要用来配置表单验证的类。它包含如下属性：  \n　　1.classname：一般用得少，指定和form-bean无素对应的配置类，默认为org.apache.struts.config.FormBeanConfig，如果自定义，则必须扩展FormBeanConfig类。可有可无。  \n　　2.name：ActionForm Bean的惟一标识。必须。  \n　　3.type：ActionForm的完整类名。必须。  \n如下所示：  \n\n>>\n< form-beans>  \n　　< form-bean name=\"Loign\" type=\"com.ha.login\"></form-bean>  \n< /form-beans>\n\n如果是动态Action FormBean，还必须配置form-bean元素的form-property子元素。它包含四个属性，上面三个，还有一个initial 元素：以字符串的形式设置表单字段的初始值，如果没有设置该属性，则是基本类型为0，如果是对象则为null。可有可无。如下所示：  \n\n>>\n< form-beans>  \n　　< form-bean   \n　　　　　　name=\"Loign\"  \n　　　　　　type=\"com.ha.login\">  \n　　　　　< form-property name=\"ok\"  type=\"java.lang.String\"/>  \n　　　　　< form-property name=\"oks\"  type=\"java.lang.String\"/>  \n　　　　　< form-property name=\"okss\"  type=\"java.lang.Integer\" initial=\"20\"/>  \n　　< /form-bean>  \n< /form-beans>\n\n3.global-exceptions元素  \n　　该元素主要配置异常处理，它的exception子元素代表全局的异常配置。struts采取配置的方式来处理异常。它用来设置java异常和异常处理类org.apache.struts.action.ExceptionHandler之间的映射。它有七个属性，如下所示：  \n　　1. className：指定和exception元素对应的配置类，默认为：org.apache.struts.config.ExceptionConfig。可有可无。  \n　　2. Handler：指定异常得理类，默认为：org.apache.struts.action.ExceptionHandler。可有可无  \n　　3. key：指定在Resource Bundle中描述该异常的消息key  \n　　4. path：指定当异常发生时的转发路径。  \n　　5. scope：指定ActionMessages实例的存放范围，可选值包括：request和session，默认为request。可有可无。  \n　　6. type：指定所需处理异常类的名字，必须。  \n　　7. bundle：指定Resource Bundle  \n如下所示：  \n\n>>\n< global-exceptions>  \n　　< exception key=\"global.error.invalidlogin\" path=\"/error.jsp\" scope=\"request\" type=\"com.hn.tree\"/>  \n< /global-exceptions>\n\n4.global-forwards元素  \n　　该元素主要用来声明全局的转发关系，它具有以下四个属性：  \n　　1. className：和forward元素对应的配置类，默认为：org.apache.struts.action.ActionForward。可有可无。  \n　　2. contextRelative：此项为true时，表时path属性以＂/＂开头，相对于当前上下文的URL，默认为false．可有可无。　  \n　　3. name：转发路径的逻辑名．必填。  \n　　4. path：转发或重定向的URL，当contextRelative=false时，URL路径相对于当前应用（application），当为ture时，表示URL路径相对于当前上下文（context）。  \n　　5.  redirect：当此项为ture时，表示执行重定向操作。当此项为false时表示转向操作。默认为false。  \n如下所示：  \n>>\n< global-forwards>  \n　　< forward  name=\"forms1\"  path=\"/a.do\"/>  \n　　< forward  name=\"forms2\"  path=\"/nb.jsp\"/>  \n< global-forwards>\n\n5.action-mappings元素  \n　　描述从特定的请求路径到相应的Action类的映射。它具有以下几个属性：  \n　　1. attribute：设置和Action关联的ActionForm Bean在request和session范围内的key。如：Form Bean存在于request范围内，此项设为“myBenas”，则在request.getAttribute(\"myBenas\")就可以返回该Bean的实例。  \n　　2. classsName：和action元素对应的配置元素，默认为：org.apache.struts.action.ActionMapping.  \n　　3. forward：转发的URL路径。  \n　　4. include：指定包含的URL路径。  \n　　5. input：输入表单的URL路径，当表单验证失败时，将把请求转发到该URL。  \n　　6. name：指定和Action关联的Action FormBean的名字，该名字必须在Form-Bean定义过。  \n　　7. path：指定访问Action的路径，以“/”开头，无扩展名。   \n　　8. parameter：指定Actgion的配置参数，在Action类的execute()方法中，可以调用ActionMapping对象的getParameter()方法来读取该配置参数。  \n　　9. roles：指定允许调用该Action的安全角色，多个角色之间用，隔开，在处理请求时，RequestProcessor会根据该配置项来决定用户是否有权限调用Action权限。  \n　　10. scope：指定ActionForm Bean的存在范围，可选取为request和session，默认为session。\n　　11. type：指定Action类的完整类名。  \n　　12. unknown：如果此项为true，表示可以处理用户发出的所有无效的Action URL，默认为false；  \n　　13. validate：指定是否要调用Action FormBean的validate方法，默认值为ture.  \n注：forward、include、type属性只能选中其中一项。  \n如下：  \n>>\n< action path=\"/search\"  \n　　　　type=\"zxj.okBean\"  \n　　　　name=\"a1\"  \n　　　　scope=\"request\"  \n　　　　validate=\"true\"  \n　　　　input=\"/b.jsp\">  \n　　< forward name=\"tig\" path=\"/aa.jsp\"/>  \n< /action>\n\n注：此中的forward是指局部的转发路径。global-forwards表示全局的转发路径。\n\n6.controller元素  \n　　该元素用于配置ActionServlet。它具有以下属性。  \n　　1. bufferSize：指定上载文件的输入缓冲大小，可选，默认为4096  \n　　2. className：指定和controller元素对应的配置类，默认为org.apache.struts.config.ControllerConfig  \n　　3. conentType：字符编码，如果在Action和JSP网页中设置了，则覆盖该设置。  \n　　4. locale：指定是否把Locale对象保存到当前用户的session中，默认值为false.  \n　　5. processorClass：指定负责请求的java类完整路径。  \n　　6. tempDir：指定处理文件的临时工作目录，如果此项没有设置，将采用Servlet容器为web应用分配的临时工作目录。  \n　　7. nochache：如果为true：在响应结果中将加入特定的头参数：Pragma,Cache-Control和Expise，防止页面被保存在客户端的浏览器中，默认为false  \n如下：  \n\n>>\n< controller  \n　　contentType=\"text/html;charset=\"UTF-8\"\"  \n　　locale=\"true\"  \n　　processorClass=\"con.ok\"/>\n\n7.message-resources元素  \n　　主要配置本地化消息文本，它具有以下属性。  \n　　1. className：和message-resources元素对应的配置类，默认为org.apache.struts.config.MessageResourcesConfig。  \n　　2. factory：指定消息资源的工厂类，默认为：org.apache.struts.util.PropertyMessageResourcesFactory类  \n　　3. key：指定Resource Bundle存放的ServletContext对象中时采用的属性Key，默认由Globals.MESSAGES_KEY定义的字符串常量，只允许一个Resource Bundle采用默认的属性Key。  \n　　4. null：指定MessageSources类如何处理未知消息的key，如果为true，则返回空字符串，如果为false，则返回相关字串，默认为false  \n　　5. prameter：指定MessageSources的资源文件名，如果为：a.b.ApplicationResources，则实际对应的文件路径为：WEB-INF/classes/a/b/ApplicationResources.properties.  \n如：  \n>>\n< message-resources null=\"false\" parameter=\"defaultResource\"/>  \n< message-resources key=\"num1\" null=\"false\" parameter=\"test\"/>  \n\n访问为：\n>>\n< bean:message  key=\"zxj\"/>  \n< bean:message  key=\"zxj\"  bundle=\"num1\"/>  \n\n其中，zxj表法，messagesource资源文件中的一个字符串。\n\n8.plugin-in元素  \n　　配置Struts的插件，属性如下：  \n　　1. className：指定的Struts插件类，必须实现org.apache.struts.action.PlugiIn接口。如：  　\n>>\n　< plug-in className=\"a.b.c.\">    \n　　< set-property property=\"xxx\" value=\"/WEB-INF/aa.xml\"  />    \n  < /plug-in>  \n  \n后记，多模块的配置，可以供多个应用应用不同的struts-config.xml\n\n文件参考：http://blog.csdn.net/huozhicheng/article/details/5426356","source":"_posts/struts-config配置文件.md","raw":"---\ntitle: struts-config.xml配置文件\ndate: 2018-03-02 10:01:54\ntags: [框架]\n---\n\n< struts-config >是struts的根元素，它主要有8个子元素，DTD定义如下：\n\n< !ELEMENT struts-config  \n(data-sources?,form-beans?,global-exceptions?,global-forwards?,action-mappings?,controller?,message-resources\\*,plug-in\\*)  \n\\>  \n\n以上8个元素，下面一一描述：  \n1. date-sources元素  \n　　date-sources元素用来配置应用程序所需要的数据源。java语言提供了javax.sql.DateSource接口，所有数据源必须实现该接口。如下配置：\n>  \n< data-sources>  \n　　< data-source type=\"org.apached.commons.dbcp.BasicDataSource\"\\>  \n　　　　………………  \n　　< /data-source>  \n< /data-sources>  \n\n在Action中访问方式如下：\n>>\njavax.sql.DataSource dataSource;  \njava.sql.Connection myConnection;  \ntry  \n{  \n　　dataSource = getDataSource(request);  \n　　myConnection　＝　dataSource.getConnection();  \n}  \n…………  \n\n如果是多数据源，可用如下配置：\n>>\n< data-sources>  \n　　< data-source key=\"a\"  type=\"org.apached.commons.dbcp.BasicDataSource\">  \n　　　　………………  \n　　< /data-source>  \n　　< data-source key=\"b\"   type=\"org.apached.commons.dbcp.BasicDataSource\">  \n　　　　………………   \n　　< /data-source>  \n< /data-sources>\n\n访问方式：dataSource = getDataSource(request,\"a\");\n\n2.form-beans元素  \n　　该元素主要用来配置表单验证的类。它包含如下属性：  \n　　1.classname：一般用得少，指定和form-bean无素对应的配置类，默认为org.apache.struts.config.FormBeanConfig，如果自定义，则必须扩展FormBeanConfig类。可有可无。  \n　　2.name：ActionForm Bean的惟一标识。必须。  \n　　3.type：ActionForm的完整类名。必须。  \n如下所示：  \n\n>>\n< form-beans>  \n　　< form-bean name=\"Loign\" type=\"com.ha.login\"></form-bean>  \n< /form-beans>\n\n如果是动态Action FormBean，还必须配置form-bean元素的form-property子元素。它包含四个属性，上面三个，还有一个initial 元素：以字符串的形式设置表单字段的初始值，如果没有设置该属性，则是基本类型为0，如果是对象则为null。可有可无。如下所示：  \n\n>>\n< form-beans>  \n　　< form-bean   \n　　　　　　name=\"Loign\"  \n　　　　　　type=\"com.ha.login\">  \n　　　　　< form-property name=\"ok\"  type=\"java.lang.String\"/>  \n　　　　　< form-property name=\"oks\"  type=\"java.lang.String\"/>  \n　　　　　< form-property name=\"okss\"  type=\"java.lang.Integer\" initial=\"20\"/>  \n　　< /form-bean>  \n< /form-beans>\n\n3.global-exceptions元素  \n　　该元素主要配置异常处理，它的exception子元素代表全局的异常配置。struts采取配置的方式来处理异常。它用来设置java异常和异常处理类org.apache.struts.action.ExceptionHandler之间的映射。它有七个属性，如下所示：  \n　　1. className：指定和exception元素对应的配置类，默认为：org.apache.struts.config.ExceptionConfig。可有可无。  \n　　2. Handler：指定异常得理类，默认为：org.apache.struts.action.ExceptionHandler。可有可无  \n　　3. key：指定在Resource Bundle中描述该异常的消息key  \n　　4. path：指定当异常发生时的转发路径。  \n　　5. scope：指定ActionMessages实例的存放范围，可选值包括：request和session，默认为request。可有可无。  \n　　6. type：指定所需处理异常类的名字，必须。  \n　　7. bundle：指定Resource Bundle  \n如下所示：  \n\n>>\n< global-exceptions>  \n　　< exception key=\"global.error.invalidlogin\" path=\"/error.jsp\" scope=\"request\" type=\"com.hn.tree\"/>  \n< /global-exceptions>\n\n4.global-forwards元素  \n　　该元素主要用来声明全局的转发关系，它具有以下四个属性：  \n　　1. className：和forward元素对应的配置类，默认为：org.apache.struts.action.ActionForward。可有可无。  \n　　2. contextRelative：此项为true时，表时path属性以＂/＂开头，相对于当前上下文的URL，默认为false．可有可无。　  \n　　3. name：转发路径的逻辑名．必填。  \n　　4. path：转发或重定向的URL，当contextRelative=false时，URL路径相对于当前应用（application），当为ture时，表示URL路径相对于当前上下文（context）。  \n　　5.  redirect：当此项为ture时，表示执行重定向操作。当此项为false时表示转向操作。默认为false。  \n如下所示：  \n>>\n< global-forwards>  \n　　< forward  name=\"forms1\"  path=\"/a.do\"/>  \n　　< forward  name=\"forms2\"  path=\"/nb.jsp\"/>  \n< global-forwards>\n\n5.action-mappings元素  \n　　描述从特定的请求路径到相应的Action类的映射。它具有以下几个属性：  \n　　1. attribute：设置和Action关联的ActionForm Bean在request和session范围内的key。如：Form Bean存在于request范围内，此项设为“myBenas”，则在request.getAttribute(\"myBenas\")就可以返回该Bean的实例。  \n　　2. classsName：和action元素对应的配置元素，默认为：org.apache.struts.action.ActionMapping.  \n　　3. forward：转发的URL路径。  \n　　4. include：指定包含的URL路径。  \n　　5. input：输入表单的URL路径，当表单验证失败时，将把请求转发到该URL。  \n　　6. name：指定和Action关联的Action FormBean的名字，该名字必须在Form-Bean定义过。  \n　　7. path：指定访问Action的路径，以“/”开头，无扩展名。   \n　　8. parameter：指定Actgion的配置参数，在Action类的execute()方法中，可以调用ActionMapping对象的getParameter()方法来读取该配置参数。  \n　　9. roles：指定允许调用该Action的安全角色，多个角色之间用，隔开，在处理请求时，RequestProcessor会根据该配置项来决定用户是否有权限调用Action权限。  \n　　10. scope：指定ActionForm Bean的存在范围，可选取为request和session，默认为session。\n　　11. type：指定Action类的完整类名。  \n　　12. unknown：如果此项为true，表示可以处理用户发出的所有无效的Action URL，默认为false；  \n　　13. validate：指定是否要调用Action FormBean的validate方法，默认值为ture.  \n注：forward、include、type属性只能选中其中一项。  \n如下：  \n>>\n< action path=\"/search\"  \n　　　　type=\"zxj.okBean\"  \n　　　　name=\"a1\"  \n　　　　scope=\"request\"  \n　　　　validate=\"true\"  \n　　　　input=\"/b.jsp\">  \n　　< forward name=\"tig\" path=\"/aa.jsp\"/>  \n< /action>\n\n注：此中的forward是指局部的转发路径。global-forwards表示全局的转发路径。\n\n6.controller元素  \n　　该元素用于配置ActionServlet。它具有以下属性。  \n　　1. bufferSize：指定上载文件的输入缓冲大小，可选，默认为4096  \n　　2. className：指定和controller元素对应的配置类，默认为org.apache.struts.config.ControllerConfig  \n　　3. conentType：字符编码，如果在Action和JSP网页中设置了，则覆盖该设置。  \n　　4. locale：指定是否把Locale对象保存到当前用户的session中，默认值为false.  \n　　5. processorClass：指定负责请求的java类完整路径。  \n　　6. tempDir：指定处理文件的临时工作目录，如果此项没有设置，将采用Servlet容器为web应用分配的临时工作目录。  \n　　7. nochache：如果为true：在响应结果中将加入特定的头参数：Pragma,Cache-Control和Expise，防止页面被保存在客户端的浏览器中，默认为false  \n如下：  \n\n>>\n< controller  \n　　contentType=\"text/html;charset=\"UTF-8\"\"  \n　　locale=\"true\"  \n　　processorClass=\"con.ok\"/>\n\n7.message-resources元素  \n　　主要配置本地化消息文本，它具有以下属性。  \n　　1. className：和message-resources元素对应的配置类，默认为org.apache.struts.config.MessageResourcesConfig。  \n　　2. factory：指定消息资源的工厂类，默认为：org.apache.struts.util.PropertyMessageResourcesFactory类  \n　　3. key：指定Resource Bundle存放的ServletContext对象中时采用的属性Key，默认由Globals.MESSAGES_KEY定义的字符串常量，只允许一个Resource Bundle采用默认的属性Key。  \n　　4. null：指定MessageSources类如何处理未知消息的key，如果为true，则返回空字符串，如果为false，则返回相关字串，默认为false  \n　　5. prameter：指定MessageSources的资源文件名，如果为：a.b.ApplicationResources，则实际对应的文件路径为：WEB-INF/classes/a/b/ApplicationResources.properties.  \n如：  \n>>\n< message-resources null=\"false\" parameter=\"defaultResource\"/>  \n< message-resources key=\"num1\" null=\"false\" parameter=\"test\"/>  \n\n访问为：\n>>\n< bean:message  key=\"zxj\"/>  \n< bean:message  key=\"zxj\"  bundle=\"num1\"/>  \n\n其中，zxj表法，messagesource资源文件中的一个字符串。\n\n8.plugin-in元素  \n　　配置Struts的插件，属性如下：  \n　　1. className：指定的Struts插件类，必须实现org.apache.struts.action.PlugiIn接口。如：  　\n>>\n　< plug-in className=\"a.b.c.\">    \n　　< set-property property=\"xxx\" value=\"/WEB-INF/aa.xml\"  />    \n  < /plug-in>  \n  \n后记，多模块的配置，可以供多个应用应用不同的struts-config.xml\n\n文件参考：http://blog.csdn.net/huozhicheng/article/details/5426356","slug":"struts-config配置文件","published":1,"updated":"2018-08-29T10:14:44.112Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zl001ixcnonts9hlfy","content":"<p>&lt; struts-config &gt;是struts的根元素，它主要有8个子元素，DTD定义如下：</p>\n<p>&lt; !ELEMENT struts-config<br>(data-sources?,form-beans?,global-exceptions?,global-forwards?,action-mappings?,controller?,message-resources*,plug-in*)<br>>  </p>\n<p>以上8个元素，下面一一描述：  </p>\n<ol>\n<li>date-sources元素<br>　　date-sources元素用来配置应用程序所需要的数据源。java语言提供了javax.sql.DateSource接口，所有数据源必须实现该接口。如下配置：<blockquote>\n<p>&lt; data-sources&gt;<br>　　&lt; data-source type=”org.apached.commons.dbcp.BasicDataSource”><br>　　　　………………<br>　　&lt; /data-source&gt;<br>&lt; /data-sources&gt;  </p>\n</blockquote>\n</li>\n</ol>\n<p>在Action中访问方式如下：</p>\n<blockquote>\n<p>&gt;<br>javax.sql.DataSource dataSource;<br>java.sql.Connection myConnection;<br>try<br>{<br>　　dataSource = getDataSource(request);<br>　　myConnection　＝　dataSource.getConnection();<br>}<br>…………  </p>\n</blockquote>\n<p>如果是多数据源，可用如下配置：</p>\n<blockquote>\n<p>&gt;<br>&lt; data-sources&gt;<br>　　&lt; data-source key=”a”  type=”org.apached.commons.dbcp.BasicDataSource”&gt;<br>　　　　………………<br>　　&lt; /data-source&gt;<br>　　&lt; data-source key=”b”   type=”org.apached.commons.dbcp.BasicDataSource”&gt;<br>　　　　………………<br>　　&lt; /data-source&gt;<br>&lt; /data-sources&gt;</p>\n</blockquote>\n<p>访问方式：dataSource = getDataSource(request,”a”);</p>\n<p>2.form-beans元素<br>　　该元素主要用来配置表单验证的类。它包含如下属性：<br>　　1.classname：一般用得少，指定和form-bean无素对应的配置类，默认为org.apache.struts.config.FormBeanConfig，如果自定义，则必须扩展FormBeanConfig类。可有可无。<br>　　2.name：ActionForm Bean的惟一标识。必须。<br>　　3.type：ActionForm的完整类名。必须。<br>如下所示：  </p>\n<blockquote>\n<p>&gt;<br>&lt; form-beans&gt;<br>　　&lt; form-bean name=”Loign” type=”com.ha.login”&gt;<br>&lt; /form-beans&gt;</p>\n</blockquote>\n<p>如果是动态Action FormBean，还必须配置form-bean元素的form-property子元素。它包含四个属性，上面三个，还有一个initial 元素：以字符串的形式设置表单字段的初始值，如果没有设置该属性，则是基本类型为0，如果是对象则为null。可有可无。如下所示：  </p>\n<blockquote>\n<p>&gt;<br>&lt; form-beans&gt;<br>　　&lt; form-bean<br>　　　　　　name=”Loign”<br>　　　　　　type=”com.ha.login”&gt;<br>　　　　　&lt; form-property name=”ok”  type=”java.lang.String”/&gt;<br>　　　　　&lt; form-property name=”oks”  type=”java.lang.String”/&gt;<br>　　　　　&lt; form-property name=”okss”  type=”java.lang.Integer” initial=”20”/&gt;<br>　　&lt; /form-bean&gt;<br>&lt; /form-beans&gt;</p>\n</blockquote>\n<p>3.global-exceptions元素<br>　　该元素主要配置异常处理，它的exception子元素代表全局的异常配置。struts采取配置的方式来处理异常。它用来设置java异常和异常处理类org.apache.struts.action.ExceptionHandler之间的映射。它有七个属性，如下所示：<br>　　1. className：指定和exception元素对应的配置类，默认为：org.apache.struts.config.ExceptionConfig。可有可无。<br>　　2. Handler：指定异常得理类，默认为：org.apache.struts.action.ExceptionHandler。可有可无<br>　　3. key：指定在Resource Bundle中描述该异常的消息key<br>　　4. path：指定当异常发生时的转发路径。<br>　　5. scope：指定ActionMessages实例的存放范围，可选值包括：request和session，默认为request。可有可无。<br>　　6. type：指定所需处理异常类的名字，必须。<br>　　7. bundle：指定Resource Bundle<br>如下所示：  </p>\n<blockquote>\n<p>&gt;<br>&lt; global-exceptions&gt;<br>　　&lt; exception key=”global.error.invalidlogin” path=”/error.jsp” scope=”request” type=”com.hn.tree”/&gt;<br>&lt; /global-exceptions&gt;</p>\n</blockquote>\n<p>4.global-forwards元素<br>　　该元素主要用来声明全局的转发关系，它具有以下四个属性：<br>　　1. className：和forward元素对应的配置类，默认为：org.apache.struts.action.ActionForward。可有可无。<br>　　2. contextRelative：此项为true时，表时path属性以＂/＂开头，相对于当前上下文的URL，默认为false．可有可无。　<br>　　3. name：转发路径的逻辑名．必填。<br>　　4. path：转发或重定向的URL，当contextRelative=false时，URL路径相对于当前应用（application），当为ture时，表示URL路径相对于当前上下文（context）。<br>　　5.  redirect：当此项为ture时，表示执行重定向操作。当此项为false时表示转向操作。默认为false。<br>如下所示：  </p>\n<blockquote>\n<p>&gt;<br>&lt; global-forwards&gt;<br>　　&lt; forward  name=”forms1”  path=”/a.do”/&gt;<br>　　&lt; forward  name=”forms2”  path=”/nb.jsp”/&gt;<br>&lt; global-forwards&gt;</p>\n</blockquote>\n<p>5.action-mappings元素<br>　　描述从特定的请求路径到相应的Action类的映射。它具有以下几个属性：<br>　　1. attribute：设置和Action关联的ActionForm Bean在request和session范围内的key。如：Form Bean存在于request范围内，此项设为“myBenas”，则在request.getAttribute(“myBenas”)就可以返回该Bean的实例。<br>　　2. classsName：和action元素对应的配置元素，默认为：org.apache.struts.action.ActionMapping.<br>　　3. forward：转发的URL路径。<br>　　4. include：指定包含的URL路径。<br>　　5. input：输入表单的URL路径，当表单验证失败时，将把请求转发到该URL。<br>　　6. name：指定和Action关联的Action FormBean的名字，该名字必须在Form-Bean定义过。<br>　　7. path：指定访问Action的路径，以“/”开头，无扩展名。<br>　　8. parameter：指定Actgion的配置参数，在Action类的execute()方法中，可以调用ActionMapping对象的getParameter()方法来读取该配置参数。<br>　　9. roles：指定允许调用该Action的安全角色，多个角色之间用，隔开，在处理请求时，RequestProcessor会根据该配置项来决定用户是否有权限调用Action权限。<br>　　10. scope：指定ActionForm Bean的存在范围，可选取为request和session，默认为session。<br>　　11. type：指定Action类的完整类名。<br>　　12. unknown：如果此项为true，表示可以处理用户发出的所有无效的Action URL，默认为false；<br>　　13. validate：指定是否要调用Action FormBean的validate方法，默认值为ture.<br>注：forward、include、type属性只能选中其中一项。<br>如下：  </p>\n<blockquote>\n<p>&gt;<br>&lt; action path=”/search”<br>　　　　type=”zxj.okBean”<br>　　　　name=”a1”<br>　　　　scope=”request”<br>　　　　validate=”true”<br>　　　　input=”/b.jsp”&gt;<br>　　&lt; forward name=”tig” path=”/aa.jsp”/&gt;<br>&lt; /action&gt;</p>\n</blockquote>\n<p>注：此中的forward是指局部的转发路径。global-forwards表示全局的转发路径。</p>\n<p>6.controller元素<br>　　该元素用于配置ActionServlet。它具有以下属性。<br>　　1. bufferSize：指定上载文件的输入缓冲大小，可选，默认为4096<br>　　2. className：指定和controller元素对应的配置类，默认为org.apache.struts.config.ControllerConfig<br>　　3. conentType：字符编码，如果在Action和JSP网页中设置了，则覆盖该设置。<br>　　4. locale：指定是否把Locale对象保存到当前用户的session中，默认值为false.<br>　　5. processorClass：指定负责请求的java类完整路径。<br>　　6. tempDir：指定处理文件的临时工作目录，如果此项没有设置，将采用Servlet容器为web应用分配的临时工作目录。<br>　　7. nochache：如果为true：在响应结果中将加入特定的头参数：Pragma,Cache-Control和Expise，防止页面被保存在客户端的浏览器中，默认为false<br>如下：  </p>\n<blockquote>\n<p>&gt;<br>&lt; controller<br>　　contentType=”text/html;charset=”UTF-8””<br>　　locale=”true”<br>　　processorClass=”con.ok”/&gt;</p>\n</blockquote>\n<p>7.message-resources元素<br>　　主要配置本地化消息文本，它具有以下属性。<br>　　1. className：和message-resources元素对应的配置类，默认为org.apache.struts.config.MessageResourcesConfig。<br>　　2. factory：指定消息资源的工厂类，默认为：org.apache.struts.util.PropertyMessageResourcesFactory类<br>　　3. key：指定Resource Bundle存放的ServletContext对象中时采用的属性Key，默认由Globals.MESSAGES_KEY定义的字符串常量，只允许一个Resource Bundle采用默认的属性Key。<br>　　4. null：指定MessageSources类如何处理未知消息的key，如果为true，则返回空字符串，如果为false，则返回相关字串，默认为false<br>　　5. prameter：指定MessageSources的资源文件名，如果为：a.b.ApplicationResources，则实际对应的文件路径为：WEB-INF/classes/a/b/ApplicationResources.properties.<br>如：  </p>\n<blockquote>\n<p>&gt;<br>&lt; message-resources null=”false” parameter=”defaultResource”/&gt;<br>&lt; message-resources key=”num1” null=”false” parameter=”test”/&gt;  </p>\n</blockquote>\n<p>访问为：</p>\n<blockquote>\n<p>&gt;<br>&lt; bean:message  key=”zxj”/&gt;<br>&lt; bean:message  key=”zxj”  bundle=”num1”/&gt;  </p>\n</blockquote>\n<p>其中，zxj表法，messagesource资源文件中的一个字符串。</p>\n<p>8.plugin-in元素<br>　　配置Struts的插件，属性如下：<br>　　1. className：指定的Struts插件类，必须实现org.apache.struts.action.PlugiIn接口。如：  　</p>\n<blockquote>\n<p>&gt;<br>　&lt; plug-in className=”a.b.c.”&gt;<br>　　&lt; set-property property=”xxx” value=”/WEB-INF/aa.xml”  /&gt;<br>  &lt; /plug-in&gt;  </p>\n</blockquote>\n<p>后记，多模块的配置，可以供多个应用应用不同的struts-config.xml</p>\n<p>文件参考：<a href=\"http://blog.csdn.net/huozhicheng/article/details/5426356\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/huozhicheng/article/details/5426356</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>&lt; struts-config &gt;是struts的根元素，它主要有8个子元素，DTD定义如下：</p>\n<p>&lt; !ELEMENT struts-config<br>(data-sources?,form-beans?,global-exceptions?,global-forwards?,action-mappings?,controller?,message-resources*,plug-in*)<br>>  </p>\n<p>以上8个元素，下面一一描述：  </p>\n<ol>\n<li>date-sources元素<br>　　date-sources元素用来配置应用程序所需要的数据源。java语言提供了javax.sql.DateSource接口，所有数据源必须实现该接口。如下配置：<blockquote>\n<p>&lt; data-sources&gt;<br>　　&lt; data-source type=”org.apached.commons.dbcp.BasicDataSource”><br>　　　　………………<br>　　&lt; /data-source&gt;<br>&lt; /data-sources&gt;  </p>\n</blockquote>\n</li>\n</ol>\n<p>在Action中访问方式如下：</p>\n<blockquote>\n<p>&gt;<br>javax.sql.DataSource dataSource;<br>java.sql.Connection myConnection;<br>try<br>{<br>　　dataSource = getDataSource(request);<br>　　myConnection　＝　dataSource.getConnection();<br>}<br>…………  </p>\n</blockquote>\n<p>如果是多数据源，可用如下配置：</p>\n<blockquote>\n<p>&gt;<br>&lt; data-sources&gt;<br>　　&lt; data-source key=”a”  type=”org.apached.commons.dbcp.BasicDataSource”&gt;<br>　　　　………………<br>　　&lt; /data-source&gt;<br>　　&lt; data-source key=”b”   type=”org.apached.commons.dbcp.BasicDataSource”&gt;<br>　　　　………………<br>　　&lt; /data-source&gt;<br>&lt; /data-sources&gt;</p>\n</blockquote>\n<p>访问方式：dataSource = getDataSource(request,”a”);</p>\n<p>2.form-beans元素<br>　　该元素主要用来配置表单验证的类。它包含如下属性：<br>　　1.classname：一般用得少，指定和form-bean无素对应的配置类，默认为org.apache.struts.config.FormBeanConfig，如果自定义，则必须扩展FormBeanConfig类。可有可无。<br>　　2.name：ActionForm Bean的惟一标识。必须。<br>　　3.type：ActionForm的完整类名。必须。<br>如下所示：  </p>\n<blockquote>\n<p>&gt;<br>&lt; form-beans&gt;<br>　　&lt; form-bean name=”Loign” type=”com.ha.login”&gt;<br>&lt; /form-beans&gt;</p>\n</blockquote>\n<p>如果是动态Action FormBean，还必须配置form-bean元素的form-property子元素。它包含四个属性，上面三个，还有一个initial 元素：以字符串的形式设置表单字段的初始值，如果没有设置该属性，则是基本类型为0，如果是对象则为null。可有可无。如下所示：  </p>\n<blockquote>\n<p>&gt;<br>&lt; form-beans&gt;<br>　　&lt; form-bean<br>　　　　　　name=”Loign”<br>　　　　　　type=”com.ha.login”&gt;<br>　　　　　&lt; form-property name=”ok”  type=”java.lang.String”/&gt;<br>　　　　　&lt; form-property name=”oks”  type=”java.lang.String”/&gt;<br>　　　　　&lt; form-property name=”okss”  type=”java.lang.Integer” initial=”20”/&gt;<br>　　&lt; /form-bean&gt;<br>&lt; /form-beans&gt;</p>\n</blockquote>\n<p>3.global-exceptions元素<br>　　该元素主要配置异常处理，它的exception子元素代表全局的异常配置。struts采取配置的方式来处理异常。它用来设置java异常和异常处理类org.apache.struts.action.ExceptionHandler之间的映射。它有七个属性，如下所示：<br>　　1. className：指定和exception元素对应的配置类，默认为：org.apache.struts.config.ExceptionConfig。可有可无。<br>　　2. Handler：指定异常得理类，默认为：org.apache.struts.action.ExceptionHandler。可有可无<br>　　3. key：指定在Resource Bundle中描述该异常的消息key<br>　　4. path：指定当异常发生时的转发路径。<br>　　5. scope：指定ActionMessages实例的存放范围，可选值包括：request和session，默认为request。可有可无。<br>　　6. type：指定所需处理异常类的名字，必须。<br>　　7. bundle：指定Resource Bundle<br>如下所示：  </p>\n<blockquote>\n<p>&gt;<br>&lt; global-exceptions&gt;<br>　　&lt; exception key=”global.error.invalidlogin” path=”/error.jsp” scope=”request” type=”com.hn.tree”/&gt;<br>&lt; /global-exceptions&gt;</p>\n</blockquote>\n<p>4.global-forwards元素<br>　　该元素主要用来声明全局的转发关系，它具有以下四个属性：<br>　　1. className：和forward元素对应的配置类，默认为：org.apache.struts.action.ActionForward。可有可无。<br>　　2. contextRelative：此项为true时，表时path属性以＂/＂开头，相对于当前上下文的URL，默认为false．可有可无。　<br>　　3. name：转发路径的逻辑名．必填。<br>　　4. path：转发或重定向的URL，当contextRelative=false时，URL路径相对于当前应用（application），当为ture时，表示URL路径相对于当前上下文（context）。<br>　　5.  redirect：当此项为ture时，表示执行重定向操作。当此项为false时表示转向操作。默认为false。<br>如下所示：  </p>\n<blockquote>\n<p>&gt;<br>&lt; global-forwards&gt;<br>　　&lt; forward  name=”forms1”  path=”/a.do”/&gt;<br>　　&lt; forward  name=”forms2”  path=”/nb.jsp”/&gt;<br>&lt; global-forwards&gt;</p>\n</blockquote>\n<p>5.action-mappings元素<br>　　描述从特定的请求路径到相应的Action类的映射。它具有以下几个属性：<br>　　1. attribute：设置和Action关联的ActionForm Bean在request和session范围内的key。如：Form Bean存在于request范围内，此项设为“myBenas”，则在request.getAttribute(“myBenas”)就可以返回该Bean的实例。<br>　　2. classsName：和action元素对应的配置元素，默认为：org.apache.struts.action.ActionMapping.<br>　　3. forward：转发的URL路径。<br>　　4. include：指定包含的URL路径。<br>　　5. input：输入表单的URL路径，当表单验证失败时，将把请求转发到该URL。<br>　　6. name：指定和Action关联的Action FormBean的名字，该名字必须在Form-Bean定义过。<br>　　7. path：指定访问Action的路径，以“/”开头，无扩展名。<br>　　8. parameter：指定Actgion的配置参数，在Action类的execute()方法中，可以调用ActionMapping对象的getParameter()方法来读取该配置参数。<br>　　9. roles：指定允许调用该Action的安全角色，多个角色之间用，隔开，在处理请求时，RequestProcessor会根据该配置项来决定用户是否有权限调用Action权限。<br>　　10. scope：指定ActionForm Bean的存在范围，可选取为request和session，默认为session。<br>　　11. type：指定Action类的完整类名。<br>　　12. unknown：如果此项为true，表示可以处理用户发出的所有无效的Action URL，默认为false；<br>　　13. validate：指定是否要调用Action FormBean的validate方法，默认值为ture.<br>注：forward、include、type属性只能选中其中一项。<br>如下：  </p>\n<blockquote>\n<p>&gt;<br>&lt; action path=”/search”<br>　　　　type=”zxj.okBean”<br>　　　　name=”a1”<br>　　　　scope=”request”<br>　　　　validate=”true”<br>　　　　input=”/b.jsp”&gt;<br>　　&lt; forward name=”tig” path=”/aa.jsp”/&gt;<br>&lt; /action&gt;</p>\n</blockquote>\n<p>注：此中的forward是指局部的转发路径。global-forwards表示全局的转发路径。</p>\n<p>6.controller元素<br>　　该元素用于配置ActionServlet。它具有以下属性。<br>　　1. bufferSize：指定上载文件的输入缓冲大小，可选，默认为4096<br>　　2. className：指定和controller元素对应的配置类，默认为org.apache.struts.config.ControllerConfig<br>　　3. conentType：字符编码，如果在Action和JSP网页中设置了，则覆盖该设置。<br>　　4. locale：指定是否把Locale对象保存到当前用户的session中，默认值为false.<br>　　5. processorClass：指定负责请求的java类完整路径。<br>　　6. tempDir：指定处理文件的临时工作目录，如果此项没有设置，将采用Servlet容器为web应用分配的临时工作目录。<br>　　7. nochache：如果为true：在响应结果中将加入特定的头参数：Pragma,Cache-Control和Expise，防止页面被保存在客户端的浏览器中，默认为false<br>如下：  </p>\n<blockquote>\n<p>&gt;<br>&lt; controller<br>　　contentType=”text/html;charset=”UTF-8””<br>　　locale=”true”<br>　　processorClass=”con.ok”/&gt;</p>\n</blockquote>\n<p>7.message-resources元素<br>　　主要配置本地化消息文本，它具有以下属性。<br>　　1. className：和message-resources元素对应的配置类，默认为org.apache.struts.config.MessageResourcesConfig。<br>　　2. factory：指定消息资源的工厂类，默认为：org.apache.struts.util.PropertyMessageResourcesFactory类<br>　　3. key：指定Resource Bundle存放的ServletContext对象中时采用的属性Key，默认由Globals.MESSAGES_KEY定义的字符串常量，只允许一个Resource Bundle采用默认的属性Key。<br>　　4. null：指定MessageSources类如何处理未知消息的key，如果为true，则返回空字符串，如果为false，则返回相关字串，默认为false<br>　　5. prameter：指定MessageSources的资源文件名，如果为：a.b.ApplicationResources，则实际对应的文件路径为：WEB-INF/classes/a/b/ApplicationResources.properties.<br>如：  </p>\n<blockquote>\n<p>&gt;<br>&lt; message-resources null=”false” parameter=”defaultResource”/&gt;<br>&lt; message-resources key=”num1” null=”false” parameter=”test”/&gt;  </p>\n</blockquote>\n<p>访问为：</p>\n<blockquote>\n<p>&gt;<br>&lt; bean:message  key=”zxj”/&gt;<br>&lt; bean:message  key=”zxj”  bundle=”num1”/&gt;  </p>\n</blockquote>\n<p>其中，zxj表法，messagesource资源文件中的一个字符串。</p>\n<p>8.plugin-in元素<br>　　配置Struts的插件，属性如下：<br>　　1. className：指定的Struts插件类，必须实现org.apache.struts.action.PlugiIn接口。如：  　</p>\n<blockquote>\n<p>&gt;<br>　&lt; plug-in className=”a.b.c.”&gt;<br>　　&lt; set-property property=”xxx” value=”/WEB-INF/aa.xml”  /&gt;<br>  &lt; /plug-in&gt;  </p>\n</blockquote>\n<p>后记，多模块的配置，可以供多个应用应用不同的struts-config.xml</p>\n<p>文件参考：<a href=\"http://blog.csdn.net/huozhicheng/article/details/5426356\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/huozhicheng/article/details/5426356</a></p>\n"},{"title":"svn命令行","date":"2017-08-31T09:49:38.000Z","_content":"\n1. 从SVN上检出  \n\tsvn checkout svnPath  \n\t\n2. 提交svn  \n\tsvn commit * -m \"message\"\n\t\n3. 误删除文件  \n   直接svn up  \n   或 svn revert -r version  \n   \n4. 删除文件后提交  \n\tsvn delete XX  \n\t再 svn ci -m \"message\"    \n\t\n5. 查看本地改动了哪些文件  \n\tsvn st\n\t\n6. 本地文件和svn上文件对比  \n\tsvn diff fileName","source":"_posts/svn命令行.md","raw":"---\ntitle: svn命令行\ndate: 2017-08-31 17:49:38\ntags: 命令行\n---\n\n1. 从SVN上检出  \n\tsvn checkout svnPath  \n\t\n2. 提交svn  \n\tsvn commit * -m \"message\"\n\t\n3. 误删除文件  \n   直接svn up  \n   或 svn revert -r version  \n   \n4. 删除文件后提交  \n\tsvn delete XX  \n\t再 svn ci -m \"message\"    \n\t\n5. 查看本地改动了哪些文件  \n\tsvn st\n\t\n6. 本地文件和svn上文件对比  \n\tsvn diff fileName","slug":"svn命令行","published":1,"updated":"2018-08-29T10:14:44.112Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zm001lxcnokmzfrbs8","content":"<ol>\n<li><p>从SVN上检出<br> svn checkout svnPath  </p>\n</li>\n<li><p>提交svn<br> svn commit * -m “message”</p>\n</li>\n<li><p>误删除文件<br>直接svn up<br>或 svn revert -r version  </p>\n</li>\n<li><p>删除文件后提交<br> svn delete XX<br> 再 svn ci -m “message”    </p>\n</li>\n<li><p>查看本地改动了哪些文件<br> svn st</p>\n</li>\n<li><p>本地文件和svn上文件对比<br> svn diff fileName</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>从SVN上检出<br> svn checkout svnPath  </p>\n</li>\n<li><p>提交svn<br> svn commit * -m “message”</p>\n</li>\n<li><p>误删除文件<br>直接svn up<br>或 svn revert -r version  </p>\n</li>\n<li><p>删除文件后提交<br> svn delete XX<br> 再 svn ci -m “message”    </p>\n</li>\n<li><p>查看本地改动了哪些文件<br> svn st</p>\n</li>\n<li><p>本地文件和svn上文件对比<br> svn diff fileName</p>\n</li>\n</ol>\n"},{"title":"tornado学习","date":"2018-05-18T02:20:21.000Z","_content":"\n学习参考链接：\nhttp://demo.pythoner.com/itt2zh/ch1.html\n","source":"_posts/tornado学习.md","raw":"---\ntitle: tornado学习\ndate: 2018-05-18 10:20:21\ntags: 框架\n---\n\n学习参考链接：\nhttp://demo.pythoner.com/itt2zh/ch1.html\n","slug":"tornado学习","published":1,"updated":"2018-08-29T10:14:44.112Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zn001nxcnohptm5izu","content":"<p>学习参考链接：<br><a href=\"http://demo.pythoner.com/itt2zh/ch1.html\" target=\"_blank\" rel=\"external\">http://demo.pythoner.com/itt2zh/ch1.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>学习参考链接：<br><a href=\"http://demo.pythoner.com/itt2zh/ch1.html\" target=\"_blank\" rel=\"external\">http://demo.pythoner.com/itt2zh/ch1.html</a></p>\n"},{"title":"vim常用命令行","date":"2017-08-07T02:06:00.000Z","_content":"\n* grep | history    \n查看历史命令行   \n\n* grep \"getFileMd5\" . -R   \n递归查找当前文件夹下内容包含getFileMd5的文件  \n\n* find ./ -name js2objectc.h   \n查找js2objectc.h文件  \n\n* chmod 777 openCocos.sh   \n修改openCocos.sh权限  \n\n* ssh连接服务器  \n ssh -i ~/.ssh/id_rsa.zyy zyy@111.203.187.123\n\n ssh -Ai /Users/tuyoo/.ssh/id_rsa.zyy zyy#UTF-8@10.3.13.8 -p 222 -oForwardAgent=yes\n \n* 用指定的app打开文件  \n  open -a /Applications/MacDown.app vim常用命令行.md  \n  \n* 修改文件操作权限  \n  sudo chown tyhall:tyhall 0.json （若修改文件夹下的所有文件操作权限，需要在chown后面加上-R）\n\n* 查看磁盘使用情况  df  \n\n* 查看当前java进程 ps -ef|grep java\n\n* 查看当前python进程 ps aux|grep python\n  \n\n\n","source":"_posts/vim常用命令行.md","raw":"---\ntitle: vim常用命令行\ndate: 2017-08-07 10:06:00\ntags: 命令行\n---\n\n* grep | history    \n查看历史命令行   \n\n* grep \"getFileMd5\" . -R   \n递归查找当前文件夹下内容包含getFileMd5的文件  \n\n* find ./ -name js2objectc.h   \n查找js2objectc.h文件  \n\n* chmod 777 openCocos.sh   \n修改openCocos.sh权限  \n\n* ssh连接服务器  \n ssh -i ~/.ssh/id_rsa.zyy zyy@111.203.187.123\n\n ssh -Ai /Users/tuyoo/.ssh/id_rsa.zyy zyy#UTF-8@10.3.13.8 -p 222 -oForwardAgent=yes\n \n* 用指定的app打开文件  \n  open -a /Applications/MacDown.app vim常用命令行.md  \n  \n* 修改文件操作权限  \n  sudo chown tyhall:tyhall 0.json （若修改文件夹下的所有文件操作权限，需要在chown后面加上-R）\n\n* 查看磁盘使用情况  df  \n\n* 查看当前java进程 ps -ef|grep java\n\n* 查看当前python进程 ps aux|grep python\n  \n\n\n","slug":"vim常用命令行","published":1,"updated":"2018-08-29T10:14:44.112Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zq001pxcnodo0l0wev","content":"<ul>\n<li><p>grep | history<br>查看历史命令行   </p>\n</li>\n<li><p>grep “getFileMd5” . -R<br>递归查找当前文件夹下内容包含getFileMd5的文件  </p>\n</li>\n<li><p>find ./ -name js2objectc.h<br>查找js2objectc.h文件  </p>\n</li>\n<li><p>chmod 777 openCocos.sh<br>修改openCocos.sh权限  </p>\n</li>\n<li><p>ssh连接服务器<br>ssh -i ~/.ssh/id_rsa.zyy zyy@111.203.187.123</p>\n<p>ssh -Ai /Users/tuyoo/.ssh/id_rsa.zyy zyy#UTF-8@10.3.13.8 -p 222 -oForwardAgent=yes</p>\n</li>\n<li><p>用指定的app打开文件<br>open -a /Applications/MacDown.app vim常用命令行.md  </p>\n</li>\n<li><p>修改文件操作权限<br>sudo chown tyhall:tyhall 0.json （若修改文件夹下的所有文件操作权限，需要在chown后面加上-R）</p>\n</li>\n<li><p>查看磁盘使用情况  df  </p>\n</li>\n<li><p>查看当前java进程 ps -ef|grep java</p>\n</li>\n<li><p>查看当前python进程 ps aux|grep python</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>grep | history<br>查看历史命令行   </p>\n</li>\n<li><p>grep “getFileMd5” . -R<br>递归查找当前文件夹下内容包含getFileMd5的文件  </p>\n</li>\n<li><p>find ./ -name js2objectc.h<br>查找js2objectc.h文件  </p>\n</li>\n<li><p>chmod 777 openCocos.sh<br>修改openCocos.sh权限  </p>\n</li>\n<li><p>ssh连接服务器<br>ssh -i ~/.ssh/id_rsa.zyy zyy@111.203.187.123</p>\n<p>ssh -Ai /Users/tuyoo/.ssh/id_rsa.zyy zyy#UTF-8@10.3.13.8 -p 222 -oForwardAgent=yes</p>\n</li>\n<li><p>用指定的app打开文件<br>open -a /Applications/MacDown.app vim常用命令行.md  </p>\n</li>\n<li><p>修改文件操作权限<br>sudo chown tyhall:tyhall 0.json （若修改文件夹下的所有文件操作权限，需要在chown后面加上-R）</p>\n</li>\n<li><p>查看磁盘使用情况  df  </p>\n</li>\n<li><p>查看当前java进程 ps -ef|grep java</p>\n</li>\n<li><p>查看当前python进程 ps aux|grep python</p>\n</li>\n</ul>\n"},{"title":"webstorm快捷键","date":"2017-10-09T02:50:42.000Z","_content":"\n在macos下：\n1. 全局搜索  \nshift + ctrl + f  \n2. 全局搜索并替换    \nshift + ctrl + r  \n3. 当前页面搜索  \ncommond + f  \n4. 快速打开选项卡  \nshift + commond + n\n","source":"_posts/webstorm快捷键.md","raw":"---\ntitle: webstorm快捷键\ndate: 2017-10-09 10:50:42\ntags: [工具,游戏]\n---\n\n在macos下：\n1. 全局搜索  \nshift + ctrl + f  \n2. 全局搜索并替换    \nshift + ctrl + r  \n3. 当前页面搜索  \ncommond + f  \n4. 快速打开选项卡  \nshift + commond + n\n","slug":"webstorm快捷键","published":1,"updated":"2018-08-29T10:14:44.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zr001rxcnomzof52a9","content":"<p>在macos下：</p>\n<ol>\n<li>全局搜索<br>shift + ctrl + f  </li>\n<li>全局搜索并替换<br>shift + ctrl + r  </li>\n<li>当前页面搜索<br>commond + f  </li>\n<li>快速打开选项卡<br>shift + commond + n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>在macos下：</p>\n<ol>\n<li>全局搜索<br>shift + ctrl + f  </li>\n<li>全局搜索并替换<br>shift + ctrl + r  </li>\n<li>当前页面搜索<br>commond + f  </li>\n<li>快速打开选项卡<br>shift + commond + n</li>\n</ol>\n"},{"title":"代码大全","date":"2017-06-17T02:38:21.000Z","_content":"\n1. personal character（个人性格）  \n > 你无法提升自己的聪明程度，但性格在一定程度上能够改进。事实证明，个人性格对于造就出程序员高手更具有决定性意义。  \n \n > 高智商与优秀程序员之间并无太密切的联系，如何专注你的聪明才智，比你有多聪明更重要   \n \n * 人的个性对其编程能力有直接的影响\n * 最有关系的性格为：谦虚、求知欲、诚实、创造性和纪律，以及高明的偷懒\n * 程序员高手的性格与天分无关，而任何事情都与个人发展相关\n * 出乎意料的是，小聪明、经验、坚持和疯狂既有助也有害\n * 很多程序员不愿主动吸收新知识和技术，只依靠工作时间偶尔接触新的信息。如果你能抽出少量时间阅读和学习编程知识，要不了多久就能鹤立鸡群\n * 好性格和培养正确的习惯关系甚大。要成为杰出的程序员，先要养成良好习惯，其他自然水到渠成\n\n2. 自说明代码\n >编码是要把维护你程序的人，想象成知道你住址的有严重暴力倾向的精神病人  \n\n >写注释能让你更好的思考代码在干什么。如果注释困难，要么是因为代码差劲，要么是没有理解透彻代码。不管怎样，都得对代码再花时间。所以写注释并非再做无用功，而是指出你该做的工作。 \n\n3. 变量名的力量\n * 变量名的平均长度在10到16个字符，调试程序所需花费的力气是最小的。（8到20个字符也几乎同样容易调试）\n * 计算结果的变量：总额、平均值、最大值等等，使用类似于Total、Sum、Average、Max、Min、Record、String、Pointer等限定词。请记住把限定词加到名字的最后。（例如：总收入-revenueRotal、平均支出-expenseAverage）\n * 典型的布尔变量命名：  \n \tdone：完成（true）、未完成（false）  \n \terror：有错误（true）、无错误（false）  \n \tfound：找到（true）、未找到（false）  \n \tsuccess或者ok：操作成功（true）、操作失败（false）  \n * 标识全局变量：在全局变量名之前加上g_前缀   \n \t标识成员变量：可以用m_前缀  \n \t标识类型声明：t_前缀  \n \t标识枚举类型：全部用大写，或者为类型名增加e_或E_前缀，同时为该类型的成员名增加基于特定类型的前缀，如Color_  \n \t\n4. 防御式编程\n\n5. \n \n \n","source":"_posts/代码大全.md","raw":"---\ntitle: 代码大全\ndate: 2017-06-17 10:38:21\ntags: 编程\n---\n\n1. personal character（个人性格）  \n > 你无法提升自己的聪明程度，但性格在一定程度上能够改进。事实证明，个人性格对于造就出程序员高手更具有决定性意义。  \n \n > 高智商与优秀程序员之间并无太密切的联系，如何专注你的聪明才智，比你有多聪明更重要   \n \n * 人的个性对其编程能力有直接的影响\n * 最有关系的性格为：谦虚、求知欲、诚实、创造性和纪律，以及高明的偷懒\n * 程序员高手的性格与天分无关，而任何事情都与个人发展相关\n * 出乎意料的是，小聪明、经验、坚持和疯狂既有助也有害\n * 很多程序员不愿主动吸收新知识和技术，只依靠工作时间偶尔接触新的信息。如果你能抽出少量时间阅读和学习编程知识，要不了多久就能鹤立鸡群\n * 好性格和培养正确的习惯关系甚大。要成为杰出的程序员，先要养成良好习惯，其他自然水到渠成\n\n2. 自说明代码\n >编码是要把维护你程序的人，想象成知道你住址的有严重暴力倾向的精神病人  \n\n >写注释能让你更好的思考代码在干什么。如果注释困难，要么是因为代码差劲，要么是没有理解透彻代码。不管怎样，都得对代码再花时间。所以写注释并非再做无用功，而是指出你该做的工作。 \n\n3. 变量名的力量\n * 变量名的平均长度在10到16个字符，调试程序所需花费的力气是最小的。（8到20个字符也几乎同样容易调试）\n * 计算结果的变量：总额、平均值、最大值等等，使用类似于Total、Sum、Average、Max、Min、Record、String、Pointer等限定词。请记住把限定词加到名字的最后。（例如：总收入-revenueRotal、平均支出-expenseAverage）\n * 典型的布尔变量命名：  \n \tdone：完成（true）、未完成（false）  \n \terror：有错误（true）、无错误（false）  \n \tfound：找到（true）、未找到（false）  \n \tsuccess或者ok：操作成功（true）、操作失败（false）  \n * 标识全局变量：在全局变量名之前加上g_前缀   \n \t标识成员变量：可以用m_前缀  \n \t标识类型声明：t_前缀  \n \t标识枚举类型：全部用大写，或者为类型名增加e_或E_前缀，同时为该类型的成员名增加基于特定类型的前缀，如Color_  \n \t\n4. 防御式编程\n\n5. \n \n \n","slug":"代码大全","published":1,"updated":"2018-08-29T10:14:44.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zs001txcno1lhzwles","content":"<ol>\n<li><p>personal character（个人性格）  </p>\n<blockquote>\n<p>你无法提升自己的聪明程度，但性格在一定程度上能够改进。事实证明，个人性格对于造就出程序员高手更具有决定性意义。  </p>\n<p>高智商与优秀程序员之间并无太密切的联系，如何专注你的聪明才智，比你有多聪明更重要   </p>\n</blockquote>\n<ul>\n<li>人的个性对其编程能力有直接的影响</li>\n<li>最有关系的性格为：谦虚、求知欲、诚实、创造性和纪律，以及高明的偷懒</li>\n<li>程序员高手的性格与天分无关，而任何事情都与个人发展相关</li>\n<li>出乎意料的是，小聪明、经验、坚持和疯狂既有助也有害</li>\n<li>很多程序员不愿主动吸收新知识和技术，只依靠工作时间偶尔接触新的信息。如果你能抽出少量时间阅读和学习编程知识，要不了多久就能鹤立鸡群</li>\n<li>好性格和培养正确的习惯关系甚大。要成为杰出的程序员，先要养成良好习惯，其他自然水到渠成</li>\n</ul>\n</li>\n<li><p>自说明代码</p>\n<blockquote>\n<p>编码是要把维护你程序的人，想象成知道你住址的有严重暴力倾向的精神病人  </p>\n<p>写注释能让你更好的思考代码在干什么。如果注释困难，要么是因为代码差劲，要么是没有理解透彻代码。不管怎样，都得对代码再花时间。所以写注释并非再做无用功，而是指出你该做的工作。 </p>\n</blockquote>\n</li>\n<li><p>变量名的力量</p>\n<ul>\n<li>变量名的平均长度在10到16个字符，调试程序所需花费的力气是最小的。（8到20个字符也几乎同样容易调试）</li>\n<li>计算结果的变量：总额、平均值、最大值等等，使用类似于Total、Sum、Average、Max、Min、Record、String、Pointer等限定词。请记住把限定词加到名字的最后。（例如：总收入-revenueRotal、平均支出-expenseAverage）</li>\n<li>典型的布尔变量命名：<br>done：完成（true）、未完成（false）<br>error：有错误（true）、无错误（false）<br>found：找到（true）、未找到（false）<br>success或者ok：操作成功（true）、操作失败（false）  </li>\n<li>标识全局变量：在全局变量名之前加上g<em>前缀<br>标识成员变量：可以用m</em>前缀<br>标识类型声明：t<em>前缀<br>标识枚举类型：全部用大写，或者为类型名增加e</em>或E<em>前缀，同时为该类型的成员名增加基于特定类型的前缀，如Color</em>  </li>\n</ul>\n</li>\n<li><p>防御式编程</p>\n</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>personal character（个人性格）  </p>\n<blockquote>\n<p>你无法提升自己的聪明程度，但性格在一定程度上能够改进。事实证明，个人性格对于造就出程序员高手更具有决定性意义。  </p>\n<p>高智商与优秀程序员之间并无太密切的联系，如何专注你的聪明才智，比你有多聪明更重要   </p>\n</blockquote>\n<ul>\n<li>人的个性对其编程能力有直接的影响</li>\n<li>最有关系的性格为：谦虚、求知欲、诚实、创造性和纪律，以及高明的偷懒</li>\n<li>程序员高手的性格与天分无关，而任何事情都与个人发展相关</li>\n<li>出乎意料的是，小聪明、经验、坚持和疯狂既有助也有害</li>\n<li>很多程序员不愿主动吸收新知识和技术，只依靠工作时间偶尔接触新的信息。如果你能抽出少量时间阅读和学习编程知识，要不了多久就能鹤立鸡群</li>\n<li>好性格和培养正确的习惯关系甚大。要成为杰出的程序员，先要养成良好习惯，其他自然水到渠成</li>\n</ul>\n</li>\n<li><p>自说明代码</p>\n<blockquote>\n<p>编码是要把维护你程序的人，想象成知道你住址的有严重暴力倾向的精神病人  </p>\n<p>写注释能让你更好的思考代码在干什么。如果注释困难，要么是因为代码差劲，要么是没有理解透彻代码。不管怎样，都得对代码再花时间。所以写注释并非再做无用功，而是指出你该做的工作。 </p>\n</blockquote>\n</li>\n<li><p>变量名的力量</p>\n<ul>\n<li>变量名的平均长度在10到16个字符，调试程序所需花费的力气是最小的。（8到20个字符也几乎同样容易调试）</li>\n<li>计算结果的变量：总额、平均值、最大值等等，使用类似于Total、Sum、Average、Max、Min、Record、String、Pointer等限定词。请记住把限定词加到名字的最后。（例如：总收入-revenueRotal、平均支出-expenseAverage）</li>\n<li>典型的布尔变量命名：<br>done：完成（true）、未完成（false）<br>error：有错误（true）、无错误（false）<br>found：找到（true）、未找到（false）<br>success或者ok：操作成功（true）、操作失败（false）  </li>\n<li>标识全局变量：在全局变量名之前加上g<em>前缀<br>标识成员变量：可以用m</em>前缀<br>标识类型声明：t<em>前缀<br>标识枚举类型：全部用大写，或者为类型名增加e</em>或E<em>前缀，同时为该类型的成员名增加基于特定类型的前缀，如Color</em>  </li>\n</ul>\n</li>\n<li><p>防御式编程</p>\n</li>\n<li></li>\n</ol>\n"},{"title":"产品经理培训","date":"2017-06-08T03:50:16.000Z","_content":" 今天听了一节游戏行业产品课，虽然不怎么懂，但是有些东西记下来，方便以后自己学习。  \n \n> S级别产品：  \n 核心竞争力：发明有效套路的能力   \n 有效套路 = 洞察力 + 逻辑能力 + 同理心（快速切换角色）+ 自我否定  \n \n> A级别产品:  \n 核心竞争力：逻辑思维能力 + 审美  \n 审美：对人性本能的认知深度、对美的事物敏感度  \n \n 做什么样的产品？  \n 特定人群爱不释手，其他人不反感的产品。（例如：微信朋友圈，可以看到好友分享，避免陌生人打广告）  \n \n 过程：目标、规则、自愿、反馈  \n \n > 好看：决定新用户的耐心  \n > 好用：决定用户的学习成本  \n > 有意思：决定用户的保留率\n \n \n 推荐书：  \n 《杰克.韦尔奇自传》  \n 《游戏改变世界》  \n 《java与模式》  \n 《人类群星闪耀时》  \n \n","source":"_posts/产品经理培训.md","raw":"---\ntitle: 产品经理培训\ndate: 2017-06-08 11:50:16\ntags: 培训\n---\n 今天听了一节游戏行业产品课，虽然不怎么懂，但是有些东西记下来，方便以后自己学习。  \n \n> S级别产品：  \n 核心竞争力：发明有效套路的能力   \n 有效套路 = 洞察力 + 逻辑能力 + 同理心（快速切换角色）+ 自我否定  \n \n> A级别产品:  \n 核心竞争力：逻辑思维能力 + 审美  \n 审美：对人性本能的认知深度、对美的事物敏感度  \n \n 做什么样的产品？  \n 特定人群爱不释手，其他人不反感的产品。（例如：微信朋友圈，可以看到好友分享，避免陌生人打广告）  \n \n 过程：目标、规则、自愿、反馈  \n \n > 好看：决定新用户的耐心  \n > 好用：决定用户的学习成本  \n > 有意思：决定用户的保留率\n \n \n 推荐书：  \n 《杰克.韦尔奇自传》  \n 《游戏改变世界》  \n 《java与模式》  \n 《人类群星闪耀时》  \n \n","slug":"产品经理培训","published":1,"updated":"2018-08-29T10:14:44.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zt001vxcnobnn6k4kj","content":"<p> 今天听了一节游戏行业产品课，虽然不怎么懂，但是有些东西记下来，方便以后自己学习。  </p>\n<blockquote>\n<p>S级别产品：<br> 核心竞争力：发明有效套路的能力<br> 有效套路 = 洞察力 + 逻辑能力 + 同理心（快速切换角色）+ 自我否定  </p>\n<p>A级别产品:<br> 核心竞争力：逻辑思维能力 + 审美<br> 审美：对人性本能的认知深度、对美的事物敏感度  </p>\n</blockquote>\n<p> 做什么样的产品？<br> 特定人群爱不释手，其他人不反感的产品。（例如：微信朋友圈，可以看到好友分享，避免陌生人打广告）  </p>\n<p> 过程：目标、规则、自愿、反馈  </p>\n<blockquote>\n<p>好看：决定新用户的耐心<br>好用：决定用户的学习成本<br>有意思：决定用户的保留率</p>\n</blockquote>\n<p> 推荐书：<br> 《杰克.韦尔奇自传》<br> 《游戏改变世界》<br> 《java与模式》<br> 《人类群星闪耀时》  </p>\n","site":{"data":{}},"excerpt":"","more":"<p> 今天听了一节游戏行业产品课，虽然不怎么懂，但是有些东西记下来，方便以后自己学习。  </p>\n<blockquote>\n<p>S级别产品：<br> 核心竞争力：发明有效套路的能力<br> 有效套路 = 洞察力 + 逻辑能力 + 同理心（快速切换角色）+ 自我否定  </p>\n<p>A级别产品:<br> 核心竞争力：逻辑思维能力 + 审美<br> 审美：对人性本能的认知深度、对美的事物敏感度  </p>\n</blockquote>\n<p> 做什么样的产品？<br> 特定人群爱不释手，其他人不反感的产品。（例如：微信朋友圈，可以看到好友分享，避免陌生人打广告）  </p>\n<p> 过程：目标、规则、自愿、反馈  </p>\n<blockquote>\n<p>好看：决定新用户的耐心<br>好用：决定用户的学习成本<br>有意思：决定用户的保留率</p>\n</blockquote>\n<p> 推荐书：<br> 《杰克.韦尔奇自传》<br> 《游戏改变世界》<br> 《java与模式》<br> 《人类群星闪耀时》  </p>\n"},{"title":"js使用原型方法的好处","date":"2017-09-20T12:58:52.000Z","_content":"\n好处：使用原型方法可以节约内存和降低实例化的开销。最好在声明公共方法时使用基于原型的方法。\n\n例如：  \n//声明一个类表示书  \nfunction Book(title, pages, isBn) {  \n\tthis.title = title;\n\tthis.pages = pages;  \n\tthis.isBn = isBn;  \n}  \n\n//访问和修改对象的属性  \nconsole.log(book.title); //输出书名  \nbook.title = \"new book\"; //修改书名  \nconsole.log(book.title); //输出新书名  \n\n//类可以包含函数。可以声明和使用函数。  \nBook.prototype.pringTitle = function() {  \nconsole.log(this.title);    \n}  \nbook.printTitle();  \n\n在这个例子里，pringTitle方法只会创建一次，在Book类的所有实例中共享。如果是在定义类的内部结构时声明，每个类的实例都会有一份该方法的副本。  \n\n生成私有方法时用在类定义时内部声明的方法，这样其他实例不会访问到这个方法。（这些属性和方法为各个实例单独拥有）  \n\n尽量使用基于原型的方法定义更好些。\n","source":"_posts/使用原型方法的好处.md","raw":"---\ntitle: js使用原型方法的好处\ndate: 2017-09-20 20:58:52\ntags: javascript\n---\n\n好处：使用原型方法可以节约内存和降低实例化的开销。最好在声明公共方法时使用基于原型的方法。\n\n例如：  \n//声明一个类表示书  \nfunction Book(title, pages, isBn) {  \n\tthis.title = title;\n\tthis.pages = pages;  \n\tthis.isBn = isBn;  \n}  \n\n//访问和修改对象的属性  \nconsole.log(book.title); //输出书名  \nbook.title = \"new book\"; //修改书名  \nconsole.log(book.title); //输出新书名  \n\n//类可以包含函数。可以声明和使用函数。  \nBook.prototype.pringTitle = function() {  \nconsole.log(this.title);    \n}  \nbook.printTitle();  \n\n在这个例子里，pringTitle方法只会创建一次，在Book类的所有实例中共享。如果是在定义类的内部结构时声明，每个类的实例都会有一份该方法的副本。  \n\n生成私有方法时用在类定义时内部声明的方法，这样其他实例不会访问到这个方法。（这些属性和方法为各个实例单独拥有）  \n\n尽量使用基于原型的方法定义更好些。\n","slug":"使用原型方法的好处","published":1,"updated":"2018-08-29T10:14:44.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zv001yxcno1g24n1cg","content":"<p>好处：使用原型方法可以节约内存和降低实例化的开销。最好在声明公共方法时使用基于原型的方法。</p>\n<p>例如：<br>//声明一个类表示书<br>function Book(title, pages, isBn) {<br>    this.title = title;<br>    this.pages = pages;<br>    this.isBn = isBn;<br>}  </p>\n<p>//访问和修改对象的属性<br>console.log(book.title); //输出书名<br>book.title = “new book”; //修改书名<br>console.log(book.title); //输出新书名  </p>\n<p>//类可以包含函数。可以声明和使用函数。<br>Book.prototype.pringTitle = function() {<br>console.log(this.title);<br>}<br>book.printTitle();  </p>\n<p>在这个例子里，pringTitle方法只会创建一次，在Book类的所有实例中共享。如果是在定义类的内部结构时声明，每个类的实例都会有一份该方法的副本。  </p>\n<p>生成私有方法时用在类定义时内部声明的方法，这样其他实例不会访问到这个方法。（这些属性和方法为各个实例单独拥有）  </p>\n<p>尽量使用基于原型的方法定义更好些。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>好处：使用原型方法可以节约内存和降低实例化的开销。最好在声明公共方法时使用基于原型的方法。</p>\n<p>例如：<br>//声明一个类表示书<br>function Book(title, pages, isBn) {<br>    this.title = title;<br>    this.pages = pages;<br>    this.isBn = isBn;<br>}  </p>\n<p>//访问和修改对象的属性<br>console.log(book.title); //输出书名<br>book.title = “new book”; //修改书名<br>console.log(book.title); //输出新书名  </p>\n<p>//类可以包含函数。可以声明和使用函数。<br>Book.prototype.pringTitle = function() {<br>console.log(this.title);<br>}<br>book.printTitle();  </p>\n<p>在这个例子里，pringTitle方法只会创建一次，在Book类的所有实例中共享。如果是在定义类的内部结构时声明，每个类的实例都会有一份该方法的副本。  </p>\n<p>生成私有方法时用在类定义时内部声明的方法，这样其他实例不会访问到这个方法。（这些属性和方法为各个实例单独拥有）  </p>\n<p>尽量使用基于原型的方法定义更好些。</p>\n"},{"title":"动感单车","date":"2017-07-25T06:23:31.000Z","_content":"动感单车：  \n\n对这个项目好感由来已久。  \n\n17年4月初，和大学室友们去母校。在抚州凤凰城吃完饭，顺便去附近健身房瞎溜达，正好在动感单车教室外面看到别人练习，一群阳光热血的青年，玩的很嗨，觉得这才是我们该有的生活。  \n\n所以我第一次去健身房就是动感单车。  \n\n可惜我完全没有体验出想象中阳光与活力，可能是平常运动量太少，这种剧烈运动，根本就体力不支。  \n\n一进教室就开始练习各种骑车姿势，对我这么个不爱骑车的人，简直就是摧残，站着骑，坐着骑，不停的加阻力，一节课下来，觉得我活着回去已经很不错了，屁股疼腿疼了一周。  \n\n就此一次，再没去练过。","source":"_posts/动感单车.md","raw":"---\ntitle: 动感单车\ndate: 2017-07-25 14:23:31\ntags: 运动\n---\n动感单车：  \n\n对这个项目好感由来已久。  \n\n17年4月初，和大学室友们去母校。在抚州凤凰城吃完饭，顺便去附近健身房瞎溜达，正好在动感单车教室外面看到别人练习，一群阳光热血的青年，玩的很嗨，觉得这才是我们该有的生活。  \n\n所以我第一次去健身房就是动感单车。  \n\n可惜我完全没有体验出想象中阳光与活力，可能是平常运动量太少，这种剧烈运动，根本就体力不支。  \n\n一进教室就开始练习各种骑车姿势，对我这么个不爱骑车的人，简直就是摧残，站着骑，坐着骑，不停的加阻力，一节课下来，觉得我活着回去已经很不错了，屁股疼腿疼了一周。  \n\n就此一次，再没去练过。","slug":"动感单车","published":1,"updated":"2018-08-29T10:14:44.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zw0020xcno3y78l0vq","content":"<p>动感单车：  </p>\n<p>对这个项目好感由来已久。  </p>\n<p>17年4月初，和大学室友们去母校。在抚州凤凰城吃完饭，顺便去附近健身房瞎溜达，正好在动感单车教室外面看到别人练习，一群阳光热血的青年，玩的很嗨，觉得这才是我们该有的生活。  </p>\n<p>所以我第一次去健身房就是动感单车。  </p>\n<p>可惜我完全没有体验出想象中阳光与活力，可能是平常运动量太少，这种剧烈运动，根本就体力不支。  </p>\n<p>一进教室就开始练习各种骑车姿势，对我这么个不爱骑车的人，简直就是摧残，站着骑，坐着骑，不停的加阻力，一节课下来，觉得我活着回去已经很不错了，屁股疼腿疼了一周。  </p>\n<p>就此一次，再没去练过。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>动感单车：  </p>\n<p>对这个项目好感由来已久。  </p>\n<p>17年4月初，和大学室友们去母校。在抚州凤凰城吃完饭，顺便去附近健身房瞎溜达，正好在动感单车教室外面看到别人练习，一群阳光热血的青年，玩的很嗨，觉得这才是我们该有的生活。  </p>\n<p>所以我第一次去健身房就是动感单车。  </p>\n<p>可惜我完全没有体验出想象中阳光与活力，可能是平常运动量太少，这种剧烈运动，根本就体力不支。  </p>\n<p>一进教室就开始练习各种骑车姿势，对我这么个不爱骑车的人，简直就是摧残，站着骑，坐着骑，不停的加阻力，一节课下来，觉得我活着回去已经很不错了，屁股疼腿疼了一周。  </p>\n<p>就此一次，再没去练过。</p>\n"},{"title":"去健身","date":"2017-06-22T14:33:16.000Z","_content":"\n想去办张健身卡，这个想法反反复复的出现了好多次。    \n\n主要是觉得下班的生活过的太枯燥，又怕自己坚持不下去，而且健身卡比较贵，就一拖再拖。\n\n昨天下班回家，在地铁站门口有人发健身房传单，看了一下，我又想去办健身卡了。  \n\n想找个人一起去健身，问了很多同事，也问了很多朋友，没有人愿意去，大家说的理由都一样，觉得自己坚持不下来。  \n\n思来想去，何必这么委屈自己，想做的事拖拖拉拉，一次次放弃。 \n\n对我这么个周末不睡懒觉，不看电视剧的人来说，窝在家里周末的时间过得很长，再加上室友喜欢睡懒觉，我也就只能在家看看手机看看书了。  \n\n不如去健身，学游泳，学动感单车，学瑜伽，学舞蹈，说不定还能遇到志同道合的朋友，这么一想，我终于还是冒着大雨去把健身卡给办了。","source":"_posts/去健身.md","raw":"---\ntitle: 去健身\ndate: 2017-06-22 22:33:16\ntags: 运动\n---\n\n想去办张健身卡，这个想法反反复复的出现了好多次。    \n\n主要是觉得下班的生活过的太枯燥，又怕自己坚持不下去，而且健身卡比较贵，就一拖再拖。\n\n昨天下班回家，在地铁站门口有人发健身房传单，看了一下，我又想去办健身卡了。  \n\n想找个人一起去健身，问了很多同事，也问了很多朋友，没有人愿意去，大家说的理由都一样，觉得自己坚持不下来。  \n\n思来想去，何必这么委屈自己，想做的事拖拖拉拉，一次次放弃。 \n\n对我这么个周末不睡懒觉，不看电视剧的人来说，窝在家里周末的时间过得很长，再加上室友喜欢睡懒觉，我也就只能在家看看手机看看书了。  \n\n不如去健身，学游泳，学动感单车，学瑜伽，学舞蹈，说不定还能遇到志同道合的朋友，这么一想，我终于还是冒着大雨去把健身卡给办了。","slug":"去健身","published":1,"updated":"2018-08-29T10:14:44.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zx0022xcnosierzm6y","content":"<p>想去办张健身卡，这个想法反反复复的出现了好多次。    </p>\n<p>主要是觉得下班的生活过的太枯燥，又怕自己坚持不下去，而且健身卡比较贵，就一拖再拖。</p>\n<p>昨天下班回家，在地铁站门口有人发健身房传单，看了一下，我又想去办健身卡了。  </p>\n<p>想找个人一起去健身，问了很多同事，也问了很多朋友，没有人愿意去，大家说的理由都一样，觉得自己坚持不下来。  </p>\n<p>思来想去，何必这么委屈自己，想做的事拖拖拉拉，一次次放弃。 </p>\n<p>对我这么个周末不睡懒觉，不看电视剧的人来说，窝在家里周末的时间过得很长，再加上室友喜欢睡懒觉，我也就只能在家看看手机看看书了。  </p>\n<p>不如去健身，学游泳，学动感单车，学瑜伽，学舞蹈，说不定还能遇到志同道合的朋友，这么一想，我终于还是冒着大雨去把健身卡给办了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>想去办张健身卡，这个想法反反复复的出现了好多次。    </p>\n<p>主要是觉得下班的生活过的太枯燥，又怕自己坚持不下去，而且健身卡比较贵，就一拖再拖。</p>\n<p>昨天下班回家，在地铁站门口有人发健身房传单，看了一下，我又想去办健身卡了。  </p>\n<p>想找个人一起去健身，问了很多同事，也问了很多朋友，没有人愿意去，大家说的理由都一样，觉得自己坚持不下来。  </p>\n<p>思来想去，何必这么委屈自己，想做的事拖拖拉拉，一次次放弃。 </p>\n<p>对我这么个周末不睡懒觉，不看电视剧的人来说，窝在家里周末的时间过得很长，再加上室友喜欢睡懒觉，我也就只能在家看看手机看看书了。  </p>\n<p>不如去健身，学游泳，学动感单车，学瑜伽，学舞蹈，说不定还能遇到志同道合的朋友，这么一想，我终于还是冒着大雨去把健身卡给办了。</p>\n"},{"title":"提升个人卓越领导力","date":"2017-07-29T11:00:49.000Z","_content":"\n公司组织高效人士培训（周六 9：00--16：30）  \n\n1. 基本原则  \n  * 由内而外发挥领导力，从个人到组织  \n  * 领导力四层面：  \n  个人层面做到值得信赖  \n  人际层面做到相互信任  \n  管理层面做到授能自主（授能不授责）  \n  组织层面做到协调一致  \n  * 个人领导力是指个人在组织和社会中的影响力。  \n   个人领导力的主要特征：源于内在的、基于原则的、自我选择的、影响他人的\n   \n  我的感受： 看了个白宫工作人员工作的视频，印象比较深刻的是厨师说的一句话，我的任务是把每道菜做好，让用餐者开心享用。盛大的晚宴，洗碗工依然知道自己的职责是洗碗。  \n  了解清楚自己的坐标，太重要了，追求的东西越多，越忘记最主要的事是什么。      \n  \n2. 自我选择  \n\t做个主动负责的人：把握选择的自由、为自己的行为负责、把重点放在影响范围上  \n\t\n\t我的感受： 只要思想不滑坡，办法总比困难多。任何时候，保持积极乐观的心态，多集中注意力于自己能做的事情上，部位自己无能为力的事情而烦恼，谢坤山手脚没了都能画画，我比他幸运太多了。  \n\t\n3. 自我修炼  \n  注重自己的品格修炼和习惯培养  \n  4L理论：to live、to love、to learn、to leave a legacy(留下传承)\n          \n4. 自我管理  \n   要事第一  \n   如何使用自己的时间  \n5. 互尊互赢\n6. 有效沟通\n7. 协同增效\n\n","source":"_posts/提升个人卓越领导力.md","raw":"---\ntitle: 提升个人卓越领导力\ndate: 2017-07-29 19:00:49\ntags: 培训\n---\n\n公司组织高效人士培训（周六 9：00--16：30）  \n\n1. 基本原则  \n  * 由内而外发挥领导力，从个人到组织  \n  * 领导力四层面：  \n  个人层面做到值得信赖  \n  人际层面做到相互信任  \n  管理层面做到授能自主（授能不授责）  \n  组织层面做到协调一致  \n  * 个人领导力是指个人在组织和社会中的影响力。  \n   个人领导力的主要特征：源于内在的、基于原则的、自我选择的、影响他人的\n   \n  我的感受： 看了个白宫工作人员工作的视频，印象比较深刻的是厨师说的一句话，我的任务是把每道菜做好，让用餐者开心享用。盛大的晚宴，洗碗工依然知道自己的职责是洗碗。  \n  了解清楚自己的坐标，太重要了，追求的东西越多，越忘记最主要的事是什么。      \n  \n2. 自我选择  \n\t做个主动负责的人：把握选择的自由、为自己的行为负责、把重点放在影响范围上  \n\t\n\t我的感受： 只要思想不滑坡，办法总比困难多。任何时候，保持积极乐观的心态，多集中注意力于自己能做的事情上，部位自己无能为力的事情而烦恼，谢坤山手脚没了都能画画，我比他幸运太多了。  \n\t\n3. 自我修炼  \n  注重自己的品格修炼和习惯培养  \n  4L理论：to live、to love、to learn、to leave a legacy(留下传承)\n          \n4. 自我管理  \n   要事第一  \n   如何使用自己的时间  \n5. 互尊互赢\n6. 有效沟通\n7. 协同增效\n\n","slug":"提升个人卓越领导力","published":1,"updated":"2018-08-29T10:14:44.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zz0025xcnozse0mfhi","content":"<p>公司组织高效人士培训（周六 9：00–16：30）  </p>\n<ol>\n<li><p>基本原则  </p>\n<ul>\n<li>由内而外发挥领导力，从个人到组织  </li>\n<li>领导力四层面：<br>个人层面做到值得信赖<br>人际层面做到相互信任<br>管理层面做到授能自主（授能不授责）<br>组织层面做到协调一致  </li>\n<li>个人领导力是指个人在组织和社会中的影响力。<br>个人领导力的主要特征：源于内在的、基于原则的、自我选择的、影响他人的</li>\n</ul>\n<p>我的感受： 看了个白宫工作人员工作的视频，印象比较深刻的是厨师说的一句话，我的任务是把每道菜做好，让用餐者开心享用。盛大的晚宴，洗碗工依然知道自己的职责是洗碗。<br>了解清楚自己的坐标，太重要了，追求的东西越多，越忘记最主要的事是什么。      </p>\n</li>\n<li><p>自我选择<br> 做个主动负责的人：把握选择的自由、为自己的行为负责、把重点放在影响范围上  </p>\n<p> 我的感受： 只要思想不滑坡，办法总比困难多。任何时候，保持积极乐观的心态，多集中注意力于自己能做的事情上，部位自己无能为力的事情而烦恼，谢坤山手脚没了都能画画，我比他幸运太多了。  </p>\n</li>\n<li><p>自我修炼<br>注重自己的品格修炼和习惯培养<br>4L理论：to live、to love、to learn、to leave a legacy(留下传承)</p>\n</li>\n<li><p>自我管理<br>要事第一<br>如何使用自己的时间  </p>\n</li>\n<li>互尊互赢</li>\n<li>有效沟通</li>\n<li>协同增效</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>公司组织高效人士培训（周六 9：00–16：30）  </p>\n<ol>\n<li><p>基本原则  </p>\n<ul>\n<li>由内而外发挥领导力，从个人到组织  </li>\n<li>领导力四层面：<br>个人层面做到值得信赖<br>人际层面做到相互信任<br>管理层面做到授能自主（授能不授责）<br>组织层面做到协调一致  </li>\n<li>个人领导力是指个人在组织和社会中的影响力。<br>个人领导力的主要特征：源于内在的、基于原则的、自我选择的、影响他人的</li>\n</ul>\n<p>我的感受： 看了个白宫工作人员工作的视频，印象比较深刻的是厨师说的一句话，我的任务是把每道菜做好，让用餐者开心享用。盛大的晚宴，洗碗工依然知道自己的职责是洗碗。<br>了解清楚自己的坐标，太重要了，追求的东西越多，越忘记最主要的事是什么。      </p>\n</li>\n<li><p>自我选择<br> 做个主动负责的人：把握选择的自由、为自己的行为负责、把重点放在影响范围上  </p>\n<p> 我的感受： 只要思想不滑坡，办法总比困难多。任何时候，保持积极乐观的心态，多集中注意力于自己能做的事情上，部位自己无能为力的事情而烦恼，谢坤山手脚没了都能画画，我比他幸运太多了。  </p>\n</li>\n<li><p>自我修炼<br>注重自己的品格修炼和习惯培养<br>4L理论：to live、to love、to learn、to leave a legacy(留下传承)</p>\n</li>\n<li><p>自我管理<br>要事第一<br>如何使用自己的时间  </p>\n</li>\n<li>互尊互赢</li>\n<li>有效沟通</li>\n<li>协同增效</li>\n</ol>\n"},{"title":"浏览器兼容总结","date":"2017-06-06T13:41:46.000Z","_content":"\n1. ul元素有缩进样式：  \n在Firefox浏览器中，ul元素的缩进是通过padding来实现的  \n在IE浏览器中，ul元素的缩进是通过margin来实现的  \n\n2. button元素：  \n在IE、chrome、FireFox浏览器中的默认样式不同。    \n解决方法：去除元素在浏览器的默认样式（CSS reset）,使得HTML元素具有相同的初始化样式，然后再对元素进行统一定义，就可以让页面在不同浏览器中产生相同的效果。  \n注意： CSS reset代码必须在其他SS之前引入（因为浏览器对CSS代码是从上到下来解析的），只有吧CSS reset放在前面，才有意义。\n\n3. \"border:none\"  \n\"border:none\"  对IE6和IE7按钮的边框无效，在其他浏览器中会去掉按钮的边框  \n\n4. \"display:table-cell\"  \n可以让元素以表格单元格的形式呈现，具备td元素的特点。  \nIE8+以及其他现代浏览器都支持此属性，不过IE6/IE7中并不支持，考虑到IE6/IE7使用率越来越低，我们还是果断使用这一布局神器，可以实现以下3种功能    \n * 图片垂直居中于元素\n * 等高布局\n * 自动平均划分元素，并且在同一行显示\n\n5. ","source":"_posts/浏览器兼容总结.md","raw":"---\ntitle: 浏览器兼容总结\ndate: 2017-06-06 21:41:46\ntags: [html,总结]\n---\n\n1. ul元素有缩进样式：  \n在Firefox浏览器中，ul元素的缩进是通过padding来实现的  \n在IE浏览器中，ul元素的缩进是通过margin来实现的  \n\n2. button元素：  \n在IE、chrome、FireFox浏览器中的默认样式不同。    \n解决方法：去除元素在浏览器的默认样式（CSS reset）,使得HTML元素具有相同的初始化样式，然后再对元素进行统一定义，就可以让页面在不同浏览器中产生相同的效果。  \n注意： CSS reset代码必须在其他SS之前引入（因为浏览器对CSS代码是从上到下来解析的），只有吧CSS reset放在前面，才有意义。\n\n3. \"border:none\"  \n\"border:none\"  对IE6和IE7按钮的边框无效，在其他浏览器中会去掉按钮的边框  \n\n4. \"display:table-cell\"  \n可以让元素以表格单元格的形式呈现，具备td元素的特点。  \nIE8+以及其他现代浏览器都支持此属性，不过IE6/IE7中并不支持，考虑到IE6/IE7使用率越来越低，我们还是果断使用这一布局神器，可以实现以下3种功能    \n * 图片垂直居中于元素\n * 等高布局\n * 自动平均划分元素，并且在同一行显示\n\n5. ","slug":"浏览器兼容总结","published":1,"updated":"2018-08-29T10:14:44.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0519zz0027xcno1wnojgxv","content":"<ol>\n<li><p>ul元素有缩进样式：<br>在Firefox浏览器中，ul元素的缩进是通过padding来实现的<br>在IE浏览器中，ul元素的缩进是通过margin来实现的  </p>\n</li>\n<li><p>button元素：<br>在IE、chrome、FireFox浏览器中的默认样式不同。<br>解决方法：去除元素在浏览器的默认样式（CSS reset）,使得HTML元素具有相同的初始化样式，然后再对元素进行统一定义，就可以让页面在不同浏览器中产生相同的效果。<br>注意： CSS reset代码必须在其他SS之前引入（因为浏览器对CSS代码是从上到下来解析的），只有吧CSS reset放在前面，才有意义。</p>\n</li>\n<li><p>“border:none”<br>“border:none”  对IE6和IE7按钮的边框无效，在其他浏览器中会去掉按钮的边框  </p>\n</li>\n<li><p>“display:table-cell”<br>可以让元素以表格单元格的形式呈现，具备td元素的特点。<br>IE8+以及其他现代浏览器都支持此属性，不过IE6/IE7中并不支持，考虑到IE6/IE7使用率越来越低，我们还是果断使用这一布局神器，可以实现以下3种功能    </p>\n<ul>\n<li>图片垂直居中于元素</li>\n<li>等高布局</li>\n<li>自动平均划分元素，并且在同一行显示</li>\n</ul>\n</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>ul元素有缩进样式：<br>在Firefox浏览器中，ul元素的缩进是通过padding来实现的<br>在IE浏览器中，ul元素的缩进是通过margin来实现的  </p>\n</li>\n<li><p>button元素：<br>在IE、chrome、FireFox浏览器中的默认样式不同。<br>解决方法：去除元素在浏览器的默认样式（CSS reset）,使得HTML元素具有相同的初始化样式，然后再对元素进行统一定义，就可以让页面在不同浏览器中产生相同的效果。<br>注意： CSS reset代码必须在其他SS之前引入（因为浏览器对CSS代码是从上到下来解析的），只有吧CSS reset放在前面，才有意义。</p>\n</li>\n<li><p>“border:none”<br>“border:none”  对IE6和IE7按钮的边框无效，在其他浏览器中会去掉按钮的边框  </p>\n</li>\n<li><p>“display:table-cell”<br>可以让元素以表格单元格的形式呈现，具备td元素的特点。<br>IE8+以及其他现代浏览器都支持此属性，不过IE6/IE7中并不支持，考虑到IE6/IE7使用率越来越低，我们还是果断使用这一布局神器，可以实现以下3种功能    </p>\n<ul>\n<li>图片垂直居中于元素</li>\n<li>等高布局</li>\n<li>自动平均划分元素，并且在同一行显示</li>\n</ul>\n</li>\n<li></li>\n</ol>\n"},{"title":"瑜伽","date":"2017-07-25T06:25:44.000Z","_content":"\n瑜伽： \n\n想学瑜伽是从读了《遇见未知的自己》开始的。  \n\n自己在家练了几天才去的瑜伽教室。  \n\n第一次去教室练习，感觉自己整个人都硬邦邦的，全都是拉伸之类的动作，感觉老胳膊老腿度随时都有可能折断。  \n\n与想象中的女神天壤之别。","source":"_posts/瑜伽.md","raw":"---\ntitle: 瑜伽\ndate: 2017-07-25 14:25:44\ntags: 运动\n---\n\n瑜伽： \n\n想学瑜伽是从读了《遇见未知的自己》开始的。  \n\n自己在家练了几天才去的瑜伽教室。  \n\n第一次去教室练习，感觉自己整个人都硬邦邦的，全都是拉伸之类的动作，感觉老胳膊老腿度随时都有可能折断。  \n\n与想象中的女神天壤之别。","slug":"瑜伽","published":1,"updated":"2018-08-29T10:14:44.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn051a01002axcnop23vjd7y","content":"<p>瑜伽： </p>\n<p>想学瑜伽是从读了《遇见未知的自己》开始的。  </p>\n<p>自己在家练了几天才去的瑜伽教室。  </p>\n<p>第一次去教室练习，感觉自己整个人都硬邦邦的，全都是拉伸之类的动作，感觉老胳膊老腿度随时都有可能折断。  </p>\n<p>与想象中的女神天壤之别。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>瑜伽： </p>\n<p>想学瑜伽是从读了《遇见未知的自己》开始的。  </p>\n<p>自己在家练了几天才去的瑜伽教室。  </p>\n<p>第一次去教室练习，感觉自己整个人都硬邦邦的，全都是拉伸之类的动作，感觉老胳膊老腿度随时都有可能折断。  </p>\n<p>与想象中的女神天壤之别。</p>\n"},{"title":"编程基础知识","date":"2017-07-24T13:03:01.000Z","_content":"\n1. MVC设计模式  \n * Model(模型)：用于处理应用程序数据逻辑的部分。\n * View(视图)：应用程序中处理数据显示的部分。\n * Controller(控制器)：负责转发请求，对请求进行处理。是应用程序中处理用户交互的部分。\n","source":"_posts/编程基础知识.md","raw":"---\ntitle: 编程基础知识\ndate: 2017-07-24 21:03:01\ntags: 编程\n---\n\n1. MVC设计模式  \n * Model(模型)：用于处理应用程序数据逻辑的部分。\n * View(视图)：应用程序中处理数据显示的部分。\n * Controller(控制器)：负责转发请求，对请求进行处理。是应用程序中处理用户交互的部分。\n","slug":"编程基础知识","published":1,"updated":"2018-08-29T10:14:44.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn051a02002cxcno6znl2hw4","content":"<ol>\n<li>MVC设计模式  <ul>\n<li>Model(模型)：用于处理应用程序数据逻辑的部分。</li>\n<li>View(视图)：应用程序中处理数据显示的部分。</li>\n<li>Controller(控制器)：负责转发请求，对请求进行处理。是应用程序中处理用户交互的部分。</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>MVC设计模式  <ul>\n<li>Model(模型)：用于处理应用程序数据逻辑的部分。</li>\n<li>View(视图)：应用程序中处理数据显示的部分。</li>\n<li>Controller(控制器)：负责转发请求，对请求进行处理。是应用程序中处理用户交互的部分。</li>\n</ul>\n</li>\n</ol>\n"},{"title":"肚皮舞","date":"2017-07-25T06:26:47.000Z","_content":"肚皮舞：  \n\n对肚皮舞还是挺感兴趣的。\n\n心目中的肚皮舞就是抖肚子，想着肚子最近长得肉肉挺多的，开心的时候抖抖，不开心的时候也可以抖抖，既减肥又性感，最主要是想着年会的时候去表演一个节目~   \n\n兴冲冲的去上第一节课，教练胸大肚子上略微有肉，跳起来感觉全身骨头都在抖。  \n\n第一次上课前半节课练习抖胸，右上左下抖法，可是胸不听话啊，再加上我穿的保守的运动衣，就更加看不出来了，越抖越想笑，还有点不好意思。  \n\n下半节课练习抖腿抖肚子，8字形方向抖，就觉得更加想笑了，腿抖了就划不了8字，划了8字就抖不了腿，严重感觉自己肢体不协调。  \n\n一节课就这样笑过去了。","source":"_posts/肚皮舞.md","raw":"---\ntitle: 肚皮舞\ndate: 2017-07-25 14:26:47\ntags: 运动\n---\n肚皮舞：  \n\n对肚皮舞还是挺感兴趣的。\n\n心目中的肚皮舞就是抖肚子，想着肚子最近长得肉肉挺多的，开心的时候抖抖，不开心的时候也可以抖抖，既减肥又性感，最主要是想着年会的时候去表演一个节目~   \n\n兴冲冲的去上第一节课，教练胸大肚子上略微有肉，跳起来感觉全身骨头都在抖。  \n\n第一次上课前半节课练习抖胸，右上左下抖法，可是胸不听话啊，再加上我穿的保守的运动衣，就更加看不出来了，越抖越想笑，还有点不好意思。  \n\n下半节课练习抖腿抖肚子，8字形方向抖，就觉得更加想笑了，腿抖了就划不了8字，划了8字就抖不了腿，严重感觉自己肢体不协调。  \n\n一节课就这样笑过去了。","slug":"肚皮舞","published":1,"updated":"2018-08-29T10:14:44.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn051a03002fxcnopqmjlokm","content":"<p>肚皮舞：  </p>\n<p>对肚皮舞还是挺感兴趣的。</p>\n<p>心目中的肚皮舞就是抖肚子，想着肚子最近长得肉肉挺多的，开心的时候抖抖，不开心的时候也可以抖抖，既减肥又性感，最主要是想着年会的时候去表演一个节目~   </p>\n<p>兴冲冲的去上第一节课，教练胸大肚子上略微有肉，跳起来感觉全身骨头都在抖。  </p>\n<p>第一次上课前半节课练习抖胸，右上左下抖法，可是胸不听话啊，再加上我穿的保守的运动衣，就更加看不出来了，越抖越想笑，还有点不好意思。  </p>\n<p>下半节课练习抖腿抖肚子，8字形方向抖，就觉得更加想笑了，腿抖了就划不了8字，划了8字就抖不了腿，严重感觉自己肢体不协调。  </p>\n<p>一节课就这样笑过去了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>肚皮舞：  </p>\n<p>对肚皮舞还是挺感兴趣的。</p>\n<p>心目中的肚皮舞就是抖肚子，想着肚子最近长得肉肉挺多的，开心的时候抖抖，不开心的时候也可以抖抖，既减肥又性感，最主要是想着年会的时候去表演一个节目~   </p>\n<p>兴冲冲的去上第一节课，教练胸大肚子上略微有肉，跳起来感觉全身骨头都在抖。  </p>\n<p>第一次上课前半节课练习抖胸，右上左下抖法，可是胸不听话啊，再加上我穿的保守的运动衣，就更加看不出来了，越抖越想笑，还有点不好意思。  </p>\n<p>下半节课练习抖腿抖肚子，8字形方向抖，就觉得更加想笑了，腿抖了就划不了8字，划了8字就抖不了腿，严重感觉自己肢体不协调。  </p>\n<p>一节课就这样笑过去了。</p>\n"},{"title":"面向对象编程","date":"2018-01-11T11:47:14.000Z","_content":"\n1. 类与对象的比较\n   面向对象设计的一个核心概念就是对象（object）与类（class）的区分。  \n   对象是指运行期间在程序中实际存在的具体实体（enity），  \n   而类是指在程序源码中存在的静态事物。  \n   对象是动态的，它拥有你在程序运行期间所能得到的具体的值和属性。  \n   \n","source":"_posts/面向对象编程md.md","raw":"---\ntitle: 面向对象编程\ndate: 2018-01-11 19:47:14\ntags: 编程\n---\n\n1. 类与对象的比较\n   面向对象设计的一个核心概念就是对象（object）与类（class）的区分。  \n   对象是指运行期间在程序中实际存在的具体实体（enity），  \n   而类是指在程序源码中存在的静态事物。  \n   对象是动态的，它拥有你在程序运行期间所能得到的具体的值和属性。  \n   \n","slug":"面向对象编程md","published":1,"updated":"2018-08-29T10:14:44.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn051a04002hxcnol6ypkeb1","content":"<ol>\n<li>类与对象的比较<br>面向对象设计的一个核心概念就是对象（object）与类（class）的区分。<br>对象是指运行期间在程序中实际存在的具体实体（enity），<br>而类是指在程序源码中存在的静态事物。<br>对象是动态的，它拥有你在程序运行期间所能得到的具体的值和属性。  </li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>类与对象的比较<br>面向对象设计的一个核心概念就是对象（object）与类（class）的区分。<br>对象是指运行期间在程序中实际存在的具体实体（enity），<br>而类是指在程序源码中存在的静态事物。<br>对象是动态的，它拥有你在程序运行期间所能得到的具体的值和属性。  </li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjn0519yw0007xcnoqsmm2r0k","tag_id":"cjn0519yt0004xcnotxcz5a30","_id":"cjn0519yz000axcno29c4nfiu"},{"post_id":"cjn0519yl0000xcnovfiifoof","tag_id":"cjn0519yt0004xcnotxcz5a30","_id":"cjn0519z0000cxcnoy7oshuzu"},{"post_id":"cjn0519yx0008xcnolhbnvuum","tag_id":"cjn0519yt0004xcnotxcz5a30","_id":"cjn0519z2000fxcno237tvwv6"},{"post_id":"cjn0519yz000bxcno5mugeh9m","tag_id":"cjn0519yt0004xcnotxcz5a30","_id":"cjn0519z3000hxcno1gf27e7f"},{"post_id":"cjn0519z0000dxcnonkl4npnw","tag_id":"cjn0519yt0004xcnotxcz5a30","_id":"cjn0519z4000kxcnom3exhsmc"},{"post_id":"cjn0519yr0002xcnovnsumvx4","tag_id":"cjn0519yy0009xcno5r32q2w4","_id":"cjn0519z6000mxcno2s5iekeu"},{"post_id":"cjn0519yr0002xcnovnsumvx4","tag_id":"cjn0519z1000excnol3xd7udv","_id":"cjn0519z7000pxcno7xzbx8um"},{"post_id":"cjn0519z3000ixcno7vb6d74v","tag_id":"cjn0519z1000excnol3xd7udv","_id":"cjn0519z8000rxcnojvrzueud"},{"post_id":"cjn0519z3000ixcno7vb6d74v","tag_id":"cjn0519yy0009xcno5r32q2w4","_id":"cjn0519z9000txcnoqjsw6aw4"},{"post_id":"cjn0519z5000lxcnov87w09aw","tag_id":"cjn0519yt0004xcnotxcz5a30","_id":"cjn0519za000wxcno1dkkz17d"},{"post_id":"cjn0519yv0005xcnoohl1deqh","tag_id":"cjn0519yt0004xcnotxcz5a30","_id":"cjn0519zb000yxcno5ncw7cfg"},{"post_id":"cjn0519z6000nxcno3da419gs","tag_id":"cjn0519yy0009xcno5r32q2w4","_id":"cjn0519zc0010xcnokywsdnfx"},{"post_id":"cjn0519z7000qxcno75tw4owt","tag_id":"cjn0519yy0009xcno5r32q2w4","_id":"cjn0519ze0013xcno3pad45zo"},{"post_id":"cjn0519z2000gxcnotov78mwg","tag_id":"cjn0519z7000oxcnootcagj7y","_id":"cjn0519zf0015xcnovt5n50pq"},{"post_id":"cjn0519z8000sxcnoddu32e94","tag_id":"cjn0519za000vxcnozt3ls0yq","_id":"cjn0519zg0018xcno8zjx6e1v"},{"post_id":"cjn0519zd0011xcnosevh4t3y","tag_id":"cjn0519za000vxcnozt3ls0yq","_id":"cjn0519zh001axcnodbpxf1cu"},{"post_id":"cjn0519ze0014xcnornu7g4ee","tag_id":"cjn0519za000vxcnozt3ls0yq","_id":"cjn0519zi001dxcnozat1hxel"},{"post_id":"cjn0519z9000uxcnobux1zhqy","tag_id":"cjn0519zd0012xcnow1rseopg","_id":"cjn0519zk001fxcno1wzddm3s"},{"post_id":"cjn0519zf0016xcnoiewufcqk","tag_id":"cjn0519z1000excnol3xd7udv","_id":"cjn0519zl001hxcnowyg190kd"},{"post_id":"cjn0519zb000xxcnooim39euo","tag_id":"cjn0519zg0017xcno87rdgspt","_id":"cjn0519zm001kxcnoosqn1cv1"},{"post_id":"cjn0519zh001bxcnoz6tfby5m","tag_id":"cjn0519zd0012xcnow1rseopg","_id":"cjn0519zn001mxcno8uomrelt"},{"post_id":"cjn0519zj001excnopyyx51yy","tag_id":"cjn0519zd0012xcnow1rseopg","_id":"cjn0519zp001oxcnovnl3dln4"},{"post_id":"cjn0519zc000zxcnor06y2p4s","tag_id":"cjn0519zd0012xcnow1rseopg","_id":"cjn0519zr001qxcno9dm1ebb9"},{"post_id":"cjn0519zl001ixcnonts9hlfy","tag_id":"cjn0519zg0017xcno87rdgspt","_id":"cjn0519zs001sxcnoki7ggjj3"},{"post_id":"cjn0519zm001lxcnokmzfrbs8","tag_id":"cjn0519zd0012xcnow1rseopg","_id":"cjn0519zt001uxcnof57wk30h"},{"post_id":"cjn0519zn001nxcnohptm5izu","tag_id":"cjn0519zg0017xcno87rdgspt","_id":"cjn0519zu001xxcnoi58u5vqr"},{"post_id":"cjn0519zk001gxcnodjxq4489","tag_id":"cjn0519zm001jxcno6trhbr6j","_id":"cjn0519zw001zxcno4gmn9x1z"},{"post_id":"cjn0519zq001pxcnodo0l0wev","tag_id":"cjn0519zd0012xcnow1rseopg","_id":"cjn0519zx0021xcnovxa369pp"},{"post_id":"cjn0519zr001rxcnomzof52a9","tag_id":"cjn0519z1000excnol3xd7udv","_id":"cjn0519zy0024xcnoobgs88f9"},{"post_id":"cjn0519zr001rxcnomzof52a9","tag_id":"cjn0519yy0009xcno5r32q2w4","_id":"cjn0519zz0026xcno3jkyewl7"},{"post_id":"cjn0519zv001yxcno1g24n1cg","tag_id":"cjn0519za000vxcnozt3ls0yq","_id":"cjn051a010029xcnorw0o7pcu"},{"post_id":"cjn0519zs001txcno1lhzwles","tag_id":"cjn0519zu001wxcnox8rx9757","_id":"cjn051a02002bxcno5tqizzzy"},{"post_id":"cjn0519zz0025xcnozse0mfhi","tag_id":"cjn0519zy0023xcnoq63aahnp","_id":"cjn051a03002excno1wi3x530"},{"post_id":"cjn0519zt001vxcnobnn6k4kj","tag_id":"cjn0519zy0023xcnoq63aahnp","_id":"cjn051a04002gxcno938shyyu"},{"post_id":"cjn0519zz0027xcno1wnojgxv","tag_id":"cjn0519yt0004xcnotxcz5a30","_id":"cjn051a05002ixcno8y82sm9f"},{"post_id":"cjn0519zz0027xcno1wnojgxv","tag_id":"cjn0519z7000oxcnootcagj7y","_id":"cjn051a06002jxcno5po1axeo"},{"post_id":"cjn051a01002axcnop23vjd7y","tag_id":"cjn051a000028xcnod5ejp9bu","_id":"cjn051a06002kxcno8th13iy8"},{"post_id":"cjn0519zw0020xcno3y78l0vq","tag_id":"cjn051a000028xcnod5ejp9bu","_id":"cjn051a06002lxcnosunk5imm"},{"post_id":"cjn051a02002cxcno6znl2hw4","tag_id":"cjn0519zu001wxcnox8rx9757","_id":"cjn051a06002mxcnoihqlfz3a"},{"post_id":"cjn051a03002fxcnopqmjlokm","tag_id":"cjn051a000028xcnod5ejp9bu","_id":"cjn051a06002nxcnobcj89370"},{"post_id":"cjn0519zx0022xcnosierzm6y","tag_id":"cjn051a000028xcnod5ejp9bu","_id":"cjn051a07002oxcnod3irvcun"},{"post_id":"cjn051a04002hxcnol6ypkeb1","tag_id":"cjn0519zu001wxcnox8rx9757","_id":"cjn051a07002pxcnok10wze38"}],"Tag":[{"name":"html","_id":"cjn0519yt0004xcnotxcz5a30"},{"name":"游戏","_id":"cjn0519yy0009xcno5r32q2w4"},{"name":"工具","_id":"cjn0519z1000excnol3xd7udv"},{"name":"总结","_id":"cjn0519z7000oxcnootcagj7y"},{"name":"javascript","_id":"cjn0519za000vxcnozt3ls0yq"},{"name":"命令行","_id":"cjn0519zd0012xcnow1rseopg"},{"name":"框架","_id":"cjn0519zg0017xcno87rdgspt"},{"name":"python","_id":"cjn0519zm001jxcno6trhbr6j"},{"name":"编程","_id":"cjn0519zu001wxcnox8rx9757"},{"name":"培训","_id":"cjn0519zy0023xcnoq63aahnp"},{"name":"运动","_id":"cjn051a000028xcnod5ejp9bu"}]}}