---
title: 工作经历
date: 2017-06-10 08:49:54
tags: 总结
---

一直都在很努力的工作，很努力的生活，可我发现，现在职业定位却有点迷茫   
 
2014年6月底来北京，刚开始在一个创业小公司做游戏前端，当时用着不是很熟练的C++，磕磕碰碰，写的代码惨不忍睹，在同事的协助下，完成第一个存在很多bug的三消游戏时，还特别得意，以为自己会成为牛逼的大神，为了早点上线，自己学习接SDK，当我接完短代支付和移动MM时，还特别开心，也特别热爱这份工作。后来，公司为了快速出产品，买了很多代码，换肤、接sdk变成自己公司的产品，而我就专职接起了SDK，天天和各种SDK打交道，移动、联通、电信、短代、sdk分发渠道。接的SDk多了，觉得没什么技术含量了，我觉得自己概换个工作了。  

离职后不知道做什么好，因为除了接SDK，感觉自己其实没学到多少东西。面试了很多家之后，有两个当时觉得还不错的offer，一个是做棋牌游戏前端，另一个是做手机应用APP，当时对OC和iphone开发完全陌生，面试题目也没写好，我都不知道这面试是怎么通过的。最终还是选择了前者，继续做游戏前端。入职后，被分到海外项目中，做德州扑克前端，用cocos2d-js框架，我又从0开始学起了js，学习玩德州，每周末还和同事一起去棋牌室玩一个小时，然后一起去吃大餐，德州是个会让人玩上瘾的游戏，每次离开棋牌室，我都有再玩一把的冲动。可惜好景不长，海外的市场运营情况不是很好，海外项目要撤了，当时有3个选择，一是去别的游戏组，二是离职，三是去新开的web项目中做网站开发前端，我选了第三个。    
    
2015年十月转做web前端，接触第一个java web项目，做棋牌游戏配置系统。当时项目组3个后端，2个前端，师傅带我一个月他就离职了，前端就我一个人了，接触web前端一个月就要成为前端主力，我每天都觉得自己快干不下去了，还好之前做游戏开发，js基础还是不错的，学的也挺快，做的页面只能说能看，并没有很好看的样式。在前后端联调的时候，总会有些传值什么的问题需要沟通，感觉自己不学点后端，做事很被动。然后就学习简单的数据库增删改查，前后端自己写，4月底完成了所有的开发功能，后端都被调到游戏组去当主力了，我自己维护系统。  

2016年6月，地方棋牌开始很火了，我们公司也开始做地方棋牌，当时是线下发展代理，做地方推广。我自己一个人去开发代理分销系统，维护游戏配置系统，还要做一些手机端落地页和游戏分享链接，当时很累也很觉得很充实，一个半月后，分销系统PC端和移动端都上线了。PC端没什么问题，移动端就苦逼了，各种IOS和Android的兼容问题，比如滚动条，Android正常，IOS使用overflow：hidden滑动不了，字体变形等问题。随着地方棋牌项目组的扩大，游戏数量剧增，游戏和系统被攻击过很多次，分销系统经过3次大改，在2016年12月底，兼容性、稳定性、安全性都做的比较完善了。  

2017年春节期间，想着换个新的工作，想把职业单纯定位到web前端，做官网之类的静态页面，因为之前做的开发为了赶进度，都是为了把功能做到最好，前端要求并不是很高，凑合能用就行，加班加点赶进度，太累了。过完春节回来的比别人晚一个星期，回公司第一天，就被叫去谈话，谈新开一个项目，游戏打包系统和支付系统，希望我能自己组建一个团队，完成这个项目开发。考虑了一个星期，我还是决定不离职了，去别的公司做个官网静态页面，什么时候都可以。而团队管理和产品，我却是新手，也是个可遇而不可求的机会，可以接触到更多的东西，多锻炼自己，接触面广一点多学一点，才嫩知道自己更适合做什么。  

我花了一个多月调研需求，画产品流程图和原型图，通过两次组内讨论和公司部门讨论，我的产品原型定稿，决定正式开始开发，这一个多月期间，很多次我感都觉是在和自己做斗争。也发现了很多自己的不足，比如我不爱思考，没耐心嫌麻烦，正好做产品就需要多思考，调研需求，反复修改，反复思考，我也在很努力的克服和改正。（而且发现不管是优秀的产品，还是优秀的程序，大多数都是耐心比较好的）  

刚开始去面试别人，每次都很紧张，尤其是那些和我同年毕业，或者比我毕业更早的人，我有点不太自信，也不知道面试该问什么，更不知道什么样的人才是符合要求的。各种各样的问题，尤其是入职的第一个前端，面试的时候有些人笔试题做的很好，问的基础感觉也说的很好，就是工作中干不了活。后来参加过公司面试官培训，面试的次数多了，面试也不会再紧张了，知道自己该问些什么了。  

招聘三个星期后入职了一个前端，三个后端，其中两个和我同年毕业，两个比我早一年毕业的。刚开始我小心翼翼的接纳每个人的想法，觉得他们都很厉害，我都没必要插手他们写的代码，还有一些开发细节，觉得做好自己的产品规划和需求就可以了。大概到5月份的时候，测试有些功能，我发现细节和预想的相差有点多，看代码质量，也和自己预想的大不一样，3个后端，有些页面不一样，功能是一样的，3个后端相互不清楚对方做的事，代码冗余太多，复用性太低了。这些应该是能预想到的，是我自己太想当然了，没有考虑到这一层，只和每个人说自己负责开发的模块，没有讲清楚整体的业务流程，于是制定了个前后端代码规和公共代码文档，分离公共类，每个人把自己新增的公共方法、接口、安装什么等，都写到文档里，别人更新代码后，遇到问题的时候，先看文档。  

前端、后端、产品、管理，做的虽然都不是很好，我也一直都很努力，做完这个项目，我需要好好考虑一下自己的职业定位，考虑一个明确点的定位。





